// Generated by dart2js (CSP), the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferered library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
(function() {
  // /* ::norenaming:: */
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    return object.__proto__ && object.__proto__.p === cls.prototype.p;
  }();
  function map(x) {
    x = Object.create(null);
    x.x = 0;
    delete x.x;
    return x;
  }
  // The global objects start as so-called "slow objects". For V8, this
  // means that it won't try to make map transitions as we add properties
  // to these objects. Later on, we attempt to turn these objects into
  // fast objects by calling "convertToFastObject" (see
  // [emitConvertToFastObjectFunction]).
  var A = map();
  var B = map();
  var C = map();
  var D = map();
  var E = map();
  var F = map();
  var G = map();
  var H = map();
  var J = map();
  var K = map();
  var L = map();
  var M = map();
  var N = map();
  var O = map();
  var P = map();
  var Q = map();
  var R = map();
  var S = map();
  var T = map();
  var U = map();
  var V = map();
  var W = map();
  var X = map();
  var Y = map();
  var Z = map();
  function Isolate() {
  }
  init();
  init.mangledNames = {call$0: "call:0", call$1: "call:1", call$1$growable: "call:0:growable", call$1$host: "call:0:host", call$1$path: "call:0:path", call$1$scheme: "call:0:scheme", call$2: "call:2", call$2$cancelOnError: "call:1:cancelOnError", call$2$onError: "call:1:onError", call$2$runGuarded: "call:1:runGuarded", call$3: "call:3", call$3$async: "call:2:async", call$3$onDone$onError: "call:1:onDone:onError", call$4: "call:4", call$4$cancelOnError$onDone$onError: "call:1:cancelOnError:onDone:onError", call$5: "call:5"};
  init.precompiled = function($collectedClasses$) {
    // ::norenaming::
    var $desc;
    function JS_CONST(code) {
      this.code = code;
      this.$deferredAction();
    }
    JS_CONST.builtin$cls = "JS_CONST";
    if (!("name" in JS_CONST))
      JS_CONST.name = "JS_CONST";
    $desc = $collectedClasses$.JS_CONST[1];
    JS_CONST.prototype = $desc;
    JS_CONST.$__fields__ = ["code"];
    function Interceptor() {
      this.$deferredAction();
    }
    Interceptor.builtin$cls = "Interceptor";
    if (!("name" in Interceptor))
      Interceptor.name = "Interceptor";
    $desc = $collectedClasses$.Interceptor[1];
    Interceptor.prototype = $desc;
    Interceptor.$__fields__ = [];
    function JSBool() {
      this.$deferredAction();
    }
    JSBool.builtin$cls = "JSBool";
    if (!("name" in JSBool))
      JSBool.name = "JSBool";
    $desc = $collectedClasses$.JSBool[1];
    JSBool.prototype = $desc;
    JSBool.$__fields__ = [];
    function JSNull() {
      this.$deferredAction();
    }
    JSNull.builtin$cls = "JSNull";
    if (!("name" in JSNull))
      JSNull.name = "JSNull";
    $desc = $collectedClasses$.JSNull[1];
    JSNull.prototype = $desc;
    JSNull.$__fields__ = [];
    function JavaScriptObject() {
      this.$deferredAction();
    }
    JavaScriptObject.builtin$cls = "JavaScriptObject";
    if (!("name" in JavaScriptObject))
      JavaScriptObject.name = "JavaScriptObject";
    $desc = $collectedClasses$.JavaScriptObject[1];
    JavaScriptObject.prototype = $desc;
    JavaScriptObject.$__fields__ = [];
    function PlainJavaScriptObject() {
      this.$deferredAction();
    }
    PlainJavaScriptObject.builtin$cls = "PlainJavaScriptObject";
    if (!("name" in PlainJavaScriptObject))
      PlainJavaScriptObject.name = "PlainJavaScriptObject";
    $desc = $collectedClasses$.PlainJavaScriptObject[1];
    PlainJavaScriptObject.prototype = $desc;
    PlainJavaScriptObject.$__fields__ = [];
    function UnknownJavaScriptObject() {
      this.$deferredAction();
    }
    UnknownJavaScriptObject.builtin$cls = "UnknownJavaScriptObject";
    if (!("name" in UnknownJavaScriptObject))
      UnknownJavaScriptObject.name = "UnknownJavaScriptObject";
    $desc = $collectedClasses$.UnknownJavaScriptObject[1];
    UnknownJavaScriptObject.prototype = $desc;
    UnknownJavaScriptObject.$__fields__ = [];
    function JavaScriptFunction() {
      this.$deferredAction();
    }
    JavaScriptFunction.builtin$cls = "JavaScriptFunction";
    if (!("name" in JavaScriptFunction))
      JavaScriptFunction.name = "JavaScriptFunction";
    $desc = $collectedClasses$.JavaScriptFunction[1];
    JavaScriptFunction.prototype = $desc;
    JavaScriptFunction.$__fields__ = [];
    function JSArray() {
      this.$deferredAction();
    }
    JSArray.builtin$cls = "JSArray";
    if (!("name" in JSArray))
      JSArray.name = "JSArray";
    $desc = $collectedClasses$.JSArray[1];
    JSArray.prototype = $desc;
    JSArray.$__fields__ = [];
    function JSUnmodifiableArray() {
      this.$deferredAction();
    }
    JSUnmodifiableArray.builtin$cls = "JSUnmodifiableArray";
    if (!("name" in JSUnmodifiableArray))
      JSUnmodifiableArray.name = "JSUnmodifiableArray";
    $desc = $collectedClasses$.JSUnmodifiableArray[1];
    JSUnmodifiableArray.prototype = $desc;
    JSUnmodifiableArray.$__fields__ = [];
    function ArrayIterator(_iterable, __interceptors$_length, _index, __interceptors$_current) {
      this._iterable = _iterable;
      this.__interceptors$_length = __interceptors$_length;
      this._index = _index;
      this.__interceptors$_current = __interceptors$_current;
      this.$deferredAction();
    }
    ArrayIterator.builtin$cls = "ArrayIterator";
    if (!("name" in ArrayIterator))
      ArrayIterator.name = "ArrayIterator";
    $desc = $collectedClasses$.ArrayIterator[1];
    ArrayIterator.prototype = $desc;
    ArrayIterator.$__fields__ = ["_iterable", "__interceptors$_length", "_index", "__interceptors$_current"];
    function JSNumber() {
      this.$deferredAction();
    }
    JSNumber.builtin$cls = "JSNumber";
    if (!("name" in JSNumber))
      JSNumber.name = "JSNumber";
    $desc = $collectedClasses$.JSNumber[1];
    JSNumber.prototype = $desc;
    JSNumber.$__fields__ = [];
    function JSInt() {
      this.$deferredAction();
    }
    JSInt.builtin$cls = "JSInt";
    if (!("name" in JSInt))
      JSInt.name = "JSInt";
    $desc = $collectedClasses$.JSInt[1];
    JSInt.prototype = $desc;
    JSInt.$__fields__ = [];
    function JSDouble() {
      this.$deferredAction();
    }
    JSDouble.builtin$cls = "JSDouble";
    if (!("name" in JSDouble))
      JSDouble.name = "JSDouble";
    $desc = $collectedClasses$.JSDouble[1];
    JSDouble.prototype = $desc;
    JSDouble.$__fields__ = [];
    function JSString() {
      this.$deferredAction();
    }
    JSString.builtin$cls = "JSString";
    if (!("name" in JSString))
      JSString.name = "JSString";
    $desc = $collectedClasses$.JSString[1];
    JSString.prototype = $desc;
    JSString.$__fields__ = [];
    function startRootIsolate_closure(__isolate_helper$_box_0, _captured_entry_1) {
      this.__isolate_helper$_box_0 = __isolate_helper$_box_0;
      this._captured_entry_1 = _captured_entry_1;
      this.$deferredAction();
    }
    startRootIsolate_closure.builtin$cls = "startRootIsolate_closure";
    if (!("name" in startRootIsolate_closure))
      startRootIsolate_closure.name = "startRootIsolate_closure";
    $desc = $collectedClasses$.startRootIsolate_closure[1];
    startRootIsolate_closure.prototype = $desc;
    startRootIsolate_closure.$__fields__ = ["__isolate_helper$_box_0", "_captured_entry_1"];
    function startRootIsolate_closure0(__isolate_helper$_box_0, _captured_entry_2) {
      this.__isolate_helper$_box_0 = __isolate_helper$_box_0;
      this._captured_entry_2 = _captured_entry_2;
      this.$deferredAction();
    }
    startRootIsolate_closure0.builtin$cls = "startRootIsolate_closure0";
    if (!("name" in startRootIsolate_closure0))
      startRootIsolate_closure0.name = "startRootIsolate_closure0";
    $desc = $collectedClasses$.startRootIsolate_closure0[1];
    startRootIsolate_closure0.prototype = $desc;
    startRootIsolate_closure0.$__fields__ = ["__isolate_helper$_box_0", "_captured_entry_2"];
    function _Manager(nextIsolateId, currentManagerId, nextManagerId, currentContext, rootContext, topEventLoop, fromCommandLine, isWorker, supportsWorkers, isolates, mainManager, managers, entry) {
      this.nextIsolateId = nextIsolateId;
      this.currentManagerId = currentManagerId;
      this.nextManagerId = nextManagerId;
      this.currentContext = currentContext;
      this.rootContext = rootContext;
      this.topEventLoop = topEventLoop;
      this.fromCommandLine = fromCommandLine;
      this.isWorker = isWorker;
      this.supportsWorkers = supportsWorkers;
      this.isolates = isolates;
      this.mainManager = mainManager;
      this.managers = managers;
      this.entry = entry;
      this.$deferredAction();
    }
    _Manager.builtin$cls = "_Manager";
    if (!("name" in _Manager))
      _Manager.name = "_Manager";
    $desc = $collectedClasses$._Manager[1];
    _Manager.prototype = $desc;
    _Manager.$__fields__ = ["nextIsolateId", "currentManagerId", "nextManagerId", "currentContext", "rootContext", "topEventLoop", "fromCommandLine", "isWorker", "supportsWorkers", "isolates", "mainManager", "managers", "entry"];
    function _IsolateContext(id, ports, weakPorts, isolateStatics, controlPort, pauseCapability, terminateCapability, initialized, isPaused, delayedEvents, pauseTokens, doneHandlers, _scheduledControlEvents, _isExecutingEvent, errorsAreFatal, errorPorts) {
      this.id = id;
      this.ports = ports;
      this.weakPorts = weakPorts;
      this.isolateStatics = isolateStatics;
      this.controlPort = controlPort;
      this.pauseCapability = pauseCapability;
      this.terminateCapability = terminateCapability;
      this.initialized = initialized;
      this.isPaused = isPaused;
      this.delayedEvents = delayedEvents;
      this.pauseTokens = pauseTokens;
      this.doneHandlers = doneHandlers;
      this._scheduledControlEvents = _scheduledControlEvents;
      this._isExecutingEvent = _isExecutingEvent;
      this.errorsAreFatal = errorsAreFatal;
      this.errorPorts = errorPorts;
      this.$deferredAction();
    }
    _IsolateContext.builtin$cls = "_IsolateContext";
    if (!("name" in _IsolateContext))
      _IsolateContext.name = "_IsolateContext";
    $desc = $collectedClasses$._IsolateContext[1];
    _IsolateContext.prototype = $desc;
    _IsolateContext.$__fields__ = ["id", "ports", "weakPorts", "isolateStatics", "controlPort", "pauseCapability", "terminateCapability", "initialized", "isPaused", "delayedEvents", "pauseTokens", "doneHandlers", "_scheduledControlEvents", "_isExecutingEvent", "errorsAreFatal", "errorPorts"];
    _IsolateContext.prototype.get$id = function(receiver) {
      return this.id;
    };
    _IsolateContext.prototype.get$isolateStatics = function() {
      return this.isolateStatics;
    };
    _IsolateContext.prototype.get$controlPort = function() {
      return this.controlPort;
    };
    _IsolateContext.prototype.set$initialized = function(v) {
      return this.initialized = v;
    };
    _IsolateContext.prototype.get$isPaused = function() {
      return this.isPaused;
    };
    _IsolateContext.prototype.get$delayedEvents = function() {
      return this.delayedEvents;
    };
    function _IsolateContext_handlePing_respond(_captured_responsePort_0, _captured_response_1) {
      this._captured_responsePort_0 = _captured_responsePort_0;
      this._captured_response_1 = _captured_response_1;
      this.$deferredAction();
    }
    _IsolateContext_handlePing_respond.builtin$cls = "_IsolateContext_handlePing_respond";
    if (!("name" in _IsolateContext_handlePing_respond))
      _IsolateContext_handlePing_respond.name = "_IsolateContext_handlePing_respond";
    $desc = $collectedClasses$._IsolateContext_handlePing_respond[1];
    _IsolateContext_handlePing_respond.prototype = $desc;
    _IsolateContext_handlePing_respond.$__fields__ = ["_captured_responsePort_0", "_captured_response_1"];
    function _EventLoop(events, _activeJsAsyncCount) {
      this.events = events;
      this._activeJsAsyncCount = _activeJsAsyncCount;
      this.$deferredAction();
    }
    _EventLoop.builtin$cls = "_EventLoop";
    if (!("name" in _EventLoop))
      _EventLoop.name = "_EventLoop";
    $desc = $collectedClasses$._EventLoop[1];
    _EventLoop.prototype = $desc;
    _EventLoop.$__fields__ = ["events", "_activeJsAsyncCount"];
    function _EventLoop__runHelper_next(__isolate_helper$_captured_this_0) {
      this.__isolate_helper$_captured_this_0 = __isolate_helper$_captured_this_0;
      this.$deferredAction();
    }
    _EventLoop__runHelper_next.builtin$cls = "_EventLoop__runHelper_next";
    if (!("name" in _EventLoop__runHelper_next))
      _EventLoop__runHelper_next.name = "_EventLoop__runHelper_next";
    $desc = $collectedClasses$._EventLoop__runHelper_next[1];
    _EventLoop__runHelper_next.prototype = $desc;
    _EventLoop__runHelper_next.$__fields__ = ["__isolate_helper$_captured_this_0"];
    function _IsolateEvent(isolate, fn, message) {
      this.isolate = isolate;
      this.fn = fn;
      this.message = message;
      this.$deferredAction();
    }
    _IsolateEvent.builtin$cls = "_IsolateEvent";
    if (!("name" in _IsolateEvent))
      _IsolateEvent.name = "_IsolateEvent";
    $desc = $collectedClasses$._IsolateEvent[1];
    _IsolateEvent.prototype = $desc;
    _IsolateEvent.$__fields__ = ["isolate", "fn", "message"];
    function _MainManagerStub() {
      this.$deferredAction();
    }
    _MainManagerStub.builtin$cls = "_MainManagerStub";
    if (!("name" in _MainManagerStub))
      _MainManagerStub.name = "_MainManagerStub";
    $desc = $collectedClasses$._MainManagerStub[1];
    _MainManagerStub.prototype = $desc;
    _MainManagerStub.$__fields__ = [];
    function IsolateNatives__processWorkerMessage_closure(_captured_entryPoint_0, _captured_args_1, _captured_message_2, _captured_isSpawnUri_3, _captured_startPaused_4, _captured_replyTo_5) {
      this._captured_entryPoint_0 = _captured_entryPoint_0;
      this._captured_args_1 = _captured_args_1;
      this._captured_message_2 = _captured_message_2;
      this._captured_isSpawnUri_3 = _captured_isSpawnUri_3;
      this._captured_startPaused_4 = _captured_startPaused_4;
      this._captured_replyTo_5 = _captured_replyTo_5;
      this.$deferredAction();
    }
    IsolateNatives__processWorkerMessage_closure.builtin$cls = "IsolateNatives__processWorkerMessage_closure";
    if (!("name" in IsolateNatives__processWorkerMessage_closure))
      IsolateNatives__processWorkerMessage_closure.name = "IsolateNatives__processWorkerMessage_closure";
    $desc = $collectedClasses$.IsolateNatives__processWorkerMessage_closure[1];
    IsolateNatives__processWorkerMessage_closure.prototype = $desc;
    IsolateNatives__processWorkerMessage_closure.$__fields__ = ["_captured_entryPoint_0", "_captured_args_1", "_captured_message_2", "_captured_isSpawnUri_3", "_captured_startPaused_4", "_captured_replyTo_5"];
    function IsolateNatives__startIsolate_runStartFunction(_captured_topLevel_0, _captured_args_1, _captured_message_2, _captured_isSpawnUri_3, _captured_context_4) {
      this._captured_topLevel_0 = _captured_topLevel_0;
      this._captured_args_1 = _captured_args_1;
      this._captured_message_2 = _captured_message_2;
      this._captured_isSpawnUri_3 = _captured_isSpawnUri_3;
      this._captured_context_4 = _captured_context_4;
      this.$deferredAction();
    }
    IsolateNatives__startIsolate_runStartFunction.builtin$cls = "IsolateNatives__startIsolate_runStartFunction";
    if (!("name" in IsolateNatives__startIsolate_runStartFunction))
      IsolateNatives__startIsolate_runStartFunction.name = "IsolateNatives__startIsolate_runStartFunction";
    $desc = $collectedClasses$.IsolateNatives__startIsolate_runStartFunction[1];
    IsolateNatives__startIsolate_runStartFunction.prototype = $desc;
    IsolateNatives__startIsolate_runStartFunction.$__fields__ = ["_captured_topLevel_0", "_captured_args_1", "_captured_message_2", "_captured_isSpawnUri_3", "_captured_context_4"];
    function _BaseSendPort() {
      this.$deferredAction();
    }
    _BaseSendPort.builtin$cls = "_BaseSendPort";
    if (!("name" in _BaseSendPort))
      _BaseSendPort.name = "_BaseSendPort";
    $desc = $collectedClasses$._BaseSendPort[1];
    _BaseSendPort.prototype = $desc;
    _BaseSendPort.$__fields__ = [];
    function _NativeJsSendPort(_receivePort, _isolateId) {
      this._receivePort = _receivePort;
      this._isolateId = _isolateId;
      this.$deferredAction();
    }
    _NativeJsSendPort.builtin$cls = "_NativeJsSendPort";
    if (!("name" in _NativeJsSendPort))
      _NativeJsSendPort.name = "_NativeJsSendPort";
    $desc = $collectedClasses$._NativeJsSendPort[1];
    _NativeJsSendPort.prototype = $desc;
    _NativeJsSendPort.$__fields__ = ["_receivePort", "_isolateId"];
    function _NativeJsSendPort_send_closure(__isolate_helper$_captured_this_0, _captured_msg_1) {
      this.__isolate_helper$_captured_this_0 = __isolate_helper$_captured_this_0;
      this._captured_msg_1 = _captured_msg_1;
      this.$deferredAction();
    }
    _NativeJsSendPort_send_closure.builtin$cls = "_NativeJsSendPort_send_closure";
    if (!("name" in _NativeJsSendPort_send_closure))
      _NativeJsSendPort_send_closure.name = "_NativeJsSendPort_send_closure";
    $desc = $collectedClasses$._NativeJsSendPort_send_closure[1];
    _NativeJsSendPort_send_closure.prototype = $desc;
    _NativeJsSendPort_send_closure.$__fields__ = ["__isolate_helper$_captured_this_0", "_captured_msg_1"];
    function _WorkerSendPort(_workerId, _receivePortId, _isolateId) {
      this._workerId = _workerId;
      this._receivePortId = _receivePortId;
      this._isolateId = _isolateId;
      this.$deferredAction();
    }
    _WorkerSendPort.builtin$cls = "_WorkerSendPort";
    if (!("name" in _WorkerSendPort))
      _WorkerSendPort.name = "_WorkerSendPort";
    $desc = $collectedClasses$._WorkerSendPort[1];
    _WorkerSendPort.prototype = $desc;
    _WorkerSendPort.$__fields__ = ["_workerId", "_receivePortId", "_isolateId"];
    function RawReceivePortImpl(_id, _handler, _isClosed) {
      this._id = _id;
      this._handler = _handler;
      this._isClosed = _isClosed;
      this.$deferredAction();
    }
    RawReceivePortImpl.builtin$cls = "RawReceivePortImpl";
    if (!("name" in RawReceivePortImpl))
      RawReceivePortImpl.name = "RawReceivePortImpl";
    $desc = $collectedClasses$.RawReceivePortImpl[1];
    RawReceivePortImpl.prototype = $desc;
    RawReceivePortImpl.$__fields__ = ["_id", "_handler", "_isClosed"];
    RawReceivePortImpl.prototype.get$_id = function() {
      return this._id;
    };
    RawReceivePortImpl.prototype.get$_isClosed = function() {
      return this._isClosed;
    };
    function TimerImpl(_once, _inEventLoop, _handle) {
      this._once = _once;
      this._inEventLoop = _inEventLoop;
      this._handle = _handle;
      this.$deferredAction();
    }
    TimerImpl.builtin$cls = "TimerImpl";
    if (!("name" in TimerImpl))
      TimerImpl.name = "TimerImpl";
    $desc = $collectedClasses$.TimerImpl[1];
    TimerImpl.prototype = $desc;
    TimerImpl.$__fields__ = ["_once", "_inEventLoop", "_handle"];
    function TimerImpl_internalCallback(__isolate_helper$_captured_this_0, _captured_callback_1) {
      this.__isolate_helper$_captured_this_0 = __isolate_helper$_captured_this_0;
      this._captured_callback_1 = _captured_callback_1;
      this.$deferredAction();
    }
    TimerImpl_internalCallback.builtin$cls = "TimerImpl_internalCallback";
    if (!("name" in TimerImpl_internalCallback))
      TimerImpl_internalCallback.name = "TimerImpl_internalCallback";
    $desc = $collectedClasses$.TimerImpl_internalCallback[1];
    TimerImpl_internalCallback.prototype = $desc;
    TimerImpl_internalCallback.$__fields__ = ["__isolate_helper$_captured_this_0", "_captured_callback_1"];
    function TimerImpl_internalCallback0(__isolate_helper$_captured_this_2, _captured_callback_3) {
      this.__isolate_helper$_captured_this_2 = __isolate_helper$_captured_this_2;
      this._captured_callback_3 = _captured_callback_3;
      this.$deferredAction();
    }
    TimerImpl_internalCallback0.builtin$cls = "TimerImpl_internalCallback0";
    if (!("name" in TimerImpl_internalCallback0))
      TimerImpl_internalCallback0.name = "TimerImpl_internalCallback0";
    $desc = $collectedClasses$.TimerImpl_internalCallback0[1];
    TimerImpl_internalCallback0.prototype = $desc;
    TimerImpl_internalCallback0.$__fields__ = ["__isolate_helper$_captured_this_2", "_captured_callback_3"];
    function CapabilityImpl(_id) {
      this._id = _id;
      this.$deferredAction();
    }
    CapabilityImpl.builtin$cls = "CapabilityImpl";
    if (!("name" in CapabilityImpl))
      CapabilityImpl.name = "CapabilityImpl";
    $desc = $collectedClasses$.CapabilityImpl[1];
    CapabilityImpl.prototype = $desc;
    CapabilityImpl.$__fields__ = ["_id"];
    CapabilityImpl.prototype.get$_id = function() {
      return this._id;
    };
    function _Serializer(_serializeSendPorts, serializedObjectIds) {
      this._serializeSendPorts = _serializeSendPorts;
      this.serializedObjectIds = serializedObjectIds;
      this.$deferredAction();
    }
    _Serializer.builtin$cls = "_Serializer";
    if (!("name" in _Serializer))
      _Serializer.name = "_Serializer";
    $desc = $collectedClasses$._Serializer[1];
    _Serializer.prototype = $desc;
    _Serializer.$__fields__ = ["_serializeSendPorts", "serializedObjectIds"];
    function _Deserializer(_adjustSendPorts, deserializedObjects) {
      this._adjustSendPorts = _adjustSendPorts;
      this.deserializedObjects = deserializedObjects;
      this.$deferredAction();
    }
    _Deserializer.builtin$cls = "_Deserializer";
    if (!("name" in _Deserializer))
      _Deserializer.name = "_Deserializer";
    $desc = $collectedClasses$._Deserializer[1];
    _Deserializer.prototype = $desc;
    _Deserializer.$__fields__ = ["_adjustSendPorts", "deserializedObjects"];
    function ConstantMapView(_map) {
      this._map = _map;
      this.$deferredAction();
    }
    ConstantMapView.builtin$cls = "ConstantMapView";
    if (!("name" in ConstantMapView))
      ConstantMapView.name = "ConstantMapView";
    $desc = $collectedClasses$.ConstantMapView[1];
    ConstantMapView.prototype = $desc;
    ConstantMapView.$__fields__ = ["_map"];
    function ConstantMap() {
      this.$deferredAction();
    }
    ConstantMap.builtin$cls = "ConstantMap";
    if (!("name" in ConstantMap))
      ConstantMap.name = "ConstantMap";
    $desc = $collectedClasses$.ConstantMap[1];
    ConstantMap.prototype = $desc;
    ConstantMap.$__fields__ = [];
    function ConstantStringMap(length, __js_helper$_jsObject, __js_helper$_keys) {
      this.length = length;
      this.__js_helper$_jsObject = __js_helper$_jsObject;
      this.__js_helper$_keys = __js_helper$_keys;
      this.$deferredAction();
    }
    ConstantStringMap.builtin$cls = "ConstantStringMap";
    if (!("name" in ConstantStringMap))
      ConstantStringMap.name = "ConstantStringMap";
    $desc = $collectedClasses$.ConstantStringMap[1];
    ConstantStringMap.prototype = $desc;
    ConstantStringMap.$__fields__ = ["length", "__js_helper$_jsObject", "__js_helper$_keys"];
    ConstantStringMap.prototype.get$length = function(receiver) {
      return this.length;
    };
    function ConstantProtoMap(_protoValue, length, __js_helper$_jsObject, __js_helper$_keys) {
      this._protoValue = _protoValue;
      this.length = length;
      this.__js_helper$_jsObject = __js_helper$_jsObject;
      this.__js_helper$_keys = __js_helper$_keys;
      this.$deferredAction();
    }
    ConstantProtoMap.builtin$cls = "ConstantProtoMap";
    if (!("name" in ConstantProtoMap))
      ConstantProtoMap.name = "ConstantProtoMap";
    $desc = $collectedClasses$.ConstantProtoMap[1];
    ConstantProtoMap.prototype = $desc;
    ConstantProtoMap.$__fields__ = ["_protoValue", "length", "__js_helper$_jsObject", "__js_helper$_keys"];
    function _ConstantMapKeyIterable(__js_helper$_map) {
      this.__js_helper$_map = __js_helper$_map;
      this.$deferredAction();
    }
    _ConstantMapKeyIterable.builtin$cls = "_ConstantMapKeyIterable";
    if (!("name" in _ConstantMapKeyIterable))
      _ConstantMapKeyIterable.name = "_ConstantMapKeyIterable";
    $desc = $collectedClasses$._ConstantMapKeyIterable[1];
    _ConstantMapKeyIterable.prototype = $desc;
    _ConstantMapKeyIterable.$__fields__ = ["__js_helper$_map"];
    function GeneralConstantMap(_jsData) {
      this._jsData = _jsData;
      this.$deferredAction();
    }
    GeneralConstantMap.builtin$cls = "GeneralConstantMap";
    if (!("name" in GeneralConstantMap))
      GeneralConstantMap.name = "GeneralConstantMap";
    $desc = $collectedClasses$.GeneralConstantMap[1];
    GeneralConstantMap.prototype = $desc;
    GeneralConstantMap.$__fields__ = ["_jsData"];
    function JSInvocationMirror(_memberName, _internalName, _kind, _arguments, _namedArgumentNames, _namedIndices) {
      this._memberName = _memberName;
      this._internalName = _internalName;
      this._kind = _kind;
      this._arguments = _arguments;
      this._namedArgumentNames = _namedArgumentNames;
      this._namedIndices = _namedIndices;
      this.$deferredAction();
    }
    JSInvocationMirror.builtin$cls = "JSInvocationMirror";
    if (!("name" in JSInvocationMirror))
      JSInvocationMirror.name = "JSInvocationMirror";
    $desc = $collectedClasses$.JSInvocationMirror[1];
    JSInvocationMirror.prototype = $desc;
    JSInvocationMirror.$__fields__ = ["_memberName", "_internalName", "_kind", "_arguments", "_namedArgumentNames", "_namedIndices"];
    function ReflectionInfo(jsFunction, data, isAccessor, requiredParameterCount, optionalParameterCount, areOptionalParametersNamed, functionType, cachedSortedIndices) {
      this.jsFunction = jsFunction;
      this.data = data;
      this.isAccessor = isAccessor;
      this.requiredParameterCount = requiredParameterCount;
      this.optionalParameterCount = optionalParameterCount;
      this.areOptionalParametersNamed = areOptionalParametersNamed;
      this.functionType = functionType;
      this.cachedSortedIndices = cachedSortedIndices;
      this.$deferredAction();
    }
    ReflectionInfo.builtin$cls = "ReflectionInfo";
    if (!("name" in ReflectionInfo))
      ReflectionInfo.name = "ReflectionInfo";
    $desc = $collectedClasses$.ReflectionInfo[1];
    ReflectionInfo.prototype = $desc;
    ReflectionInfo.$__fields__ = ["jsFunction", "data", "isAccessor", "requiredParameterCount", "optionalParameterCount", "areOptionalParametersNamed", "functionType", "cachedSortedIndices"];
    function Primitives_functionNoSuchMethod_closure(__js_helper$_box_0, _captured_arguments_1, _captured_namedArgumentList_2) {
      this.__js_helper$_box_0 = __js_helper$_box_0;
      this._captured_arguments_1 = _captured_arguments_1;
      this._captured_namedArgumentList_2 = _captured_namedArgumentList_2;
      this.$deferredAction();
    }
    Primitives_functionNoSuchMethod_closure.builtin$cls = "Primitives_functionNoSuchMethod_closure";
    if (!("name" in Primitives_functionNoSuchMethod_closure))
      Primitives_functionNoSuchMethod_closure.name = "Primitives_functionNoSuchMethod_closure";
    $desc = $collectedClasses$.Primitives_functionNoSuchMethod_closure[1];
    Primitives_functionNoSuchMethod_closure.prototype = $desc;
    Primitives_functionNoSuchMethod_closure.$__fields__ = ["__js_helper$_box_0", "_captured_arguments_1", "_captured_namedArgumentList_2"];
    function TypeErrorDecoder(_pattern, _arguments, _argumentsExpr, _expr, _method, _receiver) {
      this._pattern = _pattern;
      this._arguments = _arguments;
      this._argumentsExpr = _argumentsExpr;
      this._expr = _expr;
      this._method = _method;
      this._receiver = _receiver;
      this.$deferredAction();
    }
    TypeErrorDecoder.builtin$cls = "TypeErrorDecoder";
    if (!("name" in TypeErrorDecoder))
      TypeErrorDecoder.name = "TypeErrorDecoder";
    $desc = $collectedClasses$.TypeErrorDecoder[1];
    TypeErrorDecoder.prototype = $desc;
    TypeErrorDecoder.$__fields__ = ["_pattern", "_arguments", "_argumentsExpr", "_expr", "_method", "_receiver"];
    function NullError(_message, _method) {
      this._message = _message;
      this._method = _method;
      this.$deferredAction();
    }
    NullError.builtin$cls = "NullError";
    if (!("name" in NullError))
      NullError.name = "NullError";
    $desc = $collectedClasses$.NullError[1];
    NullError.prototype = $desc;
    NullError.$__fields__ = ["_message", "_method"];
    function JsNoSuchMethodError(_message, _method, _receiver) {
      this._message = _message;
      this._method = _method;
      this._receiver = _receiver;
      this.$deferredAction();
    }
    JsNoSuchMethodError.builtin$cls = "JsNoSuchMethodError";
    if (!("name" in JsNoSuchMethodError))
      JsNoSuchMethodError.name = "JsNoSuchMethodError";
    $desc = $collectedClasses$.JsNoSuchMethodError[1];
    JsNoSuchMethodError.prototype = $desc;
    JsNoSuchMethodError.$__fields__ = ["_message", "_method", "_receiver"];
    function UnknownJsTypeError(_message) {
      this._message = _message;
      this.$deferredAction();
    }
    UnknownJsTypeError.builtin$cls = "UnknownJsTypeError";
    if (!("name" in UnknownJsTypeError))
      UnknownJsTypeError.name = "UnknownJsTypeError";
    $desc = $collectedClasses$.UnknownJsTypeError[1];
    UnknownJsTypeError.prototype = $desc;
    UnknownJsTypeError.$__fields__ = ["_message"];
    function ExceptionAndStackTrace(dartException, stackTrace) {
      this.dartException = dartException;
      this.stackTrace = stackTrace;
      this.$deferredAction();
    }
    ExceptionAndStackTrace.builtin$cls = "ExceptionAndStackTrace";
    if (!("name" in ExceptionAndStackTrace))
      ExceptionAndStackTrace.name = "ExceptionAndStackTrace";
    $desc = $collectedClasses$.ExceptionAndStackTrace[1];
    ExceptionAndStackTrace.prototype = $desc;
    ExceptionAndStackTrace.$__fields__ = ["dartException", "stackTrace"];
    ExceptionAndStackTrace.prototype.get$stackTrace = function() {
      return this.stackTrace;
    };
    function unwrapException_saveStackTrace(_captured_ex_0) {
      this._captured_ex_0 = _captured_ex_0;
      this.$deferredAction();
    }
    unwrapException_saveStackTrace.builtin$cls = "unwrapException_saveStackTrace";
    if (!("name" in unwrapException_saveStackTrace))
      unwrapException_saveStackTrace.name = "unwrapException_saveStackTrace";
    $desc = $collectedClasses$.unwrapException_saveStackTrace[1];
    unwrapException_saveStackTrace.prototype = $desc;
    unwrapException_saveStackTrace.$__fields__ = ["_captured_ex_0"];
    function _StackTrace(_exception, _trace) {
      this._exception = _exception;
      this._trace = _trace;
      this.$deferredAction();
    }
    _StackTrace.builtin$cls = "_StackTrace";
    if (!("name" in _StackTrace))
      _StackTrace.name = "_StackTrace";
    $desc = $collectedClasses$._StackTrace[1];
    _StackTrace.prototype = $desc;
    _StackTrace.$__fields__ = ["_exception", "_trace"];
    function invokeClosure_closure(_captured_closure_0) {
      this._captured_closure_0 = _captured_closure_0;
      this.$deferredAction();
    }
    invokeClosure_closure.builtin$cls = "invokeClosure_closure";
    if (!("name" in invokeClosure_closure))
      invokeClosure_closure.name = "invokeClosure_closure";
    $desc = $collectedClasses$.invokeClosure_closure[1];
    invokeClosure_closure.prototype = $desc;
    invokeClosure_closure.$__fields__ = ["_captured_closure_0"];
    function invokeClosure_closure0(_captured_closure_1, _captured_arg1_2) {
      this._captured_closure_1 = _captured_closure_1;
      this._captured_arg1_2 = _captured_arg1_2;
      this.$deferredAction();
    }
    invokeClosure_closure0.builtin$cls = "invokeClosure_closure0";
    if (!("name" in invokeClosure_closure0))
      invokeClosure_closure0.name = "invokeClosure_closure0";
    $desc = $collectedClasses$.invokeClosure_closure0[1];
    invokeClosure_closure0.prototype = $desc;
    invokeClosure_closure0.$__fields__ = ["_captured_closure_1", "_captured_arg1_2"];
    function invokeClosure_closure1(_captured_closure_3, _captured_arg1_4, _captured_arg2_5) {
      this._captured_closure_3 = _captured_closure_3;
      this._captured_arg1_4 = _captured_arg1_4;
      this._captured_arg2_5 = _captured_arg2_5;
      this.$deferredAction();
    }
    invokeClosure_closure1.builtin$cls = "invokeClosure_closure1";
    if (!("name" in invokeClosure_closure1))
      invokeClosure_closure1.name = "invokeClosure_closure1";
    $desc = $collectedClasses$.invokeClosure_closure1[1];
    invokeClosure_closure1.prototype = $desc;
    invokeClosure_closure1.$__fields__ = ["_captured_closure_3", "_captured_arg1_4", "_captured_arg2_5"];
    function invokeClosure_closure2(_captured_closure_6, _captured_arg1_7, _captured_arg2_8, _captured_arg3_9) {
      this._captured_closure_6 = _captured_closure_6;
      this._captured_arg1_7 = _captured_arg1_7;
      this._captured_arg2_8 = _captured_arg2_8;
      this._captured_arg3_9 = _captured_arg3_9;
      this.$deferredAction();
    }
    invokeClosure_closure2.builtin$cls = "invokeClosure_closure2";
    if (!("name" in invokeClosure_closure2))
      invokeClosure_closure2.name = "invokeClosure_closure2";
    $desc = $collectedClasses$.invokeClosure_closure2[1];
    invokeClosure_closure2.prototype = $desc;
    invokeClosure_closure2.$__fields__ = ["_captured_closure_6", "_captured_arg1_7", "_captured_arg2_8", "_captured_arg3_9"];
    function invokeClosure_closure3(_captured_closure_10, _captured_arg1_11, _captured_arg2_12, _captured_arg3_13, _captured_arg4_14) {
      this._captured_closure_10 = _captured_closure_10;
      this._captured_arg1_11 = _captured_arg1_11;
      this._captured_arg2_12 = _captured_arg2_12;
      this._captured_arg3_13 = _captured_arg3_13;
      this._captured_arg4_14 = _captured_arg4_14;
      this.$deferredAction();
    }
    invokeClosure_closure3.builtin$cls = "invokeClosure_closure3";
    if (!("name" in invokeClosure_closure3))
      invokeClosure_closure3.name = "invokeClosure_closure3";
    $desc = $collectedClasses$.invokeClosure_closure3[1];
    invokeClosure_closure3.prototype = $desc;
    invokeClosure_closure3.$__fields__ = ["_captured_closure_10", "_captured_arg1_11", "_captured_arg2_12", "_captured_arg3_13", "_captured_arg4_14"];
    function Closure() {
      this.$deferredAction();
    }
    Closure.builtin$cls = "Closure";
    if (!("name" in Closure))
      Closure.name = "Closure";
    $desc = $collectedClasses$.Closure[1];
    Closure.prototype = $desc;
    Closure.$__fields__ = [];
    function TearOffClosure() {
      this.$deferredAction();
    }
    TearOffClosure.builtin$cls = "TearOffClosure";
    if (!("name" in TearOffClosure))
      TearOffClosure.name = "TearOffClosure";
    $desc = $collectedClasses$.TearOffClosure[1];
    TearOffClosure.prototype = $desc;
    TearOffClosure.$__fields__ = [];
    function StaticClosure() {
      this.$deferredAction();
    }
    StaticClosure.builtin$cls = "StaticClosure";
    if (!("name" in StaticClosure))
      StaticClosure.name = "StaticClosure";
    $desc = $collectedClasses$.StaticClosure[1];
    StaticClosure.prototype = $desc;
    StaticClosure.$__fields__ = [];
    function BoundClosure(_self, _target, _receiver, _name) {
      this._self = _self;
      this._target = _target;
      this._receiver = _receiver;
      this._name = _name;
      this.$deferredAction();
    }
    BoundClosure.builtin$cls = "BoundClosure";
    if (!("name" in BoundClosure))
      BoundClosure.name = "BoundClosure";
    $desc = $collectedClasses$.BoundClosure[1];
    BoundClosure.prototype = $desc;
    BoundClosure.$__fields__ = ["_self", "_target", "_receiver", "_name"];
    function CastErrorImplementation(message) {
      this.message = message;
      this.$deferredAction();
    }
    CastErrorImplementation.builtin$cls = "CastErrorImplementation";
    if (!("name" in CastErrorImplementation))
      CastErrorImplementation.name = "CastErrorImplementation";
    $desc = $collectedClasses$.CastErrorImplementation[1];
    CastErrorImplementation.prototype = $desc;
    CastErrorImplementation.$__fields__ = ["message"];
    function RuntimeError(message) {
      this.message = message;
      this.$deferredAction();
    }
    RuntimeError.builtin$cls = "RuntimeError";
    if (!("name" in RuntimeError))
      RuntimeError.name = "RuntimeError";
    $desc = $collectedClasses$.RuntimeError[1];
    RuntimeError.prototype = $desc;
    RuntimeError.$__fields__ = ["message"];
    function RuntimeType() {
      this.$deferredAction();
    }
    RuntimeType.builtin$cls = "RuntimeType";
    if (!("name" in RuntimeType))
      RuntimeType.name = "RuntimeType";
    $desc = $collectedClasses$.RuntimeType[1];
    RuntimeType.prototype = $desc;
    RuntimeType.$__fields__ = [];
    function RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, namedParameters) {
      this.returnType = returnType;
      this.parameterTypes = parameterTypes;
      this.optionalParameterTypes = optionalParameterTypes;
      this.namedParameters = namedParameters;
      this.$deferredAction();
    }
    RuntimeFunctionType.builtin$cls = "RuntimeFunctionType";
    if (!("name" in RuntimeFunctionType))
      RuntimeFunctionType.name = "RuntimeFunctionType";
    $desc = $collectedClasses$.RuntimeFunctionType[1];
    RuntimeFunctionType.prototype = $desc;
    RuntimeFunctionType.$__fields__ = ["returnType", "parameterTypes", "optionalParameterTypes", "namedParameters"];
    function DynamicRuntimeType() {
      this.$deferredAction();
    }
    DynamicRuntimeType.builtin$cls = "DynamicRuntimeType";
    if (!("name" in DynamicRuntimeType))
      DynamicRuntimeType.name = "DynamicRuntimeType";
    $desc = $collectedClasses$.DynamicRuntimeType[1];
    DynamicRuntimeType.prototype = $desc;
    DynamicRuntimeType.$__fields__ = [];
    function TypeImpl(_typeName, _unmangledName) {
      this._typeName = _typeName;
      this._unmangledName = _unmangledName;
      this.$deferredAction();
    }
    TypeImpl.builtin$cls = "TypeImpl";
    if (!("name" in TypeImpl))
      TypeImpl.name = "TypeImpl";
    $desc = $collectedClasses$.TypeImpl[1];
    TypeImpl.prototype = $desc;
    TypeImpl.$__fields__ = ["_typeName", "_unmangledName"];
    function JsLinkedHashMap(__js_helper$_length, _strings, _nums, _rest, _first, _last, _modifications) {
      this.__js_helper$_length = __js_helper$_length;
      this._strings = _strings;
      this._nums = _nums;
      this._rest = _rest;
      this._first = _first;
      this._last = _last;
      this._modifications = _modifications;
      this.$deferredAction();
    }
    JsLinkedHashMap.builtin$cls = "JsLinkedHashMap";
    if (!("name" in JsLinkedHashMap))
      JsLinkedHashMap.name = "JsLinkedHashMap";
    $desc = $collectedClasses$.JsLinkedHashMap[1];
    JsLinkedHashMap.prototype = $desc;
    JsLinkedHashMap.$__fields__ = ["__js_helper$_length", "_strings", "_nums", "_rest", "_first", "_last", "_modifications"];
    function JsLinkedHashMap_values_closure(__js_helper$_captured_this_0) {
      this.__js_helper$_captured_this_0 = __js_helper$_captured_this_0;
      this.$deferredAction();
    }
    JsLinkedHashMap_values_closure.builtin$cls = "JsLinkedHashMap_values_closure";
    if (!("name" in JsLinkedHashMap_values_closure))
      JsLinkedHashMap_values_closure.name = "JsLinkedHashMap_values_closure";
    $desc = $collectedClasses$.JsLinkedHashMap_values_closure[1];
    JsLinkedHashMap_values_closure.prototype = $desc;
    JsLinkedHashMap_values_closure.$__fields__ = ["__js_helper$_captured_this_0"];
    function JsLinkedHashMap_addAll_closure(__js_helper$_captured_this_0) {
      this.__js_helper$_captured_this_0 = __js_helper$_captured_this_0;
      this.$deferredAction();
    }
    JsLinkedHashMap_addAll_closure.builtin$cls = "JsLinkedHashMap_addAll_closure";
    if (!("name" in JsLinkedHashMap_addAll_closure))
      JsLinkedHashMap_addAll_closure.name = "JsLinkedHashMap_addAll_closure";
    $desc = $collectedClasses$.JsLinkedHashMap_addAll_closure[1];
    JsLinkedHashMap_addAll_closure.prototype = $desc;
    JsLinkedHashMap_addAll_closure.$__fields__ = ["__js_helper$_captured_this_0"];
    function LinkedHashMapCell(hashMapCellKey, hashMapCellValue, _next, _previous) {
      this.hashMapCellKey = hashMapCellKey;
      this.hashMapCellValue = hashMapCellValue;
      this._next = _next;
      this._previous = _previous;
      this.$deferredAction();
    }
    LinkedHashMapCell.builtin$cls = "LinkedHashMapCell";
    if (!("name" in LinkedHashMapCell))
      LinkedHashMapCell.name = "LinkedHashMapCell";
    $desc = $collectedClasses$.LinkedHashMapCell[1];
    LinkedHashMapCell.prototype = $desc;
    LinkedHashMapCell.$__fields__ = ["hashMapCellKey", "hashMapCellValue", "_next", "_previous"];
    LinkedHashMapCell.prototype.get$hashMapCellKey = function() {
      return this.hashMapCellKey;
    };
    LinkedHashMapCell.prototype.get$hashMapCellValue = function() {
      return this.hashMapCellValue;
    };
    LinkedHashMapCell.prototype.set$hashMapCellValue = function(v) {
      return this.hashMapCellValue = v;
    };
    LinkedHashMapCell.prototype.get$_next = function() {
      return this._next;
    };
    LinkedHashMapCell.prototype.set$_next = function(v) {
      return this._next = v;
    };
    LinkedHashMapCell.prototype.get$_previous = function() {
      return this._previous;
    };
    LinkedHashMapCell.prototype.set$_previous = function(v) {
      return this._previous = v;
    };
    function LinkedHashMapKeyIterable(__js_helper$_map) {
      this.__js_helper$_map = __js_helper$_map;
      this.$deferredAction();
    }
    LinkedHashMapKeyIterable.builtin$cls = "LinkedHashMapKeyIterable";
    if (!("name" in LinkedHashMapKeyIterable))
      LinkedHashMapKeyIterable.name = "LinkedHashMapKeyIterable";
    $desc = $collectedClasses$.LinkedHashMapKeyIterable[1];
    LinkedHashMapKeyIterable.prototype = $desc;
    LinkedHashMapKeyIterable.$__fields__ = ["__js_helper$_map"];
    function LinkedHashMapKeyIterator(__js_helper$_map, _modifications, _cell, __js_helper$_current) {
      this.__js_helper$_map = __js_helper$_map;
      this._modifications = _modifications;
      this._cell = _cell;
      this.__js_helper$_current = __js_helper$_current;
      this.$deferredAction();
    }
    LinkedHashMapKeyIterator.builtin$cls = "LinkedHashMapKeyIterator";
    if (!("name" in LinkedHashMapKeyIterator))
      LinkedHashMapKeyIterator.name = "LinkedHashMapKeyIterator";
    $desc = $collectedClasses$.LinkedHashMapKeyIterator[1];
    LinkedHashMapKeyIterator.prototype = $desc;
    LinkedHashMapKeyIterator.$__fields__ = ["__js_helper$_map", "_modifications", "_cell", "__js_helper$_current"];
    function initHooks_closure(_captured_getTag_0) {
      this._captured_getTag_0 = _captured_getTag_0;
      this.$deferredAction();
    }
    initHooks_closure.builtin$cls = "initHooks_closure";
    if (!("name" in initHooks_closure))
      initHooks_closure.name = "initHooks_closure";
    $desc = $collectedClasses$.initHooks_closure[1];
    initHooks_closure.prototype = $desc;
    initHooks_closure.$__fields__ = ["_captured_getTag_0"];
    function initHooks_closure0(_captured_getUnknownTag_1) {
      this._captured_getUnknownTag_1 = _captured_getUnknownTag_1;
      this.$deferredAction();
    }
    initHooks_closure0.builtin$cls = "initHooks_closure0";
    if (!("name" in initHooks_closure0))
      initHooks_closure0.name = "initHooks_closure0";
    $desc = $collectedClasses$.initHooks_closure0[1];
    initHooks_closure0.prototype = $desc;
    initHooks_closure0.$__fields__ = ["_captured_getUnknownTag_1"];
    function initHooks_closure1(_captured_prototypeForTag_2) {
      this._captured_prototypeForTag_2 = _captured_prototypeForTag_2;
      this.$deferredAction();
    }
    initHooks_closure1.builtin$cls = "initHooks_closure1";
    if (!("name" in initHooks_closure1))
      initHooks_closure1.name = "initHooks_closure1";
    $desc = $collectedClasses$.initHooks_closure1[1];
    initHooks_closure1.prototype = $desc;
    initHooks_closure1.$__fields__ = ["_captured_prototypeForTag_2"];
    function JSSyntaxRegExp(pattern, _nativeRegExp, _nativeGlobalRegExp, _nativeAnchoredRegExp) {
      this.pattern = pattern;
      this._nativeRegExp = _nativeRegExp;
      this._nativeGlobalRegExp = _nativeGlobalRegExp;
      this._nativeAnchoredRegExp = _nativeAnchoredRegExp;
      this.$deferredAction();
    }
    JSSyntaxRegExp.builtin$cls = "JSSyntaxRegExp";
    if (!("name" in JSSyntaxRegExp))
      JSSyntaxRegExp.name = "JSSyntaxRegExp";
    $desc = $collectedClasses$.JSSyntaxRegExp[1];
    JSSyntaxRegExp.prototype = $desc;
    JSSyntaxRegExp.$__fields__ = ["pattern", "_nativeRegExp", "_nativeGlobalRegExp", "_nativeAnchoredRegExp"];
    function _MatchImplementation(pattern, _match) {
      this.pattern = pattern;
      this._match = _match;
      this.$deferredAction();
    }
    _MatchImplementation.builtin$cls = "_MatchImplementation";
    if (!("name" in _MatchImplementation))
      _MatchImplementation.name = "_MatchImplementation";
    $desc = $collectedClasses$._MatchImplementation[1];
    _MatchImplementation.prototype = $desc;
    _MatchImplementation.$__fields__ = ["pattern", "_match"];
    function StringMatch(start, input, pattern) {
      this.start = start;
      this.input = input;
      this.pattern = pattern;
      this.$deferredAction();
    }
    StringMatch.builtin$cls = "StringMatch";
    if (!("name" in StringMatch))
      StringMatch.name = "StringMatch";
    $desc = $collectedClasses$.StringMatch[1];
    StringMatch.prototype = $desc;
    StringMatch.$__fields__ = ["start", "input", "pattern"];
    function _StringAllMatchesIterable(_input, _pattern, __js_helper$_index) {
      this._input = _input;
      this._pattern = _pattern;
      this.__js_helper$_index = __js_helper$_index;
      this.$deferredAction();
    }
    _StringAllMatchesIterable.builtin$cls = "_StringAllMatchesIterable";
    if (!("name" in _StringAllMatchesIterable))
      _StringAllMatchesIterable.name = "_StringAllMatchesIterable";
    $desc = $collectedClasses$._StringAllMatchesIterable[1];
    _StringAllMatchesIterable.prototype = $desc;
    _StringAllMatchesIterable.$__fields__ = ["_input", "_pattern", "__js_helper$_index"];
    function _StringAllMatchesIterator(_input, _pattern, __js_helper$_index, __js_helper$_current) {
      this._input = _input;
      this._pattern = _pattern;
      this.__js_helper$_index = __js_helper$_index;
      this.__js_helper$_current = __js_helper$_current;
      this.$deferredAction();
    }
    _StringAllMatchesIterator.builtin$cls = "_StringAllMatchesIterator";
    if (!("name" in _StringAllMatchesIterator))
      _StringAllMatchesIterator.name = "_StringAllMatchesIterator";
    $desc = $collectedClasses$._StringAllMatchesIterator[1];
    _StringAllMatchesIterator.prototype = $desc;
    _StringAllMatchesIterator.$__fields__ = ["_input", "_pattern", "__js_helper$_index", "__js_helper$_current"];
    function ChromeBrowserAction(_onClicked) {
      this._onClicked = _onClicked;
      this.$deferredAction();
    }
    ChromeBrowserAction.builtin$cls = "ChromeBrowserAction";
    if (!("name" in ChromeBrowserAction))
      ChromeBrowserAction.name = "ChromeBrowserAction";
    $desc = $collectedClasses$.ChromeBrowserAction[1];
    ChromeBrowserAction.prototype = $desc;
    ChromeBrowserAction.$__fields__ = ["_onClicked"];
    function ChromeBrowserAction$__closure(_browserAction$_captured_this_0) {
      this._browserAction$_captured_this_0 = _browserAction$_captured_this_0;
      this.$deferredAction();
    }
    ChromeBrowserAction$__closure.builtin$cls = "ChromeBrowserAction$__closure";
    if (!("name" in ChromeBrowserAction$__closure))
      ChromeBrowserAction$__closure.name = "ChromeBrowserAction$__closure";
    $desc = $collectedClasses$.ChromeBrowserAction$__closure[1];
    ChromeBrowserAction$__closure.prototype = $desc;
    ChromeBrowserAction$__closure.$__fields__ = ["_browserAction$_captured_this_0"];
    function BrowserActionSetBadgeTextParams(jsProxy) {
      this.jsProxy = jsProxy;
      this.$deferredAction();
    }
    BrowserActionSetBadgeTextParams.builtin$cls = "BrowserActionSetBadgeTextParams";
    if (!("name" in BrowserActionSetBadgeTextParams))
      BrowserActionSetBadgeTextParams.name = "BrowserActionSetBadgeTextParams";
    $desc = $collectedClasses$.BrowserActionSetBadgeTextParams[1];
    BrowserActionSetBadgeTextParams.prototype = $desc;
    BrowserActionSetBadgeTextParams.$__fields__ = ["jsProxy"];
    function ChromeStreamController(_apiProvider, _eventName, _controller, _handlerAdded, _listener) {
      this._apiProvider = _apiProvider;
      this._eventName = _eventName;
      this._controller = _controller;
      this._handlerAdded = _handlerAdded;
      this._listener = _listener;
      this.$deferredAction();
    }
    ChromeStreamController.builtin$cls = "ChromeStreamController";
    if (!("name" in ChromeStreamController))
      ChromeStreamController.name = "ChromeStreamController";
    $desc = $collectedClasses$.ChromeStreamController[1];
    ChromeStreamController.prototype = $desc;
    ChromeStreamController.$__fields__ = ["_apiProvider", "_eventName", "_controller", "_handlerAdded", "_listener"];
    function ChromeStreamController$oneArg_closure(_common$_captured_this_0, _captured_transformer_1, _captured_returnVal_2) {
      this._common$_captured_this_0 = _common$_captured_this_0;
      this._captured_transformer_1 = _captured_transformer_1;
      this._captured_returnVal_2 = _captured_returnVal_2;
      this.$deferredAction();
    }
    ChromeStreamController$oneArg_closure.builtin$cls = "ChromeStreamController$oneArg_closure";
    if (!("name" in ChromeStreamController$oneArg_closure))
      ChromeStreamController$oneArg_closure.name = "ChromeStreamController$oneArg_closure";
    $desc = $collectedClasses$.ChromeStreamController$oneArg_closure[1];
    ChromeStreamController$oneArg_closure.prototype = $desc;
    ChromeStreamController$oneArg_closure.$__fields__ = ["_common$_captured_this_0", "_captured_transformer_1", "_captured_returnVal_2"];
    function ChromeObject() {
      this.$deferredAction();
    }
    ChromeObject.builtin$cls = "ChromeObject";
    if (!("name" in ChromeObject))
      ChromeObject.name = "ChromeObject";
    $desc = $collectedClasses$.ChromeObject[1];
    ChromeObject.prototype = $desc;
    ChromeObject.$__fields__ = [];
    function ChromeApi() {
      this.$deferredAction();
    }
    ChromeApi.builtin$cls = "ChromeApi";
    if (!("name" in ChromeApi))
      ChromeApi.name = "ChromeApi";
    $desc = $collectedClasses$.ChromeApi[1];
    ChromeApi.prototype = $desc;
    ChromeApi.$__fields__ = [];
    function Tab(jsProxy) {
      this.jsProxy = jsProxy;
      this.$deferredAction();
    }
    Tab.builtin$cls = "Tab";
    if (!("name" in Tab))
      Tab.name = "Tab";
    $desc = $collectedClasses$.Tab[1];
    Tab.prototype = $desc;
    Tab.$__fields__ = ["jsProxy"];
    function ListIterable() {
      this.$deferredAction();
    }
    ListIterable.builtin$cls = "ListIterable";
    if (!("name" in ListIterable))
      ListIterable.name = "ListIterable";
    $desc = $collectedClasses$.ListIterable[1];
    ListIterable.prototype = $desc;
    ListIterable.$__fields__ = [];
    function SubListIterable(__internal$_iterable, _start, _endOrLength) {
      this.__internal$_iterable = __internal$_iterable;
      this._start = _start;
      this._endOrLength = _endOrLength;
      this.$deferredAction();
    }
    SubListIterable.builtin$cls = "SubListIterable";
    if (!("name" in SubListIterable))
      SubListIterable.name = "SubListIterable";
    $desc = $collectedClasses$.SubListIterable[1];
    SubListIterable.prototype = $desc;
    SubListIterable.$__fields__ = ["__internal$_iterable", "_start", "_endOrLength"];
    function ListIterator(__internal$_iterable, __internal$_length, __internal$_index, _current) {
      this.__internal$_iterable = __internal$_iterable;
      this.__internal$_length = __internal$_length;
      this.__internal$_index = __internal$_index;
      this._current = _current;
      this.$deferredAction();
    }
    ListIterator.builtin$cls = "ListIterator";
    if (!("name" in ListIterator))
      ListIterator.name = "ListIterator";
    $desc = $collectedClasses$.ListIterator[1];
    ListIterator.prototype = $desc;
    ListIterator.$__fields__ = ["__internal$_iterable", "__internal$_length", "__internal$_index", "_current"];
    function MappedIterable(__internal$_iterable, _f) {
      this.__internal$_iterable = __internal$_iterable;
      this._f = _f;
      this.$deferredAction();
    }
    MappedIterable.builtin$cls = "MappedIterable";
    if (!("name" in MappedIterable))
      MappedIterable.name = "MappedIterable";
    $desc = $collectedClasses$.MappedIterable[1];
    MappedIterable.prototype = $desc;
    MappedIterable.$__fields__ = ["__internal$_iterable", "_f"];
    function EfficientLengthMappedIterable(__internal$_iterable, _f) {
      this.__internal$_iterable = __internal$_iterable;
      this._f = _f;
      this.$deferredAction();
    }
    EfficientLengthMappedIterable.builtin$cls = "EfficientLengthMappedIterable";
    if (!("name" in EfficientLengthMappedIterable))
      EfficientLengthMappedIterable.name = "EfficientLengthMappedIterable";
    $desc = $collectedClasses$.EfficientLengthMappedIterable[1];
    EfficientLengthMappedIterable.prototype = $desc;
    EfficientLengthMappedIterable.$__fields__ = ["__internal$_iterable", "_f"];
    function MappedIterator(_current, _iterator, _f) {
      this._current = _current;
      this._iterator = _iterator;
      this._f = _f;
      this.$deferredAction();
    }
    MappedIterator.builtin$cls = "MappedIterator";
    if (!("name" in MappedIterator))
      MappedIterator.name = "MappedIterator";
    $desc = $collectedClasses$.MappedIterator[1];
    MappedIterator.prototype = $desc;
    MappedIterator.$__fields__ = ["_current", "_iterator", "_f"];
    function MappedListIterable(_source, _f) {
      this._source = _source;
      this._f = _f;
      this.$deferredAction();
    }
    MappedListIterable.builtin$cls = "MappedListIterable";
    if (!("name" in MappedListIterable))
      MappedListIterable.name = "MappedListIterable";
    $desc = $collectedClasses$.MappedListIterable[1];
    MappedListIterable.prototype = $desc;
    MappedListIterable.$__fields__ = ["_source", "_f"];
    function WhereIterable(__internal$_iterable, _f) {
      this.__internal$_iterable = __internal$_iterable;
      this._f = _f;
      this.$deferredAction();
    }
    WhereIterable.builtin$cls = "WhereIterable";
    if (!("name" in WhereIterable))
      WhereIterable.name = "WhereIterable";
    $desc = $collectedClasses$.WhereIterable[1];
    WhereIterable.prototype = $desc;
    WhereIterable.$__fields__ = ["__internal$_iterable", "_f"];
    function WhereIterator(_iterator, _f) {
      this._iterator = _iterator;
      this._f = _f;
      this.$deferredAction();
    }
    WhereIterator.builtin$cls = "WhereIterator";
    if (!("name" in WhereIterator))
      WhereIterator.name = "WhereIterator";
    $desc = $collectedClasses$.WhereIterator[1];
    WhereIterator.prototype = $desc;
    WhereIterator.$__fields__ = ["_iterator", "_f"];
    function FixedLengthListMixin() {
      this.$deferredAction();
    }
    FixedLengthListMixin.builtin$cls = "FixedLengthListMixin";
    if (!("name" in FixedLengthListMixin))
      FixedLengthListMixin.name = "FixedLengthListMixin";
    $desc = $collectedClasses$.FixedLengthListMixin[1];
    FixedLengthListMixin.prototype = $desc;
    FixedLengthListMixin.$__fields__ = [];
    function ReversedListIterable(_source) {
      this._source = _source;
      this.$deferredAction();
    }
    ReversedListIterable.builtin$cls = "ReversedListIterable";
    if (!("name" in ReversedListIterable))
      ReversedListIterable.name = "ReversedListIterable";
    $desc = $collectedClasses$.ReversedListIterable[1];
    ReversedListIterable.prototype = $desc;
    ReversedListIterable.$__fields__ = ["_source"];
    function Symbol(__internal$_name) {
      this.__internal$_name = __internal$_name;
      this.$deferredAction();
    }
    Symbol.builtin$cls = "Symbol";
    if (!("name" in Symbol))
      Symbol.name = "Symbol";
    $desc = $collectedClasses$.Symbol[1];
    Symbol.prototype = $desc;
    Symbol.$__fields__ = ["__internal$_name"];
    Symbol.prototype.get$__internal$_name = function() {
      return this.__internal$_name;
    };
    function _LazyMangledNamesMap() {
      this.$deferredAction();
    }
    _LazyMangledNamesMap.builtin$cls = "_LazyMangledNamesMap";
    if (!("name" in _LazyMangledNamesMap))
      _LazyMangledNamesMap.name = "_LazyMangledNamesMap";
    $desc = $collectedClasses$._LazyMangledNamesMap[1];
    _LazyMangledNamesMap.prototype = $desc;
    _LazyMangledNamesMap.$__fields__ = [];
    function _LazyMangledInstanceNamesMap(_jsMangledNames) {
      this._jsMangledNames = _jsMangledNames;
      this.$deferredAction();
    }
    _LazyMangledInstanceNamesMap.builtin$cls = "_LazyMangledInstanceNamesMap";
    if (!("name" in _LazyMangledInstanceNamesMap))
      _LazyMangledInstanceNamesMap.name = "_LazyMangledInstanceNamesMap";
    $desc = $collectedClasses$._LazyMangledInstanceNamesMap[1];
    _LazyMangledInstanceNamesMap.prototype = $desc;
    _LazyMangledInstanceNamesMap.$__fields__ = ["_jsMangledNames"];
    function _AsyncRun__initializeScheduleImmediate_internalCallback(_async$_box_0) {
      this._async$_box_0 = _async$_box_0;
      this.$deferredAction();
    }
    _AsyncRun__initializeScheduleImmediate_internalCallback.builtin$cls = "_AsyncRun__initializeScheduleImmediate_internalCallback";
    if (!("name" in _AsyncRun__initializeScheduleImmediate_internalCallback))
      _AsyncRun__initializeScheduleImmediate_internalCallback.name = "_AsyncRun__initializeScheduleImmediate_internalCallback";
    $desc = $collectedClasses$._AsyncRun__initializeScheduleImmediate_internalCallback[1];
    _AsyncRun__initializeScheduleImmediate_internalCallback.prototype = $desc;
    _AsyncRun__initializeScheduleImmediate_internalCallback.$__fields__ = ["_async$_box_0"];
    function _AsyncRun__initializeScheduleImmediate_closure(_async$_box_0, _captured_div_1, _captured_span_2) {
      this._async$_box_0 = _async$_box_0;
      this._captured_div_1 = _captured_div_1;
      this._captured_span_2 = _captured_span_2;
      this.$deferredAction();
    }
    _AsyncRun__initializeScheduleImmediate_closure.builtin$cls = "_AsyncRun__initializeScheduleImmediate_closure";
    if (!("name" in _AsyncRun__initializeScheduleImmediate_closure))
      _AsyncRun__initializeScheduleImmediate_closure.name = "_AsyncRun__initializeScheduleImmediate_closure";
    $desc = $collectedClasses$._AsyncRun__initializeScheduleImmediate_closure[1];
    _AsyncRun__initializeScheduleImmediate_closure.prototype = $desc;
    _AsyncRun__initializeScheduleImmediate_closure.$__fields__ = ["_async$_box_0", "_captured_div_1", "_captured_span_2"];
    function _AsyncRun__scheduleImmediateJsOverride_internalCallback(_captured_callback_0) {
      this._captured_callback_0 = _captured_callback_0;
      this.$deferredAction();
    }
    _AsyncRun__scheduleImmediateJsOverride_internalCallback.builtin$cls = "_AsyncRun__scheduleImmediateJsOverride_internalCallback";
    if (!("name" in _AsyncRun__scheduleImmediateJsOverride_internalCallback))
      _AsyncRun__scheduleImmediateJsOverride_internalCallback.name = "_AsyncRun__scheduleImmediateJsOverride_internalCallback";
    $desc = $collectedClasses$._AsyncRun__scheduleImmediateJsOverride_internalCallback[1];
    _AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = $desc;
    _AsyncRun__scheduleImmediateJsOverride_internalCallback.$__fields__ = ["_captured_callback_0"];
    function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(_captured_callback_0) {
      this._captured_callback_0 = _captured_callback_0;
      this.$deferredAction();
    }
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.builtin$cls = "_AsyncRun__scheduleImmediateWithSetImmediate_internalCallback";
    if (!("name" in _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback))
      _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.name = "_AsyncRun__scheduleImmediateWithSetImmediate_internalCallback";
    $desc = $collectedClasses$._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback[1];
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = $desc;
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.$__fields__ = ["_captured_callback_0"];
    function _awaitOnObject_closure(_captured_bodyFunction_0) {
      this._captured_bodyFunction_0 = _captured_bodyFunction_0;
      this.$deferredAction();
    }
    _awaitOnObject_closure.builtin$cls = "_awaitOnObject_closure";
    if (!("name" in _awaitOnObject_closure))
      _awaitOnObject_closure.name = "_awaitOnObject_closure";
    $desc = $collectedClasses$._awaitOnObject_closure[1];
    _awaitOnObject_closure.prototype = $desc;
    _awaitOnObject_closure.$__fields__ = ["_captured_bodyFunction_0"];
    function _awaitOnObject_closure0(_captured_bodyFunction_1) {
      this._captured_bodyFunction_1 = _captured_bodyFunction_1;
      this.$deferredAction();
    }
    _awaitOnObject_closure0.builtin$cls = "_awaitOnObject_closure0";
    if (!("name" in _awaitOnObject_closure0))
      _awaitOnObject_closure0.name = "_awaitOnObject_closure0";
    $desc = $collectedClasses$._awaitOnObject_closure0[1];
    _awaitOnObject_closure0.prototype = $desc;
    _awaitOnObject_closure0.$__fields__ = ["_captured_bodyFunction_1"];
    function _wrapJsFunctionForAsync_closure(_captured_protected_0) {
      this._captured_protected_0 = _captured_protected_0;
      this.$deferredAction();
    }
    _wrapJsFunctionForAsync_closure.builtin$cls = "_wrapJsFunctionForAsync_closure";
    if (!("name" in _wrapJsFunctionForAsync_closure))
      _wrapJsFunctionForAsync_closure.name = "_wrapJsFunctionForAsync_closure";
    $desc = $collectedClasses$._wrapJsFunctionForAsync_closure[1];
    _wrapJsFunctionForAsync_closure.prototype = $desc;
    _wrapJsFunctionForAsync_closure.$__fields__ = ["_captured_protected_0"];
    function _asyncStarHelper_closure(_captured_bodyFunctionOrErrorCode_0, _captured_controller_1) {
      this._captured_bodyFunctionOrErrorCode_0 = _captured_bodyFunctionOrErrorCode_0;
      this._captured_controller_1 = _captured_controller_1;
      this.$deferredAction();
    }
    _asyncStarHelper_closure.builtin$cls = "_asyncStarHelper_closure";
    if (!("name" in _asyncStarHelper_closure))
      _asyncStarHelper_closure.name = "_asyncStarHelper_closure";
    $desc = $collectedClasses$._asyncStarHelper_closure[1];
    _asyncStarHelper_closure.prototype = $desc;
    _asyncStarHelper_closure.$__fields__ = ["_captured_bodyFunctionOrErrorCode_0", "_captured_controller_1"];
    function _asyncStarHelper_closure0(_captured_bodyFunctionOrErrorCode_2, _captured_controller_3) {
      this._captured_bodyFunctionOrErrorCode_2 = _captured_bodyFunctionOrErrorCode_2;
      this._captured_controller_3 = _captured_controller_3;
      this.$deferredAction();
    }
    _asyncStarHelper_closure0.builtin$cls = "_asyncStarHelper_closure0";
    if (!("name" in _asyncStarHelper_closure0))
      _asyncStarHelper_closure0.name = "_asyncStarHelper_closure0";
    $desc = $collectedClasses$._asyncStarHelper_closure0[1];
    _asyncStarHelper_closure0.prototype = $desc;
    _asyncStarHelper_closure0.$__fields__ = ["_captured_bodyFunctionOrErrorCode_2", "_captured_controller_3"];
    function _AsyncStarStreamController(controller, isSuspended, cancelationCompleter) {
      this.controller = controller;
      this.isSuspended = isSuspended;
      this.cancelationCompleter = cancelationCompleter;
      this.$deferredAction();
    }
    _AsyncStarStreamController.builtin$cls = "_AsyncStarStreamController";
    if (!("name" in _AsyncStarStreamController))
      _AsyncStarStreamController.name = "_AsyncStarStreamController";
    $desc = $collectedClasses$._AsyncStarStreamController[1];
    _AsyncStarStreamController.prototype = $desc;
    _AsyncStarStreamController.$__fields__ = ["controller", "isSuspended", "cancelationCompleter"];
    _AsyncStarStreamController.prototype.set$isSuspended = function(v) {
      return this.isSuspended = v;
    };
    _AsyncStarStreamController.prototype.get$cancelationCompleter = function() {
      return this.cancelationCompleter;
    };
    function _AsyncStarStreamController__resumeBody(_captured_body_0) {
      this._captured_body_0 = _captured_body_0;
      this.$deferredAction();
    }
    _AsyncStarStreamController__resumeBody.builtin$cls = "_AsyncStarStreamController__resumeBody";
    if (!("name" in _AsyncStarStreamController__resumeBody))
      _AsyncStarStreamController__resumeBody.name = "_AsyncStarStreamController__resumeBody";
    $desc = $collectedClasses$._AsyncStarStreamController__resumeBody[1];
    _AsyncStarStreamController__resumeBody.prototype = $desc;
    _AsyncStarStreamController__resumeBody.$__fields__ = ["_captured_body_0"];
    function _AsyncStarStreamController__resumeBody_closure(_captured_body_1) {
      this._captured_body_1 = _captured_body_1;
      this.$deferredAction();
    }
    _AsyncStarStreamController__resumeBody_closure.builtin$cls = "_AsyncStarStreamController__resumeBody_closure";
    if (!("name" in _AsyncStarStreamController__resumeBody_closure))
      _AsyncStarStreamController__resumeBody_closure.name = "_AsyncStarStreamController__resumeBody_closure";
    $desc = $collectedClasses$._AsyncStarStreamController__resumeBody_closure[1];
    _AsyncStarStreamController__resumeBody_closure.prototype = $desc;
    _AsyncStarStreamController__resumeBody_closure.$__fields__ = ["_captured_body_1"];
    function _AsyncStarStreamController_closure0(_captured__resumeBody_2) {
      this._captured__resumeBody_2 = _captured__resumeBody_2;
      this.$deferredAction();
    }
    _AsyncStarStreamController_closure0.builtin$cls = "_AsyncStarStreamController_closure0";
    if (!("name" in _AsyncStarStreamController_closure0))
      _AsyncStarStreamController_closure0.name = "_AsyncStarStreamController_closure0";
    $desc = $collectedClasses$._AsyncStarStreamController_closure0[1];
    _AsyncStarStreamController_closure0.prototype = $desc;
    _AsyncStarStreamController_closure0.$__fields__ = ["_captured__resumeBody_2"];
    function _AsyncStarStreamController_closure1(_captured_this_3, _captured__resumeBody_4) {
      this._captured_this_3 = _captured_this_3;
      this._captured__resumeBody_4 = _captured__resumeBody_4;
      this.$deferredAction();
    }
    _AsyncStarStreamController_closure1.builtin$cls = "_AsyncStarStreamController_closure1";
    if (!("name" in _AsyncStarStreamController_closure1))
      _AsyncStarStreamController_closure1.name = "_AsyncStarStreamController_closure1";
    $desc = $collectedClasses$._AsyncStarStreamController_closure1[1];
    _AsyncStarStreamController_closure1.prototype = $desc;
    _AsyncStarStreamController_closure1.$__fields__ = ["_captured_this_3", "_captured__resumeBody_4"];
    function _AsyncStarStreamController_closure(_captured_this_5, _captured_body_6) {
      this._captured_this_5 = _captured_this_5;
      this._captured_body_6 = _captured_body_6;
      this.$deferredAction();
    }
    _AsyncStarStreamController_closure.builtin$cls = "_AsyncStarStreamController_closure";
    if (!("name" in _AsyncStarStreamController_closure))
      _AsyncStarStreamController_closure.name = "_AsyncStarStreamController_closure";
    $desc = $collectedClasses$._AsyncStarStreamController_closure[1];
    _AsyncStarStreamController_closure.prototype = $desc;
    _AsyncStarStreamController_closure.$__fields__ = ["_captured_this_5", "_captured_body_6"];
    function _AsyncStarStreamController__closure(_captured_body_7) {
      this._captured_body_7 = _captured_body_7;
      this.$deferredAction();
    }
    _AsyncStarStreamController__closure.builtin$cls = "_AsyncStarStreamController__closure";
    if (!("name" in _AsyncStarStreamController__closure))
      _AsyncStarStreamController__closure.name = "_AsyncStarStreamController__closure";
    $desc = $collectedClasses$._AsyncStarStreamController__closure[1];
    _AsyncStarStreamController__closure.prototype = $desc;
    _AsyncStarStreamController__closure.$__fields__ = ["_captured_body_7"];
    function _IterationMarker(value, state) {
      this.value = value;
      this.state = state;
      this.$deferredAction();
    }
    _IterationMarker.builtin$cls = "_IterationMarker";
    if (!("name" in _IterationMarker))
      _IterationMarker.name = "_IterationMarker";
    $desc = $collectedClasses$._IterationMarker[1];
    _IterationMarker.prototype = $desc;
    _IterationMarker.$__fields__ = ["value", "state"];
    _IterationMarker.prototype.get$value = function(receiver) {
      return this.value;
    };
    _IterationMarker.prototype.get$state = function(receiver) {
      return this.state;
    };
    function _BroadcastStream(_async$_controller) {
      this._async$_controller = _async$_controller;
      this.$deferredAction();
    }
    _BroadcastStream.builtin$cls = "_BroadcastStream";
    if (!("name" in _BroadcastStream))
      _BroadcastStream.name = "_BroadcastStream";
    $desc = $collectedClasses$._BroadcastStream[1];
    _BroadcastStream.prototype = $desc;
    _BroadcastStream.$__fields__ = ["_async$_controller"];
    function _BroadcastSubscription(_eventState, _async$_next, _async$_previous, _async$_controller, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
      this._eventState = _eventState;
      this._async$_next = _async$_next;
      this._async$_previous = _async$_previous;
      this._async$_controller = _async$_controller;
      this._async$_onData = _async$_onData;
      this._onError = _onError;
      this._onDone = _onDone;
      this._zone = _zone;
      this._state = _state;
      this._cancelFuture = _cancelFuture;
      this._pending = _pending;
      this.$deferredAction();
    }
    _BroadcastSubscription.builtin$cls = "_BroadcastSubscription";
    if (!("name" in _BroadcastSubscription))
      _BroadcastSubscription.name = "_BroadcastSubscription";
    $desc = $collectedClasses$._BroadcastSubscription[1];
    _BroadcastSubscription.prototype = $desc;
    _BroadcastSubscription.$__fields__ = ["_eventState", "_async$_next", "_async$_previous", "_async$_controller", "_async$_onData", "_onError", "_onDone", "_zone", "_state", "_cancelFuture", "_pending"];
    _BroadcastSubscription.prototype.get$_eventState = function() {
      return this._eventState;
    };
    _BroadcastSubscription.prototype.set$_eventState = function(v) {
      return this._eventState = v;
    };
    _BroadcastSubscription.prototype.get$_async$_next = function() {
      return this._async$_next;
    };
    _BroadcastSubscription.prototype.set$_async$_next = function(v) {
      return this._async$_next = v;
    };
    _BroadcastSubscription.prototype.get$_async$_previous = function() {
      return this._async$_previous;
    };
    _BroadcastSubscription.prototype.set$_async$_previous = function(v) {
      return this._async$_previous = v;
    };
    function _BroadcastStreamController(_async$_next, _async$_previous) {
      this._async$_next = _async$_next;
      this._async$_previous = _async$_previous;
      this.$deferredAction();
    }
    _BroadcastStreamController.builtin$cls = "_BroadcastStreamController";
    if (!("name" in _BroadcastStreamController))
      _BroadcastStreamController.name = "_BroadcastStreamController";
    $desc = $collectedClasses$._BroadcastStreamController[1];
    _BroadcastStreamController.prototype = $desc;
    _BroadcastStreamController.$__fields__ = ["_async$_next", "_async$_previous"];
    _BroadcastStreamController.prototype.get$_async$_next = function() {
      return this._async$_next;
    };
    _BroadcastStreamController.prototype.set$_async$_next = function(v) {
      return this._async$_next = v;
    };
    _BroadcastStreamController.prototype.get$_async$_previous = function() {
      return this._async$_previous;
    };
    _BroadcastStreamController.prototype.set$_async$_previous = function(v) {
      return this._async$_previous = v;
    };
    function _SyncBroadcastStreamController() {
      this.$deferredAction();
    }
    _SyncBroadcastStreamController.builtin$cls = "_SyncBroadcastStreamController";
    if (!("name" in _SyncBroadcastStreamController))
      _SyncBroadcastStreamController.name = "_SyncBroadcastStreamController";
    $desc = $collectedClasses$._SyncBroadcastStreamController[1];
    _SyncBroadcastStreamController.prototype = $desc;
    _SyncBroadcastStreamController.$__fields__ = [];
    function _SyncBroadcastStreamController__sendData_closure(_captured_this_0, _captured_data_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_data_1 = _captured_data_1;
      this.$deferredAction();
    }
    _SyncBroadcastStreamController__sendData_closure.builtin$cls = "_SyncBroadcastStreamController__sendData_closure";
    if (!("name" in _SyncBroadcastStreamController__sendData_closure))
      _SyncBroadcastStreamController__sendData_closure.name = "_SyncBroadcastStreamController__sendData_closure";
    $desc = $collectedClasses$._SyncBroadcastStreamController__sendData_closure[1];
    _SyncBroadcastStreamController__sendData_closure.prototype = $desc;
    _SyncBroadcastStreamController__sendData_closure.$__fields__ = ["_captured_this_0", "_captured_data_1"];
    function _SyncBroadcastStreamController__sendError_closure(_captured_this_0, _captured_error_1, _captured_stackTrace_2) {
      this._captured_this_0 = _captured_this_0;
      this._captured_error_1 = _captured_error_1;
      this._captured_stackTrace_2 = _captured_stackTrace_2;
      this.$deferredAction();
    }
    _SyncBroadcastStreamController__sendError_closure.builtin$cls = "_SyncBroadcastStreamController__sendError_closure";
    if (!("name" in _SyncBroadcastStreamController__sendError_closure))
      _SyncBroadcastStreamController__sendError_closure.name = "_SyncBroadcastStreamController__sendError_closure";
    $desc = $collectedClasses$._SyncBroadcastStreamController__sendError_closure[1];
    _SyncBroadcastStreamController__sendError_closure.prototype = $desc;
    _SyncBroadcastStreamController__sendError_closure.$__fields__ = ["_captured_this_0", "_captured_error_1", "_captured_stackTrace_2"];
    function _SyncBroadcastStreamController__sendDone_closure(_captured_this_0) {
      this._captured_this_0 = _captured_this_0;
      this.$deferredAction();
    }
    _SyncBroadcastStreamController__sendDone_closure.builtin$cls = "_SyncBroadcastStreamController__sendDone_closure";
    if (!("name" in _SyncBroadcastStreamController__sendDone_closure))
      _SyncBroadcastStreamController__sendDone_closure.name = "_SyncBroadcastStreamController__sendDone_closure";
    $desc = $collectedClasses$._SyncBroadcastStreamController__sendDone_closure[1];
    _SyncBroadcastStreamController__sendDone_closure.prototype = $desc;
    _SyncBroadcastStreamController__sendDone_closure.$__fields__ = ["_captured_this_0"];
    function _AsyncBroadcastStreamController(onListen, onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
      this.onListen = onListen;
      this.onCancel = onCancel;
      this._state = _state;
      this._async$_next = _async$_next;
      this._async$_previous = _async$_previous;
      this._addStreamState = _addStreamState;
      this._doneFuture = _doneFuture;
      this.$deferredAction();
    }
    _AsyncBroadcastStreamController.builtin$cls = "_AsyncBroadcastStreamController";
    if (!("name" in _AsyncBroadcastStreamController))
      _AsyncBroadcastStreamController.name = "_AsyncBroadcastStreamController";
    $desc = $collectedClasses$._AsyncBroadcastStreamController[1];
    _AsyncBroadcastStreamController.prototype = $desc;
    _AsyncBroadcastStreamController.$__fields__ = ["onListen", "onCancel", "_state", "_async$_next", "_async$_previous", "_addStreamState", "_doneFuture"];
    function _AsBroadcastStreamController(_pending, onListen, onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
      this._pending = _pending;
      this.onListen = onListen;
      this.onCancel = onCancel;
      this._state = _state;
      this._async$_next = _async$_next;
      this._async$_previous = _async$_previous;
      this._addStreamState = _addStreamState;
      this._doneFuture = _doneFuture;
      this.$deferredAction();
    }
    _AsBroadcastStreamController.builtin$cls = "_AsBroadcastStreamController";
    if (!("name" in _AsBroadcastStreamController))
      _AsBroadcastStreamController.name = "_AsBroadcastStreamController";
    $desc = $collectedClasses$._AsBroadcastStreamController[1];
    _AsBroadcastStreamController.prototype = $desc;
    _AsBroadcastStreamController.$__fields__ = ["_pending", "onListen", "onCancel", "_state", "_async$_next", "_async$_previous", "_addStreamState", "_doneFuture"];
    function Future() {
      this.$deferredAction();
    }
    Future.builtin$cls = "Future";
    if (!("name" in Future))
      Future.name = "Future";
    $desc = $collectedClasses$.Future[1];
    Future.prototype = $desc;
    Future.$__fields__ = [];
    function Future_Future$microtask_closure(_captured_computation_0, _async$_captured_result_1) {
      this._captured_computation_0 = _captured_computation_0;
      this._async$_captured_result_1 = _async$_captured_result_1;
      this.$deferredAction();
    }
    Future_Future$microtask_closure.builtin$cls = "Future_Future$microtask_closure";
    if (!("name" in Future_Future$microtask_closure))
      Future_Future$microtask_closure.name = "Future_Future$microtask_closure";
    $desc = $collectedClasses$.Future_Future$microtask_closure[1];
    Future_Future$microtask_closure.prototype = $desc;
    Future_Future$microtask_closure.$__fields__ = ["_captured_computation_0", "_async$_captured_result_1"];
    function Future_wait_handleError(_async$_box_0, _captured_eagerError_1, _captured_cleanUp_2, _captured_result_3) {
      this._async$_box_0 = _async$_box_0;
      this._captured_eagerError_1 = _captured_eagerError_1;
      this._captured_cleanUp_2 = _captured_cleanUp_2;
      this._captured_result_3 = _captured_result_3;
      this.$deferredAction();
    }
    Future_wait_handleError.builtin$cls = "Future_wait_handleError";
    if (!("name" in Future_wait_handleError))
      Future_wait_handleError.name = "Future_wait_handleError";
    $desc = $collectedClasses$.Future_wait_handleError[1];
    Future_wait_handleError.prototype = $desc;
    Future_wait_handleError.$__fields__ = ["_async$_box_0", "_captured_eagerError_1", "_captured_cleanUp_2", "_captured_result_3"];
    function Future_wait_closure(_async$_box_0, _captured_eagerError_6, _captured_cleanUp_7, _captured_result_8, _captured_pos_9) {
      this._async$_box_0 = _async$_box_0;
      this._captured_eagerError_6 = _captured_eagerError_6;
      this._captured_cleanUp_7 = _captured_cleanUp_7;
      this._captured_result_8 = _captured_result_8;
      this._captured_pos_9 = _captured_pos_9;
      this.$deferredAction();
    }
    Future_wait_closure.builtin$cls = "Future_wait_closure";
    if (!("name" in Future_wait_closure))
      Future_wait_closure.name = "Future_wait_closure";
    $desc = $collectedClasses$.Future_wait_closure[1];
    Future_wait_closure.prototype = $desc;
    Future_wait_closure.$__fields__ = ["_async$_box_0", "_captured_eagerError_6", "_captured_cleanUp_7", "_captured_result_8", "_captured_pos_9"];
    function _Completer(future) {
      this.future = future;
      this.$deferredAction();
    }
    _Completer.builtin$cls = "_Completer";
    if (!("name" in _Completer))
      _Completer.name = "_Completer";
    $desc = $collectedClasses$._Completer[1];
    _Completer.prototype = $desc;
    _Completer.$__fields__ = ["future"];
    _Completer.prototype.get$future = function() {
      return this.future;
    };
    function _AsyncCompleter(future) {
      this.future = future;
      this.$deferredAction();
    }
    _AsyncCompleter.builtin$cls = "_AsyncCompleter";
    if (!("name" in _AsyncCompleter))
      _AsyncCompleter.name = "_AsyncCompleter";
    $desc = $collectedClasses$._AsyncCompleter[1];
    _AsyncCompleter.prototype = $desc;
    _AsyncCompleter.$__fields__ = ["future"];
    function _SyncCompleter(future) {
      this.future = future;
      this.$deferredAction();
    }
    _SyncCompleter.builtin$cls = "_SyncCompleter";
    if (!("name" in _SyncCompleter))
      _SyncCompleter.name = "_SyncCompleter";
    $desc = $collectedClasses$._SyncCompleter[1];
    _SyncCompleter.prototype = $desc;
    _SyncCompleter.$__fields__ = ["future"];
    function _FutureListener(_nextListener, result, state, callback, errorCallback) {
      this._nextListener = _nextListener;
      this.result = result;
      this.state = state;
      this.callback = callback;
      this.errorCallback = errorCallback;
      this.$deferredAction();
    }
    _FutureListener.builtin$cls = "_FutureListener";
    if (!("name" in _FutureListener))
      _FutureListener.name = "_FutureListener";
    $desc = $collectedClasses$._FutureListener[1];
    _FutureListener.prototype = $desc;
    _FutureListener.$__fields__ = ["_nextListener", "result", "state", "callback", "errorCallback"];
    _FutureListener.prototype.get$_nextListener = function() {
      return this._nextListener;
    };
    _FutureListener.prototype.set$_nextListener = function(v) {
      return this._nextListener = v;
    };
    _FutureListener.prototype.get$result = function(receiver) {
      return this.result;
    };
    _FutureListener.prototype.get$state = function(receiver) {
      return this.state;
    };
    function _Future(_state, _zone, _resultOrListeners) {
      this._state = _state;
      this._zone = _zone;
      this._resultOrListeners = _resultOrListeners;
      this.$deferredAction();
    }
    _Future.builtin$cls = "_Future";
    if (!("name" in _Future))
      _Future.name = "_Future";
    $desc = $collectedClasses$._Future[1];
    _Future.prototype = $desc;
    _Future.$__fields__ = ["_state", "_zone", "_resultOrListeners"];
    _Future.prototype.get$_zone = function() {
      return this._zone;
    };
    function _Future__addListener_closure(_captured_this_0, _captured_listener_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_listener_1 = _captured_listener_1;
      this.$deferredAction();
    }
    _Future__addListener_closure.builtin$cls = "_Future__addListener_closure";
    if (!("name" in _Future__addListener_closure))
      _Future__addListener_closure.name = "_Future__addListener_closure";
    $desc = $collectedClasses$._Future__addListener_closure[1];
    _Future__addListener_closure.prototype = $desc;
    _Future__addListener_closure.$__fields__ = ["_captured_this_0", "_captured_listener_1"];
    function _Future__chainForeignFuture_closure(_captured_target_0) {
      this._captured_target_0 = _captured_target_0;
      this.$deferredAction();
    }
    _Future__chainForeignFuture_closure.builtin$cls = "_Future__chainForeignFuture_closure";
    if (!("name" in _Future__chainForeignFuture_closure))
      _Future__chainForeignFuture_closure.name = "_Future__chainForeignFuture_closure";
    $desc = $collectedClasses$._Future__chainForeignFuture_closure[1];
    _Future__chainForeignFuture_closure.prototype = $desc;
    _Future__chainForeignFuture_closure.$__fields__ = ["_captured_target_0"];
    function _Future__chainForeignFuture_closure0(_captured_target_1) {
      this._captured_target_1 = _captured_target_1;
      this.$deferredAction();
    }
    _Future__chainForeignFuture_closure0.builtin$cls = "_Future__chainForeignFuture_closure0";
    if (!("name" in _Future__chainForeignFuture_closure0))
      _Future__chainForeignFuture_closure0.name = "_Future__chainForeignFuture_closure0";
    $desc = $collectedClasses$._Future__chainForeignFuture_closure0[1];
    _Future__chainForeignFuture_closure0.prototype = $desc;
    _Future__chainForeignFuture_closure0.$__fields__ = ["_captured_target_1"];
    function _Future__chainForeignFuture_closure1(_captured_target_2, _captured_e_3, _captured_s_4) {
      this._captured_target_2 = _captured_target_2;
      this._captured_e_3 = _captured_e_3;
      this._captured_s_4 = _captured_s_4;
      this.$deferredAction();
    }
    _Future__chainForeignFuture_closure1.builtin$cls = "_Future__chainForeignFuture_closure1";
    if (!("name" in _Future__chainForeignFuture_closure1))
      _Future__chainForeignFuture_closure1.name = "_Future__chainForeignFuture_closure1";
    $desc = $collectedClasses$._Future__chainForeignFuture_closure1[1];
    _Future__chainForeignFuture_closure1.prototype = $desc;
    _Future__chainForeignFuture_closure1.$__fields__ = ["_captured_target_2", "_captured_e_3", "_captured_s_4"];
    function _Future__asyncComplete_closure(_captured_this_0, _captured_coreFuture_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_coreFuture_1 = _captured_coreFuture_1;
      this.$deferredAction();
    }
    _Future__asyncComplete_closure.builtin$cls = "_Future__asyncComplete_closure";
    if (!("name" in _Future__asyncComplete_closure))
      _Future__asyncComplete_closure.name = "_Future__asyncComplete_closure";
    $desc = $collectedClasses$._Future__asyncComplete_closure[1];
    _Future__asyncComplete_closure.prototype = $desc;
    _Future__asyncComplete_closure.$__fields__ = ["_captured_this_0", "_captured_coreFuture_1"];
    function _Future__asyncComplete_closure0(_captured_this_2, _captured_value_3) {
      this._captured_this_2 = _captured_this_2;
      this._captured_value_3 = _captured_value_3;
      this.$deferredAction();
    }
    _Future__asyncComplete_closure0.builtin$cls = "_Future__asyncComplete_closure0";
    if (!("name" in _Future__asyncComplete_closure0))
      _Future__asyncComplete_closure0.name = "_Future__asyncComplete_closure0";
    $desc = $collectedClasses$._Future__asyncComplete_closure0[1];
    _Future__asyncComplete_closure0.prototype = $desc;
    _Future__asyncComplete_closure0.$__fields__ = ["_captured_this_2", "_captured_value_3"];
    function _Future__asyncCompleteError_closure(_captured_this_0, _captured_error_1, _captured_stackTrace_2) {
      this._captured_this_0 = _captured_this_0;
      this._captured_error_1 = _captured_error_1;
      this._captured_stackTrace_2 = _captured_stackTrace_2;
      this.$deferredAction();
    }
    _Future__asyncCompleteError_closure.builtin$cls = "_Future__asyncCompleteError_closure";
    if (!("name" in _Future__asyncCompleteError_closure))
      _Future__asyncCompleteError_closure.name = "_Future__asyncCompleteError_closure";
    $desc = $collectedClasses$._Future__asyncCompleteError_closure[1];
    _Future__asyncCompleteError_closure.prototype = $desc;
    _Future__asyncCompleteError_closure.$__fields__ = ["_captured_this_0", "_captured_error_1", "_captured_stackTrace_2"];
    function _Future__propagateToListeners_handleValueCallback(_box_1, _captured_listener_3, _captured_sourceValue_4, _captured_zone_5) {
      this._box_1 = _box_1;
      this._captured_listener_3 = _captured_listener_3;
      this._captured_sourceValue_4 = _captured_sourceValue_4;
      this._captured_zone_5 = _captured_zone_5;
      this.$deferredAction();
    }
    _Future__propagateToListeners_handleValueCallback.builtin$cls = "_Future__propagateToListeners_handleValueCallback";
    if (!("name" in _Future__propagateToListeners_handleValueCallback))
      _Future__propagateToListeners_handleValueCallback.name = "_Future__propagateToListeners_handleValueCallback";
    $desc = $collectedClasses$._Future__propagateToListeners_handleValueCallback[1];
    _Future__propagateToListeners_handleValueCallback.prototype = $desc;
    _Future__propagateToListeners_handleValueCallback.$__fields__ = ["_box_1", "_captured_listener_3", "_captured_sourceValue_4", "_captured_zone_5"];
    function _Future__propagateToListeners_handleError(_box_2, _box_1, _captured_listener_6, _captured_zone_7) {
      this._box_2 = _box_2;
      this._box_1 = _box_1;
      this._captured_listener_6 = _captured_listener_6;
      this._captured_zone_7 = _captured_zone_7;
      this.$deferredAction();
    }
    _Future__propagateToListeners_handleError.builtin$cls = "_Future__propagateToListeners_handleError";
    if (!("name" in _Future__propagateToListeners_handleError))
      _Future__propagateToListeners_handleError.name = "_Future__propagateToListeners_handleError";
    $desc = $collectedClasses$._Future__propagateToListeners_handleError[1];
    _Future__propagateToListeners_handleError.prototype = $desc;
    _Future__propagateToListeners_handleError.$__fields__ = ["_box_2", "_box_1", "_captured_listener_6", "_captured_zone_7"];
    function _Future__propagateToListeners_handleWhenCompleteCallback(_box_2, _box_1, _captured_hasError_8, _captured_listener_9, _captured_zone_10) {
      this._box_2 = _box_2;
      this._box_1 = _box_1;
      this._captured_hasError_8 = _captured_hasError_8;
      this._captured_listener_9 = _captured_listener_9;
      this._captured_zone_10 = _captured_zone_10;
      this.$deferredAction();
    }
    _Future__propagateToListeners_handleWhenCompleteCallback.builtin$cls = "_Future__propagateToListeners_handleWhenCompleteCallback";
    if (!("name" in _Future__propagateToListeners_handleWhenCompleteCallback))
      _Future__propagateToListeners_handleWhenCompleteCallback.name = "_Future__propagateToListeners_handleWhenCompleteCallback";
    $desc = $collectedClasses$._Future__propagateToListeners_handleWhenCompleteCallback[1];
    _Future__propagateToListeners_handleWhenCompleteCallback.prototype = $desc;
    _Future__propagateToListeners_handleWhenCompleteCallback.$__fields__ = ["_box_2", "_box_1", "_captured_hasError_8", "_captured_listener_9", "_captured_zone_10"];
    function _Future__propagateToListeners_handleWhenCompleteCallback_closure(_box_2, _captured_result_11) {
      this._box_2 = _box_2;
      this._captured_result_11 = _captured_result_11;
      this.$deferredAction();
    }
    _Future__propagateToListeners_handleWhenCompleteCallback_closure.builtin$cls = "_Future__propagateToListeners_handleWhenCompleteCallback_closure";
    if (!("name" in _Future__propagateToListeners_handleWhenCompleteCallback_closure))
      _Future__propagateToListeners_handleWhenCompleteCallback_closure.name = "_Future__propagateToListeners_handleWhenCompleteCallback_closure";
    $desc = $collectedClasses$._Future__propagateToListeners_handleWhenCompleteCallback_closure[1];
    _Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = $desc;
    _Future__propagateToListeners_handleWhenCompleteCallback_closure.$__fields__ = ["_box_2", "_captured_result_11"];
    function _Future__propagateToListeners_handleWhenCompleteCallback_closure0(_async$_box_0, _captured_result_12) {
      this._async$_box_0 = _async$_box_0;
      this._captured_result_12 = _captured_result_12;
      this.$deferredAction();
    }
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0.builtin$cls = "_Future__propagateToListeners_handleWhenCompleteCallback_closure0";
    if (!("name" in _Future__propagateToListeners_handleWhenCompleteCallback_closure0))
      _Future__propagateToListeners_handleWhenCompleteCallback_closure0.name = "_Future__propagateToListeners_handleWhenCompleteCallback_closure0";
    $desc = $collectedClasses$._Future__propagateToListeners_handleWhenCompleteCallback_closure0[1];
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0.prototype = $desc;
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0.$__fields__ = ["_async$_box_0", "_captured_result_12"];
    function _AsyncCallbackEntry(callback, zone, next) {
      this.callback = callback;
      this.zone = zone;
      this.next = next;
      this.$deferredAction();
    }
    _AsyncCallbackEntry.builtin$cls = "_AsyncCallbackEntry";
    if (!("name" in _AsyncCallbackEntry))
      _AsyncCallbackEntry.name = "_AsyncCallbackEntry";
    $desc = $collectedClasses$._AsyncCallbackEntry[1];
    _AsyncCallbackEntry.prototype = $desc;
    _AsyncCallbackEntry.$__fields__ = ["callback", "zone", "next"];
    _AsyncCallbackEntry.prototype.get$zone = function() {
      return this.zone;
    };
    _AsyncCallbackEntry.prototype.get$next = function(receiver) {
      return this.next;
    };
    _AsyncCallbackEntry.prototype.set$next = function(receiver, v) {
      return this.next = v;
    };
    function Stream() {
      this.$deferredAction();
    }
    Stream.builtin$cls = "Stream";
    if (!("name" in Stream))
      Stream.name = "Stream";
    $desc = $collectedClasses$.Stream[1];
    Stream.prototype = $desc;
    Stream.$__fields__ = [];
    function Stream_contains_closure(_async$_box_0, _async$_captured_this_1, _captured_needle_2, _captured_future_3) {
      this._async$_box_0 = _async$_box_0;
      this._async$_captured_this_1 = _async$_captured_this_1;
      this._captured_needle_2 = _captured_needle_2;
      this._captured_future_3 = _captured_future_3;
      this.$deferredAction();
    }
    Stream_contains_closure.builtin$cls = "Stream_contains_closure";
    if (!("name" in Stream_contains_closure))
      Stream_contains_closure.name = "Stream_contains_closure";
    $desc = $collectedClasses$.Stream_contains_closure[1];
    Stream_contains_closure.prototype = $desc;
    Stream_contains_closure.$__fields__ = ["_async$_box_0", "_async$_captured_this_1", "_captured_needle_2", "_captured_future_3"];
    function Stream_contains__closure(_captured_needle_4, _captured_element_5) {
      this._captured_needle_4 = _captured_needle_4;
      this._captured_element_5 = _captured_element_5;
      this.$deferredAction();
    }
    Stream_contains__closure.builtin$cls = "Stream_contains__closure";
    if (!("name" in Stream_contains__closure))
      Stream_contains__closure.name = "Stream_contains__closure";
    $desc = $collectedClasses$.Stream_contains__closure[1];
    Stream_contains__closure.prototype = $desc;
    Stream_contains__closure.$__fields__ = ["_captured_needle_4", "_captured_element_5"];
    function Stream_contains__closure0(_async$_box_0, _captured_future_6) {
      this._async$_box_0 = _async$_box_0;
      this._captured_future_6 = _captured_future_6;
      this.$deferredAction();
    }
    Stream_contains__closure0.builtin$cls = "Stream_contains__closure0";
    if (!("name" in Stream_contains__closure0))
      Stream_contains__closure0.name = "Stream_contains__closure0";
    $desc = $collectedClasses$.Stream_contains__closure0[1];
    Stream_contains__closure0.prototype = $desc;
    Stream_contains__closure0.$__fields__ = ["_async$_box_0", "_captured_future_6"];
    function Stream_contains_closure0(_captured_future_7) {
      this._captured_future_7 = _captured_future_7;
      this.$deferredAction();
    }
    Stream_contains_closure0.builtin$cls = "Stream_contains_closure0";
    if (!("name" in Stream_contains_closure0))
      Stream_contains_closure0.name = "Stream_contains_closure0";
    $desc = $collectedClasses$.Stream_contains_closure0[1];
    Stream_contains_closure0.prototype = $desc;
    Stream_contains_closure0.$__fields__ = ["_captured_future_7"];
    function Stream_forEach_closure(_async$_box_0, _async$_captured_this_1, _captured_action_2, _captured_future_3) {
      this._async$_box_0 = _async$_box_0;
      this._async$_captured_this_1 = _async$_captured_this_1;
      this._captured_action_2 = _captured_action_2;
      this._captured_future_3 = _captured_future_3;
      this.$deferredAction();
    }
    Stream_forEach_closure.builtin$cls = "Stream_forEach_closure";
    if (!("name" in Stream_forEach_closure))
      Stream_forEach_closure.name = "Stream_forEach_closure";
    $desc = $collectedClasses$.Stream_forEach_closure[1];
    Stream_forEach_closure.prototype = $desc;
    Stream_forEach_closure.$__fields__ = ["_async$_box_0", "_async$_captured_this_1", "_captured_action_2", "_captured_future_3"];
    function Stream_forEach__closure(_captured_action_4, _captured_element_5) {
      this._captured_action_4 = _captured_action_4;
      this._captured_element_5 = _captured_element_5;
      this.$deferredAction();
    }
    Stream_forEach__closure.builtin$cls = "Stream_forEach__closure";
    if (!("name" in Stream_forEach__closure))
      Stream_forEach__closure.name = "Stream_forEach__closure";
    $desc = $collectedClasses$.Stream_forEach__closure[1];
    Stream_forEach__closure.prototype = $desc;
    Stream_forEach__closure.$__fields__ = ["_captured_action_4", "_captured_element_5"];
    function Stream_forEach__closure0() {
      this.$deferredAction();
    }
    Stream_forEach__closure0.builtin$cls = "Stream_forEach__closure0";
    if (!("name" in Stream_forEach__closure0))
      Stream_forEach__closure0.name = "Stream_forEach__closure0";
    $desc = $collectedClasses$.Stream_forEach__closure0[1];
    Stream_forEach__closure0.prototype = $desc;
    Stream_forEach__closure0.$__fields__ = [];
    function Stream_forEach_closure0(_captured_future_6) {
      this._captured_future_6 = _captured_future_6;
      this.$deferredAction();
    }
    Stream_forEach_closure0.builtin$cls = "Stream_forEach_closure0";
    if (!("name" in Stream_forEach_closure0))
      Stream_forEach_closure0.name = "Stream_forEach_closure0";
    $desc = $collectedClasses$.Stream_forEach_closure0[1];
    Stream_forEach_closure0.prototype = $desc;
    Stream_forEach_closure0.$__fields__ = ["_captured_future_6"];
    function Stream_length_closure(_async$_box_0) {
      this._async$_box_0 = _async$_box_0;
      this.$deferredAction();
    }
    Stream_length_closure.builtin$cls = "Stream_length_closure";
    if (!("name" in Stream_length_closure))
      Stream_length_closure.name = "Stream_length_closure";
    $desc = $collectedClasses$.Stream_length_closure[1];
    Stream_length_closure.prototype = $desc;
    Stream_length_closure.$__fields__ = ["_async$_box_0"];
    function Stream_length_closure0(_async$_box_0, _captured_future_1) {
      this._async$_box_0 = _async$_box_0;
      this._captured_future_1 = _captured_future_1;
      this.$deferredAction();
    }
    Stream_length_closure0.builtin$cls = "Stream_length_closure0";
    if (!("name" in Stream_length_closure0))
      Stream_length_closure0.name = "Stream_length_closure0";
    $desc = $collectedClasses$.Stream_length_closure0[1];
    Stream_length_closure0.prototype = $desc;
    Stream_length_closure0.$__fields__ = ["_async$_box_0", "_captured_future_1"];
    function Stream_isEmpty_closure(_async$_box_0, _captured_future_1) {
      this._async$_box_0 = _async$_box_0;
      this._captured_future_1 = _captured_future_1;
      this.$deferredAction();
    }
    Stream_isEmpty_closure.builtin$cls = "Stream_isEmpty_closure";
    if (!("name" in Stream_isEmpty_closure))
      Stream_isEmpty_closure.name = "Stream_isEmpty_closure";
    $desc = $collectedClasses$.Stream_isEmpty_closure[1];
    Stream_isEmpty_closure.prototype = $desc;
    Stream_isEmpty_closure.$__fields__ = ["_async$_box_0", "_captured_future_1"];
    function Stream_isEmpty_closure0(_captured_future_2) {
      this._captured_future_2 = _captured_future_2;
      this.$deferredAction();
    }
    Stream_isEmpty_closure0.builtin$cls = "Stream_isEmpty_closure0";
    if (!("name" in Stream_isEmpty_closure0))
      Stream_isEmpty_closure0.name = "Stream_isEmpty_closure0";
    $desc = $collectedClasses$.Stream_isEmpty_closure0[1];
    Stream_isEmpty_closure0.prototype = $desc;
    Stream_isEmpty_closure0.$__fields__ = ["_captured_future_2"];
    function Stream_toList_closure(_captured_this_0, _async$_captured_result_1) {
      this._captured_this_0 = _captured_this_0;
      this._async$_captured_result_1 = _async$_captured_result_1;
      this.$deferredAction();
    }
    Stream_toList_closure.builtin$cls = "Stream_toList_closure";
    if (!("name" in Stream_toList_closure))
      Stream_toList_closure.name = "Stream_toList_closure";
    $desc = $collectedClasses$.Stream_toList_closure[1];
    Stream_toList_closure.prototype = $desc;
    Stream_toList_closure.$__fields__ = ["_captured_this_0", "_async$_captured_result_1"];
    function Stream_toList_closure0(_captured_result_2, _captured_future_3) {
      this._captured_result_2 = _captured_result_2;
      this._captured_future_3 = _captured_future_3;
      this.$deferredAction();
    }
    Stream_toList_closure0.builtin$cls = "Stream_toList_closure0";
    if (!("name" in Stream_toList_closure0))
      Stream_toList_closure0.name = "Stream_toList_closure0";
    $desc = $collectedClasses$.Stream_toList_closure0[1];
    Stream_toList_closure0.prototype = $desc;
    Stream_toList_closure0.$__fields__ = ["_captured_result_2", "_captured_future_3"];
    function Stream_last_closure(_async$_box_0, _async$_captured_this_1) {
      this._async$_box_0 = _async$_box_0;
      this._async$_captured_this_1 = _async$_captured_this_1;
      this.$deferredAction();
    }
    Stream_last_closure.builtin$cls = "Stream_last_closure";
    if (!("name" in Stream_last_closure))
      Stream_last_closure.name = "Stream_last_closure";
    $desc = $collectedClasses$.Stream_last_closure[1];
    Stream_last_closure.prototype = $desc;
    Stream_last_closure.$__fields__ = ["_async$_box_0", "_async$_captured_this_1"];
    function Stream_last_closure0(_async$_box_0, _captured_future_2) {
      this._async$_box_0 = _async$_box_0;
      this._captured_future_2 = _captured_future_2;
      this.$deferredAction();
    }
    Stream_last_closure0.builtin$cls = "Stream_last_closure0";
    if (!("name" in Stream_last_closure0))
      Stream_last_closure0.name = "Stream_last_closure0";
    $desc = $collectedClasses$.Stream_last_closure0[1];
    Stream_last_closure0.prototype = $desc;
    Stream_last_closure0.$__fields__ = ["_async$_box_0", "_captured_future_2"];
    function StreamSubscription() {
      this.$deferredAction();
    }
    StreamSubscription.builtin$cls = "StreamSubscription";
    if (!("name" in StreamSubscription))
      StreamSubscription.name = "StreamSubscription";
    $desc = $collectedClasses$.StreamSubscription[1];
    StreamSubscription.prototype = $desc;
    StreamSubscription.$__fields__ = [];
    function _StreamController() {
      this.$deferredAction();
    }
    _StreamController.builtin$cls = "_StreamController";
    if (!("name" in _StreamController))
      _StreamController.name = "_StreamController";
    $desc = $collectedClasses$._StreamController[1];
    _StreamController.prototype = $desc;
    _StreamController.$__fields__ = [];
    function _StreamController__subscribe_closure(_captured_this_0) {
      this._captured_this_0 = _captured_this_0;
      this.$deferredAction();
    }
    _StreamController__subscribe_closure.builtin$cls = "_StreamController__subscribe_closure";
    if (!("name" in _StreamController__subscribe_closure))
      _StreamController__subscribe_closure.name = "_StreamController__subscribe_closure";
    $desc = $collectedClasses$._StreamController__subscribe_closure[1];
    _StreamController__subscribe_closure.prototype = $desc;
    _StreamController__subscribe_closure.$__fields__ = ["_captured_this_0"];
    function _StreamController__recordCancel_complete(_captured_this_0) {
      this._captured_this_0 = _captured_this_0;
      this.$deferredAction();
    }
    _StreamController__recordCancel_complete.builtin$cls = "_StreamController__recordCancel_complete";
    if (!("name" in _StreamController__recordCancel_complete))
      _StreamController__recordCancel_complete.name = "_StreamController__recordCancel_complete";
    $desc = $collectedClasses$._StreamController__recordCancel_complete[1];
    _StreamController__recordCancel_complete.prototype = $desc;
    _StreamController__recordCancel_complete.$__fields__ = ["_captured_this_0"];
    function _SyncStreamControllerDispatch() {
      this.$deferredAction();
    }
    _SyncStreamControllerDispatch.builtin$cls = "_SyncStreamControllerDispatch";
    if (!("name" in _SyncStreamControllerDispatch))
      _SyncStreamControllerDispatch.name = "_SyncStreamControllerDispatch";
    $desc = $collectedClasses$._SyncStreamControllerDispatch[1];
    _SyncStreamControllerDispatch.prototype = $desc;
    _SyncStreamControllerDispatch.$__fields__ = [];
    function _AsyncStreamControllerDispatch() {
      this.$deferredAction();
    }
    _AsyncStreamControllerDispatch.builtin$cls = "_AsyncStreamControllerDispatch";
    if (!("name" in _AsyncStreamControllerDispatch))
      _AsyncStreamControllerDispatch.name = "_AsyncStreamControllerDispatch";
    $desc = $collectedClasses$._AsyncStreamControllerDispatch[1];
    _AsyncStreamControllerDispatch.prototype = $desc;
    _AsyncStreamControllerDispatch.$__fields__ = [];
    function _AsyncStreamController(_varData, _state, _doneFuture, onListen, onPause, onResume, onCancel) {
      this._varData = _varData;
      this._state = _state;
      this._doneFuture = _doneFuture;
      this.onListen = onListen;
      this.onPause = onPause;
      this.onResume = onResume;
      this.onCancel = onCancel;
      this.$deferredAction();
    }
    _AsyncStreamController.builtin$cls = "_AsyncStreamController";
    if (!("name" in _AsyncStreamController))
      _AsyncStreamController.name = "_AsyncStreamController";
    $desc = $collectedClasses$._AsyncStreamController[1];
    _AsyncStreamController.prototype = $desc;
    _AsyncStreamController.$__fields__ = ["_varData", "_state", "_doneFuture", "onListen", "onPause", "onResume", "onCancel"];
    function _SyncStreamController(_varData, _state, _doneFuture, onListen, onPause, onResume, onCancel) {
      this._varData = _varData;
      this._state = _state;
      this._doneFuture = _doneFuture;
      this.onListen = onListen;
      this.onPause = onPause;
      this.onResume = onResume;
      this.onCancel = onCancel;
      this.$deferredAction();
    }
    _SyncStreamController.builtin$cls = "_SyncStreamController";
    if (!("name" in _SyncStreamController))
      _SyncStreamController.name = "_SyncStreamController";
    $desc = $collectedClasses$._SyncStreamController[1];
    _SyncStreamController.prototype = $desc;
    _SyncStreamController.$__fields__ = ["_varData", "_state", "_doneFuture", "onListen", "onPause", "onResume", "onCancel"];
    function _ControllerStream(_async$_controller) {
      this._async$_controller = _async$_controller;
      this.$deferredAction();
    }
    _ControllerStream.builtin$cls = "_ControllerStream";
    if (!("name" in _ControllerStream))
      _ControllerStream.name = "_ControllerStream";
    $desc = $collectedClasses$._ControllerStream[1];
    _ControllerStream.prototype = $desc;
    _ControllerStream.$__fields__ = ["_async$_controller"];
    function _ControllerSubscription(_async$_controller, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
      this._async$_controller = _async$_controller;
      this._async$_onData = _async$_onData;
      this._onError = _onError;
      this._onDone = _onDone;
      this._zone = _zone;
      this._state = _state;
      this._cancelFuture = _cancelFuture;
      this._pending = _pending;
      this.$deferredAction();
    }
    _ControllerSubscription.builtin$cls = "_ControllerSubscription";
    if (!("name" in _ControllerSubscription))
      _ControllerSubscription.name = "_ControllerSubscription";
    $desc = $collectedClasses$._ControllerSubscription[1];
    _ControllerSubscription.prototype = $desc;
    _ControllerSubscription.$__fields__ = ["_async$_controller", "_async$_onData", "_onError", "_onDone", "_zone", "_state", "_cancelFuture", "_pending"];
    _ControllerSubscription.prototype.get$_async$_controller = function() {
      return this._async$_controller;
    };
    function _AddStreamState(addStreamFuture, addSubscription) {
      this.addStreamFuture = addStreamFuture;
      this.addSubscription = addSubscription;
      this.$deferredAction();
    }
    _AddStreamState.builtin$cls = "_AddStreamState";
    if (!("name" in _AddStreamState))
      _AddStreamState.name = "_AddStreamState";
    $desc = $collectedClasses$._AddStreamState[1];
    _AddStreamState.prototype = $desc;
    _AddStreamState.$__fields__ = ["addStreamFuture", "addSubscription"];
    function _AddStreamState_makeErrorHandler_closure(_captured_controller_0) {
      this._captured_controller_0 = _captured_controller_0;
      this.$deferredAction();
    }
    _AddStreamState_makeErrorHandler_closure.builtin$cls = "_AddStreamState_makeErrorHandler_closure";
    if (!("name" in _AddStreamState_makeErrorHandler_closure))
      _AddStreamState_makeErrorHandler_closure.name = "_AddStreamState_makeErrorHandler_closure";
    $desc = $collectedClasses$._AddStreamState_makeErrorHandler_closure[1];
    _AddStreamState_makeErrorHandler_closure.prototype = $desc;
    _AddStreamState_makeErrorHandler_closure.$__fields__ = ["_captured_controller_0"];
    function _AddStreamState_cancel_closure(_captured_this_0) {
      this._captured_this_0 = _captured_this_0;
      this.$deferredAction();
    }
    _AddStreamState_cancel_closure.builtin$cls = "_AddStreamState_cancel_closure";
    if (!("name" in _AddStreamState_cancel_closure))
      _AddStreamState_cancel_closure.name = "_AddStreamState_cancel_closure";
    $desc = $collectedClasses$._AddStreamState_cancel_closure[1];
    _AddStreamState_cancel_closure.prototype = $desc;
    _AddStreamState_cancel_closure.$__fields__ = ["_captured_this_0"];
    function _StreamControllerAddStreamState(varData, addStreamFuture, addSubscription) {
      this.varData = varData;
      this.addStreamFuture = addStreamFuture;
      this.addSubscription = addSubscription;
      this.$deferredAction();
    }
    _StreamControllerAddStreamState.builtin$cls = "_StreamControllerAddStreamState";
    if (!("name" in _StreamControllerAddStreamState))
      _StreamControllerAddStreamState.name = "_StreamControllerAddStreamState";
    $desc = $collectedClasses$._StreamControllerAddStreamState[1];
    _StreamControllerAddStreamState.prototype = $desc;
    _StreamControllerAddStreamState.$__fields__ = ["varData", "addStreamFuture", "addSubscription"];
    _StreamControllerAddStreamState.prototype.get$varData = function() {
      return this.varData;
    };
    _StreamControllerAddStreamState.prototype.set$varData = function(v) {
      return this.varData = v;
    };
    function _EventSink() {
      this.$deferredAction();
    }
    _EventSink.builtin$cls = "_EventSink";
    if (!("name" in _EventSink))
      _EventSink.name = "_EventSink";
    $desc = $collectedClasses$._EventSink[1];
    _EventSink.prototype = $desc;
    _EventSink.$__fields__ = [];
    function _BufferingStreamSubscription(_async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
      this._async$_onData = _async$_onData;
      this._onError = _onError;
      this._onDone = _onDone;
      this._zone = _zone;
      this._state = _state;
      this._cancelFuture = _cancelFuture;
      this._pending = _pending;
      this.$deferredAction();
    }
    _BufferingStreamSubscription.builtin$cls = "_BufferingStreamSubscription";
    if (!("name" in _BufferingStreamSubscription))
      _BufferingStreamSubscription.name = "_BufferingStreamSubscription";
    $desc = $collectedClasses$._BufferingStreamSubscription[1];
    _BufferingStreamSubscription.prototype = $desc;
    _BufferingStreamSubscription.$__fields__ = ["_async$_onData", "_onError", "_onDone", "_zone", "_state", "_cancelFuture", "_pending"];
    _BufferingStreamSubscription.prototype.get$_onError = function() {
      return this._onError;
    };
    _BufferingStreamSubscription.prototype.get$_zone = function() {
      return this._zone;
    };
    function _BufferingStreamSubscription__sendError_sendError(_captured_this_0, _captured_error_1, _captured_stackTrace_2) {
      this._captured_this_0 = _captured_this_0;
      this._captured_error_1 = _captured_error_1;
      this._captured_stackTrace_2 = _captured_stackTrace_2;
      this.$deferredAction();
    }
    _BufferingStreamSubscription__sendError_sendError.builtin$cls = "_BufferingStreamSubscription__sendError_sendError";
    if (!("name" in _BufferingStreamSubscription__sendError_sendError))
      _BufferingStreamSubscription__sendError_sendError.name = "_BufferingStreamSubscription__sendError_sendError";
    $desc = $collectedClasses$._BufferingStreamSubscription__sendError_sendError[1];
    _BufferingStreamSubscription__sendError_sendError.prototype = $desc;
    _BufferingStreamSubscription__sendError_sendError.$__fields__ = ["_captured_this_0", "_captured_error_1", "_captured_stackTrace_2"];
    function _BufferingStreamSubscription__sendDone_sendDone(_captured_this_0) {
      this._captured_this_0 = _captured_this_0;
      this.$deferredAction();
    }
    _BufferingStreamSubscription__sendDone_sendDone.builtin$cls = "_BufferingStreamSubscription__sendDone_sendDone";
    if (!("name" in _BufferingStreamSubscription__sendDone_sendDone))
      _BufferingStreamSubscription__sendDone_sendDone.name = "_BufferingStreamSubscription__sendDone_sendDone";
    $desc = $collectedClasses$._BufferingStreamSubscription__sendDone_sendDone[1];
    _BufferingStreamSubscription__sendDone_sendDone.prototype = $desc;
    _BufferingStreamSubscription__sendDone_sendDone.$__fields__ = ["_captured_this_0"];
    function _StreamImpl() {
      this.$deferredAction();
    }
    _StreamImpl.builtin$cls = "_StreamImpl";
    if (!("name" in _StreamImpl))
      _StreamImpl.name = "_StreamImpl";
    $desc = $collectedClasses$._StreamImpl[1];
    _StreamImpl.prototype = $desc;
    _StreamImpl.$__fields__ = [];
    function _DelayedEvent(next) {
      this.next = next;
      this.$deferredAction();
    }
    _DelayedEvent.builtin$cls = "_DelayedEvent";
    if (!("name" in _DelayedEvent))
      _DelayedEvent.name = "_DelayedEvent";
    $desc = $collectedClasses$._DelayedEvent[1];
    _DelayedEvent.prototype = $desc;
    _DelayedEvent.$__fields__ = ["next"];
    _DelayedEvent.prototype.get$next = function(receiver) {
      return this.next;
    };
    _DelayedEvent.prototype.set$next = function(receiver, v) {
      return this.next = v;
    };
    function _DelayedData(value, next) {
      this.value = value;
      this.next = next;
      this.$deferredAction();
    }
    _DelayedData.builtin$cls = "_DelayedData";
    if (!("name" in _DelayedData))
      _DelayedData.name = "_DelayedData";
    $desc = $collectedClasses$._DelayedData[1];
    _DelayedData.prototype = $desc;
    _DelayedData.$__fields__ = ["value", "next"];
    _DelayedData.prototype.get$value = function(receiver) {
      return this.value;
    };
    function _DelayedError(error, stackTrace, next) {
      this.error = error;
      this.stackTrace = stackTrace;
      this.next = next;
      this.$deferredAction();
    }
    _DelayedError.builtin$cls = "_DelayedError";
    if (!("name" in _DelayedError))
      _DelayedError.name = "_DelayedError";
    $desc = $collectedClasses$._DelayedError[1];
    _DelayedError.prototype = $desc;
    _DelayedError.$__fields__ = ["error", "stackTrace", "next"];
    _DelayedError.prototype.get$error = function(receiver) {
      return this.error;
    };
    _DelayedError.prototype.get$stackTrace = function() {
      return this.stackTrace;
    };
    function _DelayedDone() {
      this.$deferredAction();
    }
    _DelayedDone.builtin$cls = "_DelayedDone";
    if (!("name" in _DelayedDone))
      _DelayedDone.name = "_DelayedDone";
    $desc = $collectedClasses$._DelayedDone[1];
    _DelayedDone.prototype = $desc;
    _DelayedDone.$__fields__ = [];
    function _PendingEvents() {
      this.$deferredAction();
    }
    _PendingEvents.builtin$cls = "_PendingEvents";
    if (!("name" in _PendingEvents))
      _PendingEvents.name = "_PendingEvents";
    $desc = $collectedClasses$._PendingEvents[1];
    _PendingEvents.prototype = $desc;
    _PendingEvents.$__fields__ = [];
    function _PendingEvents_schedule_closure(_captured_this_0, _captured_dispatch_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_dispatch_1 = _captured_dispatch_1;
      this.$deferredAction();
    }
    _PendingEvents_schedule_closure.builtin$cls = "_PendingEvents_schedule_closure";
    if (!("name" in _PendingEvents_schedule_closure))
      _PendingEvents_schedule_closure.name = "_PendingEvents_schedule_closure";
    $desc = $collectedClasses$._PendingEvents_schedule_closure[1];
    _PendingEvents_schedule_closure.prototype = $desc;
    _PendingEvents_schedule_closure.$__fields__ = ["_captured_this_0", "_captured_dispatch_1"];
    function _StreamImplEvents(firstPendingEvent, lastPendingEvent, _state) {
      this.firstPendingEvent = firstPendingEvent;
      this.lastPendingEvent = lastPendingEvent;
      this._state = _state;
      this.$deferredAction();
    }
    _StreamImplEvents.builtin$cls = "_StreamImplEvents";
    if (!("name" in _StreamImplEvents))
      _StreamImplEvents.name = "_StreamImplEvents";
    $desc = $collectedClasses$._StreamImplEvents[1];
    _StreamImplEvents.prototype = $desc;
    _StreamImplEvents.$__fields__ = ["firstPendingEvent", "lastPendingEvent", "_state"];
    function _DoneStreamSubscription(_zone, _state, _onDone) {
      this._zone = _zone;
      this._state = _state;
      this._onDone = _onDone;
      this.$deferredAction();
    }
    _DoneStreamSubscription.builtin$cls = "_DoneStreamSubscription";
    if (!("name" in _DoneStreamSubscription))
      _DoneStreamSubscription.name = "_DoneStreamSubscription";
    $desc = $collectedClasses$._DoneStreamSubscription[1];
    _DoneStreamSubscription.prototype = $desc;
    _DoneStreamSubscription.$__fields__ = ["_zone", "_state", "_onDone"];
    _DoneStreamSubscription.prototype.get$_zone = function() {
      return this._zone;
    };
    function _AsBroadcastStream(_async$_source, _onListenHandler, _onCancelHandler, _zone, _async$_controller, _subscription) {
      this._async$_source = _async$_source;
      this._onListenHandler = _onListenHandler;
      this._onCancelHandler = _onCancelHandler;
      this._zone = _zone;
      this._async$_controller = _async$_controller;
      this._subscription = _subscription;
      this.$deferredAction();
    }
    _AsBroadcastStream.builtin$cls = "_AsBroadcastStream";
    if (!("name" in _AsBroadcastStream))
      _AsBroadcastStream.name = "_AsBroadcastStream";
    $desc = $collectedClasses$._AsBroadcastStream[1];
    _AsBroadcastStream.prototype = $desc;
    _AsBroadcastStream.$__fields__ = ["_async$_source", "_onListenHandler", "_onCancelHandler", "_zone", "_async$_controller", "_subscription"];
    _AsBroadcastStream.prototype.get$_zone = function() {
      return this._zone;
    };
    function _BroadcastSubscriptionWrapper(_async$_stream) {
      this._async$_stream = _async$_stream;
      this.$deferredAction();
    }
    _BroadcastSubscriptionWrapper.builtin$cls = "_BroadcastSubscriptionWrapper";
    if (!("name" in _BroadcastSubscriptionWrapper))
      _BroadcastSubscriptionWrapper.name = "_BroadcastSubscriptionWrapper";
    $desc = $collectedClasses$._BroadcastSubscriptionWrapper[1];
    _BroadcastSubscriptionWrapper.prototype = $desc;
    _BroadcastSubscriptionWrapper.$__fields__ = ["_async$_stream"];
    function _StreamIteratorImpl(_subscription, _async$_current, _futureOrPrefetch, _state) {
      this._subscription = _subscription;
      this._async$_current = _async$_current;
      this._futureOrPrefetch = _futureOrPrefetch;
      this._state = _state;
      this.$deferredAction();
    }
    _StreamIteratorImpl.builtin$cls = "_StreamIteratorImpl";
    if (!("name" in _StreamIteratorImpl))
      _StreamIteratorImpl.name = "_StreamIteratorImpl";
    $desc = $collectedClasses$._StreamIteratorImpl[1];
    _StreamIteratorImpl.prototype = $desc;
    _StreamIteratorImpl.$__fields__ = ["_subscription", "_async$_current", "_futureOrPrefetch", "_state"];
    function _cancelAndError_closure(_captured_future_0, _captured_error_1, _captured_stackTrace_2) {
      this._captured_future_0 = _captured_future_0;
      this._captured_error_1 = _captured_error_1;
      this._captured_stackTrace_2 = _captured_stackTrace_2;
      this.$deferredAction();
    }
    _cancelAndError_closure.builtin$cls = "_cancelAndError_closure";
    if (!("name" in _cancelAndError_closure))
      _cancelAndError_closure.name = "_cancelAndError_closure";
    $desc = $collectedClasses$._cancelAndError_closure[1];
    _cancelAndError_closure.prototype = $desc;
    _cancelAndError_closure.$__fields__ = ["_captured_future_0", "_captured_error_1", "_captured_stackTrace_2"];
    function _cancelAndErrorClosure_closure(_captured_subscription_0, _captured_future_1) {
      this._captured_subscription_0 = _captured_subscription_0;
      this._captured_future_1 = _captured_future_1;
      this.$deferredAction();
    }
    _cancelAndErrorClosure_closure.builtin$cls = "_cancelAndErrorClosure_closure";
    if (!("name" in _cancelAndErrorClosure_closure))
      _cancelAndErrorClosure_closure.name = "_cancelAndErrorClosure_closure";
    $desc = $collectedClasses$._cancelAndErrorClosure_closure[1];
    _cancelAndErrorClosure_closure.prototype = $desc;
    _cancelAndErrorClosure_closure.$__fields__ = ["_captured_subscription_0", "_captured_future_1"];
    function _cancelAndValue_closure(_captured_future_0, _captured_value_1) {
      this._captured_future_0 = _captured_future_0;
      this._captured_value_1 = _captured_value_1;
      this.$deferredAction();
    }
    _cancelAndValue_closure.builtin$cls = "_cancelAndValue_closure";
    if (!("name" in _cancelAndValue_closure))
      _cancelAndValue_closure.name = "_cancelAndValue_closure";
    $desc = $collectedClasses$._cancelAndValue_closure[1];
    _cancelAndValue_closure.prototype = $desc;
    _cancelAndValue_closure.$__fields__ = ["_captured_future_0", "_captured_value_1"];
    function _ForwardingStream() {
      this.$deferredAction();
    }
    _ForwardingStream.builtin$cls = "_ForwardingStream";
    if (!("name" in _ForwardingStream))
      _ForwardingStream.name = "_ForwardingStream";
    $desc = $collectedClasses$._ForwardingStream[1];
    _ForwardingStream.prototype = $desc;
    _ForwardingStream.$__fields__ = [];
    function _ForwardingStreamSubscription(_async$_stream, _subscription, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
      this._async$_stream = _async$_stream;
      this._subscription = _subscription;
      this._async$_onData = _async$_onData;
      this._onError = _onError;
      this._onDone = _onDone;
      this._zone = _zone;
      this._state = _state;
      this._cancelFuture = _cancelFuture;
      this._pending = _pending;
      this.$deferredAction();
    }
    _ForwardingStreamSubscription.builtin$cls = "_ForwardingStreamSubscription";
    if (!("name" in _ForwardingStreamSubscription))
      _ForwardingStreamSubscription.name = "_ForwardingStreamSubscription";
    $desc = $collectedClasses$._ForwardingStreamSubscription[1];
    _ForwardingStreamSubscription.prototype = $desc;
    _ForwardingStreamSubscription.$__fields__ = ["_async$_stream", "_subscription", "_async$_onData", "_onError", "_onDone", "_zone", "_state", "_cancelFuture", "_pending"];
    function _WhereStream(_test, _async$_source) {
      this._test = _test;
      this._async$_source = _async$_source;
      this.$deferredAction();
    }
    _WhereStream.builtin$cls = "_WhereStream";
    if (!("name" in _WhereStream))
      _WhereStream.name = "_WhereStream";
    $desc = $collectedClasses$._WhereStream[1];
    _WhereStream.prototype = $desc;
    _WhereStream.$__fields__ = ["_test", "_async$_source"];
    function _MapStream(_transform, _async$_source) {
      this._transform = _transform;
      this._async$_source = _async$_source;
      this.$deferredAction();
    }
    _MapStream.builtin$cls = "_MapStream";
    if (!("name" in _MapStream))
      _MapStream.name = "_MapStream";
    $desc = $collectedClasses$._MapStream[1];
    _MapStream.prototype = $desc;
    _MapStream.$__fields__ = ["_transform", "_async$_source"];
    function AsyncError(error, stackTrace) {
      this.error = error;
      this.stackTrace = stackTrace;
      this.$deferredAction();
    }
    AsyncError.builtin$cls = "AsyncError";
    if (!("name" in AsyncError))
      AsyncError.name = "AsyncError";
    $desc = $collectedClasses$.AsyncError[1];
    AsyncError.prototype = $desc;
    AsyncError.$__fields__ = ["error", "stackTrace"];
    AsyncError.prototype.get$error = function(receiver) {
      return this.error;
    };
    AsyncError.prototype.get$stackTrace = function() {
      return this.stackTrace;
    };
    function _ZoneFunction(zone, $function) {
      this.zone = zone;
      this.$function = $function;
      this.$deferredAction();
    }
    _ZoneFunction.builtin$cls = "_ZoneFunction";
    if (!("name" in _ZoneFunction))
      _ZoneFunction.name = "_ZoneFunction";
    $desc = $collectedClasses$._ZoneFunction[1];
    _ZoneFunction.prototype = $desc;
    _ZoneFunction.$__fields__ = ["zone", "$function"];
    _ZoneFunction.prototype.get$zone = function() {
      return this.zone;
    };
    function ZoneDelegate() {
      this.$deferredAction();
    }
    ZoneDelegate.builtin$cls = "ZoneDelegate";
    if (!("name" in ZoneDelegate))
      ZoneDelegate.name = "ZoneDelegate";
    $desc = $collectedClasses$.ZoneDelegate[1];
    ZoneDelegate.prototype = $desc;
    ZoneDelegate.$__fields__ = [];
    function Zone() {
      this.$deferredAction();
    }
    Zone.builtin$cls = "Zone";
    if (!("name" in Zone))
      Zone.name = "Zone";
    $desc = $collectedClasses$.Zone[1];
    Zone.prototype = $desc;
    Zone.$__fields__ = [];
    function _Zone() {
      this.$deferredAction();
    }
    _Zone.builtin$cls = "_Zone";
    if (!("name" in _Zone))
      _Zone.name = "_Zone";
    $desc = $collectedClasses$._Zone[1];
    _Zone.prototype = $desc;
    _Zone.$__fields__ = [];
    function _rootHandleUncaughtError_closure(_async$_box_0, _captured_stackTrace_1) {
      this._async$_box_0 = _async$_box_0;
      this._captured_stackTrace_1 = _captured_stackTrace_1;
      this.$deferredAction();
    }
    _rootHandleUncaughtError_closure.builtin$cls = "_rootHandleUncaughtError_closure";
    if (!("name" in _rootHandleUncaughtError_closure))
      _rootHandleUncaughtError_closure.name = "_rootHandleUncaughtError_closure";
    $desc = $collectedClasses$._rootHandleUncaughtError_closure[1];
    _rootHandleUncaughtError_closure.prototype = $desc;
    _rootHandleUncaughtError_closure.$__fields__ = ["_async$_box_0", "_captured_stackTrace_1"];
    function _RootZone() {
      this.$deferredAction();
    }
    _RootZone.builtin$cls = "_RootZone";
    if (!("name" in _RootZone))
      _RootZone.name = "_RootZone";
    $desc = $collectedClasses$._RootZone[1];
    _RootZone.prototype = $desc;
    _RootZone.$__fields__ = [];
    function _RootZone_bindCallback_closure(_captured_this_0, _captured_f_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_f_1 = _captured_f_1;
      this.$deferredAction();
    }
    _RootZone_bindCallback_closure.builtin$cls = "_RootZone_bindCallback_closure";
    if (!("name" in _RootZone_bindCallback_closure))
      _RootZone_bindCallback_closure.name = "_RootZone_bindCallback_closure";
    $desc = $collectedClasses$._RootZone_bindCallback_closure[1];
    _RootZone_bindCallback_closure.prototype = $desc;
    _RootZone_bindCallback_closure.$__fields__ = ["_captured_this_0", "_captured_f_1"];
    function _RootZone_bindCallback_closure0(_captured_this_2, _captured_f_3) {
      this._captured_this_2 = _captured_this_2;
      this._captured_f_3 = _captured_f_3;
      this.$deferredAction();
    }
    _RootZone_bindCallback_closure0.builtin$cls = "_RootZone_bindCallback_closure0";
    if (!("name" in _RootZone_bindCallback_closure0))
      _RootZone_bindCallback_closure0.name = "_RootZone_bindCallback_closure0";
    $desc = $collectedClasses$._RootZone_bindCallback_closure0[1];
    _RootZone_bindCallback_closure0.prototype = $desc;
    _RootZone_bindCallback_closure0.$__fields__ = ["_captured_this_2", "_captured_f_3"];
    function _RootZone_bindUnaryCallback_closure(_captured_this_0, _captured_f_1) {
      this._captured_this_0 = _captured_this_0;
      this._captured_f_1 = _captured_f_1;
      this.$deferredAction();
    }
    _RootZone_bindUnaryCallback_closure.builtin$cls = "_RootZone_bindUnaryCallback_closure";
    if (!("name" in _RootZone_bindUnaryCallback_closure))
      _RootZone_bindUnaryCallback_closure.name = "_RootZone_bindUnaryCallback_closure";
    $desc = $collectedClasses$._RootZone_bindUnaryCallback_closure[1];
    _RootZone_bindUnaryCallback_closure.prototype = $desc;
    _RootZone_bindUnaryCallback_closure.$__fields__ = ["_captured_this_0", "_captured_f_1"];
    function _HashMap() {
      this.$deferredAction();
    }
    _HashMap.builtin$cls = "_HashMap";
    if (!("name" in _HashMap))
      _HashMap.name = "_HashMap";
    $desc = $collectedClasses$._HashMap[1];
    _HashMap.prototype = $desc;
    _HashMap.$__fields__ = [];
    function _IdentityHashMap(_collection$_length, _collection$_strings, _collection$_nums, _collection$_rest, _keys) {
      this._collection$_length = _collection$_length;
      this._collection$_strings = _collection$_strings;
      this._collection$_nums = _collection$_nums;
      this._collection$_rest = _collection$_rest;
      this._keys = _keys;
      this.$deferredAction();
    }
    _IdentityHashMap.builtin$cls = "_IdentityHashMap";
    if (!("name" in _IdentityHashMap))
      _IdentityHashMap.name = "_IdentityHashMap";
    $desc = $collectedClasses$._IdentityHashMap[1];
    _IdentityHashMap.prototype = $desc;
    _IdentityHashMap.$__fields__ = ["_collection$_length", "_collection$_strings", "_collection$_nums", "_collection$_rest", "_keys"];
    function HashMapKeyIterable(_map) {
      this._map = _map;
      this.$deferredAction();
    }
    HashMapKeyIterable.builtin$cls = "HashMapKeyIterable";
    if (!("name" in HashMapKeyIterable))
      HashMapKeyIterable.name = "HashMapKeyIterable";
    $desc = $collectedClasses$.HashMapKeyIterable[1];
    HashMapKeyIterable.prototype = $desc;
    HashMapKeyIterable.$__fields__ = ["_map"];
    function HashMapKeyIterator(_map, _keys, _offset, _collection$_current) {
      this._map = _map;
      this._keys = _keys;
      this._offset = _offset;
      this._collection$_current = _collection$_current;
      this.$deferredAction();
    }
    HashMapKeyIterator.builtin$cls = "HashMapKeyIterator";
    if (!("name" in HashMapKeyIterator))
      HashMapKeyIterator.name = "HashMapKeyIterator";
    $desc = $collectedClasses$.HashMapKeyIterator[1];
    HashMapKeyIterator.prototype = $desc;
    HashMapKeyIterator.$__fields__ = ["_map", "_keys", "_offset", "_collection$_current"];
    function _LinkedIdentityHashMap(__js_helper$_length, _strings, _nums, _rest, _first, _last, _modifications) {
      this.__js_helper$_length = __js_helper$_length;
      this._strings = _strings;
      this._nums = _nums;
      this._rest = _rest;
      this._first = _first;
      this._last = _last;
      this._modifications = _modifications;
      this.$deferredAction();
    }
    _LinkedIdentityHashMap.builtin$cls = "_LinkedIdentityHashMap";
    if (!("name" in _LinkedIdentityHashMap))
      _LinkedIdentityHashMap.name = "_LinkedIdentityHashMap";
    $desc = $collectedClasses$._LinkedIdentityHashMap[1];
    _LinkedIdentityHashMap.prototype = $desc;
    _LinkedIdentityHashMap.$__fields__ = ["__js_helper$_length", "_strings", "_nums", "_rest", "_first", "_last", "_modifications"];
    function _LinkedHashSet(_collection$_length, _collection$_strings, _collection$_nums, _collection$_rest, _collection$_first, _collection$_last, _collection$_modifications) {
      this._collection$_length = _collection$_length;
      this._collection$_strings = _collection$_strings;
      this._collection$_nums = _collection$_nums;
      this._collection$_rest = _collection$_rest;
      this._collection$_first = _collection$_first;
      this._collection$_last = _collection$_last;
      this._collection$_modifications = _collection$_modifications;
      this.$deferredAction();
    }
    _LinkedHashSet.builtin$cls = "_LinkedHashSet";
    if (!("name" in _LinkedHashSet))
      _LinkedHashSet.name = "_LinkedHashSet";
    $desc = $collectedClasses$._LinkedHashSet[1];
    _LinkedHashSet.prototype = $desc;
    _LinkedHashSet.$__fields__ = ["_collection$_length", "_collection$_strings", "_collection$_nums", "_collection$_rest", "_collection$_first", "_collection$_last", "_collection$_modifications"];
    function LinkedHashSetCell(_collection$_element, _collection$_next, _collection$_previous) {
      this._collection$_element = _collection$_element;
      this._collection$_next = _collection$_next;
      this._collection$_previous = _collection$_previous;
      this.$deferredAction();
    }
    LinkedHashSetCell.builtin$cls = "LinkedHashSetCell";
    if (!("name" in LinkedHashSetCell))
      LinkedHashSetCell.name = "LinkedHashSetCell";
    $desc = $collectedClasses$.LinkedHashSetCell[1];
    LinkedHashSetCell.prototype = $desc;
    LinkedHashSetCell.$__fields__ = ["_collection$_element", "_collection$_next", "_collection$_previous"];
    LinkedHashSetCell.prototype.get$_collection$_element = function() {
      return this._collection$_element;
    };
    LinkedHashSetCell.prototype.get$_collection$_next = function() {
      return this._collection$_next;
    };
    LinkedHashSetCell.prototype.set$_collection$_next = function(v) {
      return this._collection$_next = v;
    };
    LinkedHashSetCell.prototype.get$_collection$_previous = function() {
      return this._collection$_previous;
    };
    LinkedHashSetCell.prototype.set$_collection$_previous = function(v) {
      return this._collection$_previous = v;
    };
    function LinkedHashSetIterator(_set, _collection$_modifications, _collection$_cell, _collection$_current) {
      this._set = _set;
      this._collection$_modifications = _collection$_modifications;
      this._collection$_cell = _collection$_cell;
      this._collection$_current = _collection$_current;
      this.$deferredAction();
    }
    LinkedHashSetIterator.builtin$cls = "LinkedHashSetIterator";
    if (!("name" in LinkedHashSetIterator))
      LinkedHashSetIterator.name = "LinkedHashSetIterator";
    $desc = $collectedClasses$.LinkedHashSetIterator[1];
    LinkedHashSetIterator.prototype = $desc;
    LinkedHashSetIterator.$__fields__ = ["_set", "_collection$_modifications", "_collection$_cell", "_collection$_current"];
    function _HashSetBase() {
      this.$deferredAction();
    }
    _HashSetBase.builtin$cls = "_HashSetBase";
    if (!("name" in _HashSetBase))
      _HashSetBase.name = "_HashSetBase";
    $desc = $collectedClasses$._HashSetBase[1];
    _HashSetBase.prototype = $desc;
    _HashSetBase.$__fields__ = [];
    function LinkedHashMap_LinkedHashMap$from_closure(_captured_result_0) {
      this._captured_result_0 = _captured_result_0;
      this.$deferredAction();
    }
    LinkedHashMap_LinkedHashMap$from_closure.builtin$cls = "LinkedHashMap_LinkedHashMap$from_closure";
    if (!("name" in LinkedHashMap_LinkedHashMap$from_closure))
      LinkedHashMap_LinkedHashMap$from_closure.name = "LinkedHashMap_LinkedHashMap$from_closure";
    $desc = $collectedClasses$.LinkedHashMap_LinkedHashMap$from_closure[1];
    LinkedHashMap_LinkedHashMap$from_closure.prototype = $desc;
    LinkedHashMap_LinkedHashMap$from_closure.$__fields__ = ["_captured_result_0"];
    function ListMixin() {
      this.$deferredAction();
    }
    ListMixin.builtin$cls = "ListMixin";
    if (!("name" in ListMixin))
      ListMixin.name = "ListMixin";
    $desc = $collectedClasses$.ListMixin[1];
    ListMixin.prototype = $desc;
    ListMixin.$__fields__ = [];
    function _UnmodifiableMapMixin() {
      this.$deferredAction();
    }
    _UnmodifiableMapMixin.builtin$cls = "_UnmodifiableMapMixin";
    if (!("name" in _UnmodifiableMapMixin))
      _UnmodifiableMapMixin.name = "_UnmodifiableMapMixin";
    $desc = $collectedClasses$._UnmodifiableMapMixin[1];
    _UnmodifiableMapMixin.prototype = $desc;
    _UnmodifiableMapMixin.$__fields__ = [];
    function MapView() {
      this.$deferredAction();
    }
    MapView.builtin$cls = "MapView";
    if (!("name" in MapView))
      MapView.name = "MapView";
    $desc = $collectedClasses$.MapView[1];
    MapView.prototype = $desc;
    MapView.$__fields__ = [];
    function UnmodifiableMapView() {
      this.$deferredAction();
    }
    UnmodifiableMapView.builtin$cls = "UnmodifiableMapView";
    if (!("name" in UnmodifiableMapView))
      UnmodifiableMapView.name = "UnmodifiableMapView";
    $desc = $collectedClasses$.UnmodifiableMapView[1];
    UnmodifiableMapView.prototype = $desc;
    UnmodifiableMapView.$__fields__ = [];
    function Maps_mapToString_closure(_box_0, _captured_result_1) {
      this._box_0 = _box_0;
      this._captured_result_1 = _captured_result_1;
      this.$deferredAction();
    }
    Maps_mapToString_closure.builtin$cls = "Maps_mapToString_closure";
    if (!("name" in Maps_mapToString_closure))
      Maps_mapToString_closure.name = "Maps_mapToString_closure";
    $desc = $collectedClasses$.Maps_mapToString_closure[1];
    Maps_mapToString_closure.prototype = $desc;
    Maps_mapToString_closure.$__fields__ = ["_box_0", "_captured_result_1"];
    function ListQueue(_table, _head, _tail, _modificationCount) {
      this._table = _table;
      this._head = _head;
      this._tail = _tail;
      this._modificationCount = _modificationCount;
      this.$deferredAction();
    }
    ListQueue.builtin$cls = "ListQueue";
    if (!("name" in ListQueue))
      ListQueue.name = "ListQueue";
    $desc = $collectedClasses$.ListQueue[1];
    ListQueue.prototype = $desc;
    ListQueue.$__fields__ = ["_table", "_head", "_tail", "_modificationCount"];
    function _ListQueueIterator(_queue, _end, _modificationCount, _collection$_position, _collection$_current) {
      this._queue = _queue;
      this._end = _end;
      this._modificationCount = _modificationCount;
      this._collection$_position = _collection$_position;
      this._collection$_current = _collection$_current;
      this.$deferredAction();
    }
    _ListQueueIterator.builtin$cls = "_ListQueueIterator";
    if (!("name" in _ListQueueIterator))
      _ListQueueIterator.name = "_ListQueueIterator";
    $desc = $collectedClasses$._ListQueueIterator[1];
    _ListQueueIterator.prototype = $desc;
    _ListQueueIterator.$__fields__ = ["_queue", "_end", "_modificationCount", "_collection$_position", "_collection$_current"];
    function SetMixin() {
      this.$deferredAction();
    }
    SetMixin.builtin$cls = "SetMixin";
    if (!("name" in SetMixin))
      SetMixin.name = "SetMixin";
    $desc = $collectedClasses$.SetMixin[1];
    SetMixin.prototype = $desc;
    SetMixin.$__fields__ = [];
    function SetBase() {
      this.$deferredAction();
    }
    SetBase.builtin$cls = "SetBase";
    if (!("name" in SetBase))
      SetBase.name = "SetBase";
    $desc = $collectedClasses$.SetBase[1];
    SetBase.prototype = $desc;
    SetBase.$__fields__ = [];
    function _JsonMap(_original, _processed, _data) {
      this._original = _original;
      this._processed = _processed;
      this._data = _data;
      this.$deferredAction();
    }
    _JsonMap.builtin$cls = "_JsonMap";
    if (!("name" in _JsonMap))
      _JsonMap.name = "_JsonMap";
    $desc = $collectedClasses$._JsonMap[1];
    _JsonMap.prototype = $desc;
    _JsonMap.$__fields__ = ["_original", "_processed", "_data"];
    function _JsonMapKeyIterable(_parent) {
      this._parent = _parent;
      this.$deferredAction();
    }
    _JsonMapKeyIterable.builtin$cls = "_JsonMapKeyIterable";
    if (!("name" in _JsonMapKeyIterable))
      _JsonMapKeyIterable.name = "_JsonMapKeyIterable";
    $desc = $collectedClasses$._JsonMapKeyIterable[1];
    _JsonMapKeyIterable.prototype = $desc;
    _JsonMapKeyIterable.$__fields__ = ["_parent"];
    function Codec() {
      this.$deferredAction();
    }
    Codec.builtin$cls = "Codec";
    if (!("name" in Codec))
      Codec.name = "Codec";
    $desc = $collectedClasses$.Codec[1];
    Codec.prototype = $desc;
    Codec.$__fields__ = [];
    function Converter() {
      this.$deferredAction();
    }
    Converter.builtin$cls = "Converter";
    if (!("name" in Converter))
      Converter.name = "Converter";
    $desc = $collectedClasses$.Converter[1];
    Converter.prototype = $desc;
    Converter.$__fields__ = [];
    function Encoding() {
      this.$deferredAction();
    }
    Encoding.builtin$cls = "Encoding";
    if (!("name" in Encoding))
      Encoding.name = "Encoding";
    $desc = $collectedClasses$.Encoding[1];
    Encoding.prototype = $desc;
    Encoding.$__fields__ = [];
    function JsonUnsupportedObjectError(unsupportedObject, cause) {
      this.unsupportedObject = unsupportedObject;
      this.cause = cause;
      this.$deferredAction();
    }
    JsonUnsupportedObjectError.builtin$cls = "JsonUnsupportedObjectError";
    if (!("name" in JsonUnsupportedObjectError))
      JsonUnsupportedObjectError.name = "JsonUnsupportedObjectError";
    $desc = $collectedClasses$.JsonUnsupportedObjectError[1];
    JsonUnsupportedObjectError.prototype = $desc;
    JsonUnsupportedObjectError.$__fields__ = ["unsupportedObject", "cause"];
    function JsonCyclicError(unsupportedObject, cause) {
      this.unsupportedObject = unsupportedObject;
      this.cause = cause;
      this.$deferredAction();
    }
    JsonCyclicError.builtin$cls = "JsonCyclicError";
    if (!("name" in JsonCyclicError))
      JsonCyclicError.name = "JsonCyclicError";
    $desc = $collectedClasses$.JsonCyclicError[1];
    JsonCyclicError.prototype = $desc;
    JsonCyclicError.$__fields__ = ["unsupportedObject", "cause"];
    function JsonCodec(_reviver, _toEncodable) {
      this._reviver = _reviver;
      this._toEncodable = _toEncodable;
      this.$deferredAction();
    }
    JsonCodec.builtin$cls = "JsonCodec";
    if (!("name" in JsonCodec))
      JsonCodec.name = "JsonCodec";
    $desc = $collectedClasses$.JsonCodec[1];
    JsonCodec.prototype = $desc;
    JsonCodec.$__fields__ = ["_reviver", "_toEncodable"];
    function JsonEncoder(indent, _toEncodable) {
      this.indent = indent;
      this._toEncodable = _toEncodable;
      this.$deferredAction();
    }
    JsonEncoder.builtin$cls = "JsonEncoder";
    if (!("name" in JsonEncoder))
      JsonEncoder.name = "JsonEncoder";
    $desc = $collectedClasses$.JsonEncoder[1];
    JsonEncoder.prototype = $desc;
    JsonEncoder.$__fields__ = ["indent", "_toEncodable"];
    function JsonDecoder(_reviver) {
      this._reviver = _reviver;
      this.$deferredAction();
    }
    JsonDecoder.builtin$cls = "JsonDecoder";
    if (!("name" in JsonDecoder))
      JsonDecoder.name = "JsonDecoder";
    $desc = $collectedClasses$.JsonDecoder[1];
    JsonDecoder.prototype = $desc;
    JsonDecoder.$__fields__ = ["_reviver"];
    function _JsonStringifier() {
      this.$deferredAction();
    }
    _JsonStringifier.builtin$cls = "_JsonStringifier";
    if (!("name" in _JsonStringifier))
      _JsonStringifier.name = "_JsonStringifier";
    $desc = $collectedClasses$._JsonStringifier[1];
    _JsonStringifier.prototype = $desc;
    _JsonStringifier.$__fields__ = [];
    function _JsonStringifier_writeMap_closure(_convert$_box_0, _captured_keyValueList_1) {
      this._convert$_box_0 = _convert$_box_0;
      this._captured_keyValueList_1 = _captured_keyValueList_1;
      this.$deferredAction();
    }
    _JsonStringifier_writeMap_closure.builtin$cls = "_JsonStringifier_writeMap_closure";
    if (!("name" in _JsonStringifier_writeMap_closure))
      _JsonStringifier_writeMap_closure.name = "_JsonStringifier_writeMap_closure";
    $desc = $collectedClasses$._JsonStringifier_writeMap_closure[1];
    _JsonStringifier_writeMap_closure.prototype = $desc;
    _JsonStringifier_writeMap_closure.$__fields__ = ["_convert$_box_0", "_captured_keyValueList_1"];
    function _JsonStringStringifier(_sink, _seen, _toEncodable) {
      this._sink = _sink;
      this._seen = _seen;
      this._toEncodable = _toEncodable;
      this.$deferredAction();
    }
    _JsonStringStringifier.builtin$cls = "_JsonStringStringifier";
    if (!("name" in _JsonStringStringifier))
      _JsonStringStringifier.name = "_JsonStringStringifier";
    $desc = $collectedClasses$._JsonStringStringifier[1];
    _JsonStringStringifier.prototype = $desc;
    _JsonStringStringifier.$__fields__ = ["_sink", "_seen", "_toEncodable"];
    function Utf8Codec(_allowMalformed) {
      this._allowMalformed = _allowMalformed;
      this.$deferredAction();
    }
    Utf8Codec.builtin$cls = "Utf8Codec";
    if (!("name" in Utf8Codec))
      Utf8Codec.name = "Utf8Codec";
    $desc = $collectedClasses$.Utf8Codec[1];
    Utf8Codec.prototype = $desc;
    Utf8Codec.$__fields__ = ["_allowMalformed"];
    function Utf8Encoder() {
      this.$deferredAction();
    }
    Utf8Encoder.builtin$cls = "Utf8Encoder";
    if (!("name" in Utf8Encoder))
      Utf8Encoder.name = "Utf8Encoder";
    $desc = $collectedClasses$.Utf8Encoder[1];
    Utf8Encoder.prototype = $desc;
    Utf8Encoder.$__fields__ = [];
    function _Utf8Encoder(_carry, _bufferIndex, _buffer) {
      this._carry = _carry;
      this._bufferIndex = _bufferIndex;
      this._buffer = _buffer;
      this.$deferredAction();
    }
    _Utf8Encoder.builtin$cls = "_Utf8Encoder";
    if (!("name" in _Utf8Encoder))
      _Utf8Encoder.name = "_Utf8Encoder";
    $desc = $collectedClasses$._Utf8Encoder[1];
    _Utf8Encoder.prototype = $desc;
    _Utf8Encoder.$__fields__ = ["_carry", "_bufferIndex", "_buffer"];
    function NoSuchMethodError_toString_closure(_core$_box_0, _captured_sb_1) {
      this._core$_box_0 = _core$_box_0;
      this._captured_sb_1 = _captured_sb_1;
      this.$deferredAction();
    }
    NoSuchMethodError_toString_closure.builtin$cls = "NoSuchMethodError_toString_closure";
    if (!("name" in NoSuchMethodError_toString_closure))
      NoSuchMethodError_toString_closure.name = "NoSuchMethodError_toString_closure";
    $desc = $collectedClasses$.NoSuchMethodError_toString_closure[1];
    NoSuchMethodError_toString_closure.prototype = $desc;
    NoSuchMethodError_toString_closure.$__fields__ = ["_core$_box_0", "_captured_sb_1"];
    function bool() {
      this.$deferredAction();
    }
    bool.builtin$cls = "bool";
    if (!("name" in bool))
      bool.name = "bool";
    $desc = $collectedClasses$.bool[1];
    bool.prototype = $desc;
    bool.$__fields__ = [];
    function Comparable() {
      this.$deferredAction();
    }
    Comparable.builtin$cls = "Comparable";
    if (!("name" in Comparable))
      Comparable.name = "Comparable";
    $desc = $collectedClasses$.Comparable[1];
    Comparable.prototype = $desc;
    Comparable.$__fields__ = [];
    function DateTime(millisecondsSinceEpoch, isUtc) {
      this.millisecondsSinceEpoch = millisecondsSinceEpoch;
      this.isUtc = isUtc;
      this.$deferredAction();
    }
    DateTime.builtin$cls = "DateTime";
    if (!("name" in DateTime))
      DateTime.name = "DateTime";
    $desc = $collectedClasses$.DateTime[1];
    DateTime.prototype = $desc;
    DateTime.$__fields__ = ["millisecondsSinceEpoch", "isUtc"];
    DateTime.prototype.get$millisecondsSinceEpoch = function() {
      return this.millisecondsSinceEpoch;
    };
    function DateTime_parse_parseIntOrZero() {
      this.$deferredAction();
    }
    DateTime_parse_parseIntOrZero.builtin$cls = "DateTime_parse_parseIntOrZero";
    if (!("name" in DateTime_parse_parseIntOrZero))
      DateTime_parse_parseIntOrZero.name = "DateTime_parse_parseIntOrZero";
    $desc = $collectedClasses$.DateTime_parse_parseIntOrZero[1];
    DateTime_parse_parseIntOrZero.prototype = $desc;
    DateTime_parse_parseIntOrZero.$__fields__ = [];
    function DateTime_parse_parseMilliseconds() {
      this.$deferredAction();
    }
    DateTime_parse_parseMilliseconds.builtin$cls = "DateTime_parse_parseMilliseconds";
    if (!("name" in DateTime_parse_parseMilliseconds))
      DateTime_parse_parseMilliseconds.name = "DateTime_parse_parseMilliseconds";
    $desc = $collectedClasses$.DateTime_parse_parseMilliseconds[1];
    DateTime_parse_parseMilliseconds.prototype = $desc;
    DateTime_parse_parseMilliseconds.$__fields__ = [];
    function $double() {
      this.$deferredAction();
    }
    $double.builtin$cls = "$double";
    if (!("name" in $double))
      $double.name = "$double";
    $desc = $collectedClasses$.$double[1];
    $double.prototype = $desc;
    $double.$__fields__ = [];
    function Duration(_duration) {
      this._duration = _duration;
      this.$deferredAction();
    }
    Duration.builtin$cls = "Duration";
    if (!("name" in Duration))
      Duration.name = "Duration";
    $desc = $collectedClasses$.Duration[1];
    Duration.prototype = $desc;
    Duration.$__fields__ = ["_duration"];
    Duration.prototype.get$_duration = function() {
      return this._duration;
    };
    function Duration_toString_sixDigits() {
      this.$deferredAction();
    }
    Duration_toString_sixDigits.builtin$cls = "Duration_toString_sixDigits";
    if (!("name" in Duration_toString_sixDigits))
      Duration_toString_sixDigits.name = "Duration_toString_sixDigits";
    $desc = $collectedClasses$.Duration_toString_sixDigits[1];
    Duration_toString_sixDigits.prototype = $desc;
    Duration_toString_sixDigits.$__fields__ = [];
    function Duration_toString_twoDigits() {
      this.$deferredAction();
    }
    Duration_toString_twoDigits.builtin$cls = "Duration_toString_twoDigits";
    if (!("name" in Duration_toString_twoDigits))
      Duration_toString_twoDigits.name = "Duration_toString_twoDigits";
    $desc = $collectedClasses$.Duration_toString_twoDigits[1];
    Duration_toString_twoDigits.prototype = $desc;
    Duration_toString_twoDigits.$__fields__ = [];
    function Error() {
      this.$deferredAction();
    }
    Error.builtin$cls = "Error";
    if (!("name" in Error))
      Error.name = "Error";
    $desc = $collectedClasses$.Error[1];
    Error.prototype = $desc;
    Error.$__fields__ = [];
    function NullThrownError() {
      this.$deferredAction();
    }
    NullThrownError.builtin$cls = "NullThrownError";
    if (!("name" in NullThrownError))
      NullThrownError.name = "NullThrownError";
    $desc = $collectedClasses$.NullThrownError[1];
    NullThrownError.prototype = $desc;
    NullThrownError.$__fields__ = [];
    function ArgumentError(_hasValue, invalidValue, name, message) {
      this._hasValue = _hasValue;
      this.invalidValue = invalidValue;
      this.name = name;
      this.message = message;
      this.$deferredAction();
    }
    ArgumentError.builtin$cls = "ArgumentError";
    if (!("name" in ArgumentError))
      ArgumentError.name = "ArgumentError";
    $desc = $collectedClasses$.ArgumentError[1];
    ArgumentError.prototype = $desc;
    ArgumentError.$__fields__ = ["_hasValue", "invalidValue", "name", "message"];
    function RangeError(start, end, _hasValue, invalidValue, name, message) {
      this.start = start;
      this.end = end;
      this._hasValue = _hasValue;
      this.invalidValue = invalidValue;
      this.name = name;
      this.message = message;
      this.$deferredAction();
    }
    RangeError.builtin$cls = "RangeError";
    if (!("name" in RangeError))
      RangeError.name = "RangeError";
    $desc = $collectedClasses$.RangeError[1];
    RangeError.prototype = $desc;
    RangeError.$__fields__ = ["start", "end", "_hasValue", "invalidValue", "name", "message"];
    function IndexError(indexable, length, _hasValue, invalidValue, name, message) {
      this.indexable = indexable;
      this.length = length;
      this._hasValue = _hasValue;
      this.invalidValue = invalidValue;
      this.name = name;
      this.message = message;
      this.$deferredAction();
    }
    IndexError.builtin$cls = "IndexError";
    if (!("name" in IndexError))
      IndexError.name = "IndexError";
    $desc = $collectedClasses$.IndexError[1];
    IndexError.prototype = $desc;
    IndexError.$__fields__ = ["indexable", "length", "_hasValue", "invalidValue", "name", "message"];
    IndexError.prototype.get$length = function(receiver) {
      return this.length;
    };
    function NoSuchMethodError(_core$_receiver, _core$_memberName, _core$_arguments, _namedArguments, _existingArgumentNames) {
      this._core$_receiver = _core$_receiver;
      this._core$_memberName = _core$_memberName;
      this._core$_arguments = _core$_arguments;
      this._namedArguments = _namedArguments;
      this._existingArgumentNames = _existingArgumentNames;
      this.$deferredAction();
    }
    NoSuchMethodError.builtin$cls = "NoSuchMethodError";
    if (!("name" in NoSuchMethodError))
      NoSuchMethodError.name = "NoSuchMethodError";
    $desc = $collectedClasses$.NoSuchMethodError[1];
    NoSuchMethodError.prototype = $desc;
    NoSuchMethodError.$__fields__ = ["_core$_receiver", "_core$_memberName", "_core$_arguments", "_namedArguments", "_existingArgumentNames"];
    function UnsupportedError(message) {
      this.message = message;
      this.$deferredAction();
    }
    UnsupportedError.builtin$cls = "UnsupportedError";
    if (!("name" in UnsupportedError))
      UnsupportedError.name = "UnsupportedError";
    $desc = $collectedClasses$.UnsupportedError[1];
    UnsupportedError.prototype = $desc;
    UnsupportedError.$__fields__ = ["message"];
    function UnimplementedError(message) {
      this.message = message;
      this.$deferredAction();
    }
    UnimplementedError.builtin$cls = "UnimplementedError";
    if (!("name" in UnimplementedError))
      UnimplementedError.name = "UnimplementedError";
    $desc = $collectedClasses$.UnimplementedError[1];
    UnimplementedError.prototype = $desc;
    UnimplementedError.$__fields__ = ["message"];
    function StateError(message) {
      this.message = message;
      this.$deferredAction();
    }
    StateError.builtin$cls = "StateError";
    if (!("name" in StateError))
      StateError.name = "StateError";
    $desc = $collectedClasses$.StateError[1];
    StateError.prototype = $desc;
    StateError.$__fields__ = ["message"];
    function ConcurrentModificationError(modifiedObject) {
      this.modifiedObject = modifiedObject;
      this.$deferredAction();
    }
    ConcurrentModificationError.builtin$cls = "ConcurrentModificationError";
    if (!("name" in ConcurrentModificationError))
      ConcurrentModificationError.name = "ConcurrentModificationError";
    $desc = $collectedClasses$.ConcurrentModificationError[1];
    ConcurrentModificationError.prototype = $desc;
    ConcurrentModificationError.$__fields__ = ["modifiedObject"];
    function OutOfMemoryError() {
      this.$deferredAction();
    }
    OutOfMemoryError.builtin$cls = "OutOfMemoryError";
    if (!("name" in OutOfMemoryError))
      OutOfMemoryError.name = "OutOfMemoryError";
    $desc = $collectedClasses$.OutOfMemoryError[1];
    OutOfMemoryError.prototype = $desc;
    OutOfMemoryError.$__fields__ = [];
    function StackOverflowError() {
      this.$deferredAction();
    }
    StackOverflowError.builtin$cls = "StackOverflowError";
    if (!("name" in StackOverflowError))
      StackOverflowError.name = "StackOverflowError";
    $desc = $collectedClasses$.StackOverflowError[1];
    StackOverflowError.prototype = $desc;
    StackOverflowError.$__fields__ = [];
    function CyclicInitializationError(variableName) {
      this.variableName = variableName;
      this.$deferredAction();
    }
    CyclicInitializationError.builtin$cls = "CyclicInitializationError";
    if (!("name" in CyclicInitializationError))
      CyclicInitializationError.name = "CyclicInitializationError";
    $desc = $collectedClasses$.CyclicInitializationError[1];
    CyclicInitializationError.prototype = $desc;
    CyclicInitializationError.$__fields__ = ["variableName"];
    function _Exception(message) {
      this.message = message;
      this.$deferredAction();
    }
    _Exception.builtin$cls = "_Exception";
    if (!("name" in _Exception))
      _Exception.name = "_Exception";
    $desc = $collectedClasses$._Exception[1];
    _Exception.prototype = $desc;
    _Exception.$__fields__ = ["message"];
    function FormatException(message, source, offset) {
      this.message = message;
      this.source = source;
      this.offset = offset;
      this.$deferredAction();
    }
    FormatException.builtin$cls = "FormatException";
    if (!("name" in FormatException))
      FormatException.name = "FormatException";
    $desc = $collectedClasses$.FormatException[1];
    FormatException.prototype = $desc;
    FormatException.$__fields__ = ["message", "source", "offset"];
    function IntegerDivisionByZeroException() {
      this.$deferredAction();
    }
    IntegerDivisionByZeroException.builtin$cls = "IntegerDivisionByZeroException";
    if (!("name" in IntegerDivisionByZeroException))
      IntegerDivisionByZeroException.name = "IntegerDivisionByZeroException";
    $desc = $collectedClasses$.IntegerDivisionByZeroException[1];
    IntegerDivisionByZeroException.prototype = $desc;
    IntegerDivisionByZeroException.$__fields__ = [];
    function Expando(name) {
      this.name = name;
      this.$deferredAction();
    }
    Expando.builtin$cls = "Expando";
    if (!("name" in Expando))
      Expando.name = "Expando";
    $desc = $collectedClasses$.Expando[1];
    Expando.prototype = $desc;
    Expando.$__fields__ = ["name"];
    function Function() {
      this.$deferredAction();
    }
    Function.builtin$cls = "Function";
    if (!("name" in Function))
      Function.name = "Function";
    $desc = $collectedClasses$.Function[1];
    Function.prototype = $desc;
    Function.$__fields__ = [];
    function $int() {
      this.$deferredAction();
    }
    $int.builtin$cls = "$int";
    if (!("name" in $int))
      $int.name = "$int";
    $desc = $collectedClasses$.$int[1];
    $int.prototype = $desc;
    $int.$__fields__ = [];
    function Iterable() {
      this.$deferredAction();
    }
    Iterable.builtin$cls = "Iterable";
    if (!("name" in Iterable))
      Iterable.name = "Iterable";
    $desc = $collectedClasses$.Iterable[1];
    Iterable.prototype = $desc;
    Iterable.$__fields__ = [];
    function Iterator() {
      this.$deferredAction();
    }
    Iterator.builtin$cls = "Iterator";
    if (!("name" in Iterator))
      Iterator.name = "Iterator";
    $desc = $collectedClasses$.Iterator[1];
    Iterator.prototype = $desc;
    Iterator.$__fields__ = [];
    function List() {
      this.$deferredAction();
    }
    List.builtin$cls = "List";
    if (!("name" in List))
      List.name = "List";
    $desc = $collectedClasses$.List[1];
    List.prototype = $desc;
    List.$__fields__ = [];
    function Map() {
      this.$deferredAction();
    }
    Map.builtin$cls = "Map";
    if (!("name" in Map))
      Map.name = "Map";
    $desc = $collectedClasses$.Map[1];
    Map.prototype = $desc;
    Map.$__fields__ = [];
    function Null() {
      this.$deferredAction();
    }
    Null.builtin$cls = "Null";
    if (!("name" in Null))
      Null.name = "Null";
    $desc = $collectedClasses$.Null[1];
    Null.prototype = $desc;
    Null.$__fields__ = [];
    function num() {
      this.$deferredAction();
    }
    num.builtin$cls = "num";
    if (!("name" in num))
      num.name = "num";
    $desc = $collectedClasses$.num[1];
    num.prototype = $desc;
    num.$__fields__ = [];
    function Object() {
      this.$deferredAction();
    }
    Object.builtin$cls = "Object";
    if (!("name" in Object))
      Object.name = "Object";
    $desc = $collectedClasses$.Object[1];
    Object.prototype = $desc;
    Object.$__fields__ = [];
    function Match() {
      this.$deferredAction();
    }
    Match.builtin$cls = "Match";
    if (!("name" in Match))
      Match.name = "Match";
    $desc = $collectedClasses$.Match[1];
    Match.prototype = $desc;
    Match.$__fields__ = [];
    function StackTrace() {
      this.$deferredAction();
    }
    StackTrace.builtin$cls = "StackTrace";
    if (!("name" in StackTrace))
      StackTrace.name = "StackTrace";
    $desc = $collectedClasses$.StackTrace[1];
    StackTrace.prototype = $desc;
    StackTrace.$__fields__ = [];
    function String() {
      this.$deferredAction();
    }
    String.builtin$cls = "String";
    if (!("name" in String))
      String.name = "String";
    $desc = $collectedClasses$.String[1];
    String.prototype = $desc;
    String.$__fields__ = [];
    function Runes(string) {
      this.string = string;
      this.$deferredAction();
    }
    Runes.builtin$cls = "Runes";
    if (!("name" in Runes))
      Runes.name = "Runes";
    $desc = $collectedClasses$.Runes[1];
    Runes.prototype = $desc;
    Runes.$__fields__ = ["string"];
    function RuneIterator(string, _core$_position, _nextPosition, _currentCodePoint) {
      this.string = string;
      this._core$_position = _core$_position;
      this._nextPosition = _nextPosition;
      this._currentCodePoint = _currentCodePoint;
      this.$deferredAction();
    }
    RuneIterator.builtin$cls = "RuneIterator";
    if (!("name" in RuneIterator))
      RuneIterator.name = "RuneIterator";
    $desc = $collectedClasses$.RuneIterator[1];
    RuneIterator.prototype = $desc;
    RuneIterator.$__fields__ = ["string", "_core$_position", "_nextPosition", "_currentCodePoint"];
    function StringBuffer(_contents) {
      this._contents = _contents;
      this.$deferredAction();
    }
    StringBuffer.builtin$cls = "StringBuffer";
    if (!("name" in StringBuffer))
      StringBuffer.name = "StringBuffer";
    $desc = $collectedClasses$.StringBuffer[1];
    StringBuffer.prototype = $desc;
    StringBuffer.$__fields__ = ["_contents"];
    StringBuffer.prototype.get$_contents = function() {
      return this._contents;
    };
    StringBuffer.prototype.set$_contents = function(v) {
      return this._contents = v;
    };
    function Symbol0() {
      this.$deferredAction();
    }
    Symbol0.builtin$cls = "Symbol0";
    if (!("name" in Symbol0))
      Symbol0.name = "Symbol0";
    $desc = $collectedClasses$.Symbol0[1];
    Symbol0.prototype = $desc;
    Symbol0.$__fields__ = [];
    function Uri(scheme, _userInfo, _host, _port, _path, _query, _fragment, _pathSegments, _queryParameters) {
      this.scheme = scheme;
      this._userInfo = _userInfo;
      this._host = _host;
      this._port = _port;
      this._path = _path;
      this._query = _query;
      this._fragment = _fragment;
      this._pathSegments = _pathSegments;
      this._queryParameters = _queryParameters;
      this.$deferredAction();
    }
    Uri.builtin$cls = "Uri";
    if (!("name" in Uri))
      Uri.name = "Uri";
    $desc = $collectedClasses$.Uri[1];
    Uri.prototype = $desc;
    Uri.$__fields__ = ["scheme", "_userInfo", "_host", "_port", "_path", "_query", "_fragment", "_pathSegments", "_queryParameters"];
    function Uri_parse_parseAuth(_core$_box_0, _captured_uri_1, _captured_EOI_2) {
      this._core$_box_0 = _core$_box_0;
      this._captured_uri_1 = _captured_uri_1;
      this._captured_EOI_2 = _captured_EOI_2;
      this.$deferredAction();
    }
    Uri_parse_parseAuth.builtin$cls = "Uri_parse_parseAuth";
    if (!("name" in Uri_parse_parseAuth))
      Uri_parse_parseAuth.name = "Uri_parse_parseAuth";
    $desc = $collectedClasses$.Uri_parse_parseAuth[1];
    Uri_parse_parseAuth.prototype = $desc;
    Uri_parse_parseAuth.$__fields__ = ["_core$_box_0", "_captured_uri_1", "_captured_EOI_2"];
    function Uri__makePath_closure() {
      this.$deferredAction();
    }
    Uri__makePath_closure.builtin$cls = "Uri__makePath_closure";
    if (!("name" in Uri__makePath_closure))
      Uri__makePath_closure.name = "Uri__makePath_closure";
    $desc = $collectedClasses$.Uri__makePath_closure[1];
    Uri__makePath_closure.prototype = $desc;
    Uri__makePath_closure.$__fields__ = [];
    function Uri__makeQuery_closure(_core$_box_0, _core$_captured_result_1) {
      this._core$_box_0 = _core$_box_0;
      this._core$_captured_result_1 = _core$_captured_result_1;
      this.$deferredAction();
    }
    Uri__makeQuery_closure.builtin$cls = "Uri__makeQuery_closure";
    if (!("name" in Uri__makeQuery_closure))
      Uri__makeQuery_closure.name = "Uri__makeQuery_closure";
    $desc = $collectedClasses$.Uri__makeQuery_closure[1];
    Uri__makeQuery_closure.prototype = $desc;
    Uri__makeQuery_closure.$__fields__ = ["_core$_box_0", "_core$_captured_result_1"];
    function Uri_hashCode_combine() {
      this.$deferredAction();
    }
    Uri_hashCode_combine.builtin$cls = "Uri_hashCode_combine";
    if (!("name" in Uri_hashCode_combine))
      Uri_hashCode_combine.name = "Uri_hashCode_combine";
    $desc = $collectedClasses$.Uri_hashCode_combine[1];
    Uri_hashCode_combine.prototype = $desc;
    Uri_hashCode_combine.$__fields__ = [];
    function Uri_parseIPv4Address_error() {
      this.$deferredAction();
    }
    Uri_parseIPv4Address_error.builtin$cls = "Uri_parseIPv4Address_error";
    if (!("name" in Uri_parseIPv4Address_error))
      Uri_parseIPv4Address_error.name = "Uri_parseIPv4Address_error";
    $desc = $collectedClasses$.Uri_parseIPv4Address_error[1];
    Uri_parseIPv4Address_error.prototype = $desc;
    Uri_parseIPv4Address_error.$__fields__ = [];
    function Uri_parseIPv4Address_closure(_captured_error_0) {
      this._captured_error_0 = _captured_error_0;
      this.$deferredAction();
    }
    Uri_parseIPv4Address_closure.builtin$cls = "Uri_parseIPv4Address_closure";
    if (!("name" in Uri_parseIPv4Address_closure))
      Uri_parseIPv4Address_closure.name = "Uri_parseIPv4Address_closure";
    $desc = $collectedClasses$.Uri_parseIPv4Address_closure[1];
    Uri_parseIPv4Address_closure.prototype = $desc;
    Uri_parseIPv4Address_closure.$__fields__ = ["_captured_error_0"];
    function Uri_parseIPv6Address_error(_captured_host_0) {
      this._captured_host_0 = _captured_host_0;
      this.$deferredAction();
    }
    Uri_parseIPv6Address_error.builtin$cls = "Uri_parseIPv6Address_error";
    if (!("name" in Uri_parseIPv6Address_error))
      Uri_parseIPv6Address_error.name = "Uri_parseIPv6Address_error";
    $desc = $collectedClasses$.Uri_parseIPv6Address_error[1];
    Uri_parseIPv6Address_error.prototype = $desc;
    Uri_parseIPv6Address_error.$__fields__ = ["_captured_host_0"];
    function Uri_parseIPv6Address_parseHex(_captured_host_1, _captured_error_2) {
      this._captured_host_1 = _captured_host_1;
      this._captured_error_2 = _captured_error_2;
      this.$deferredAction();
    }
    Uri_parseIPv6Address_parseHex.builtin$cls = "Uri_parseIPv6Address_parseHex";
    if (!("name" in Uri_parseIPv6Address_parseHex))
      Uri_parseIPv6Address_parseHex.name = "Uri_parseIPv6Address_parseHex";
    $desc = $collectedClasses$.Uri_parseIPv6Address_parseHex[1];
    Uri_parseIPv6Address_parseHex.prototype = $desc;
    Uri_parseIPv6Address_parseHex.$__fields__ = ["_captured_host_1", "_captured_error_2"];
    function Uri__uriEncode_byteToHex() {
      this.$deferredAction();
    }
    Uri__uriEncode_byteToHex.builtin$cls = "Uri__uriEncode_byteToHex";
    if (!("name" in Uri__uriEncode_byteToHex))
      Uri__uriEncode_byteToHex.name = "Uri__uriEncode_byteToHex";
    $desc = $collectedClasses$.Uri__uriEncode_byteToHex[1];
    Uri__uriEncode_byteToHex.prototype = $desc;
    Uri__uriEncode_byteToHex.$__fields__ = [];
    function HtmlElement() {
      this.$deferredAction();
    }
    HtmlElement.builtin$cls = "HtmlElement";
    if (!("name" in HtmlElement))
      HtmlElement.name = "HtmlElement";
    $desc = $collectedClasses$.HtmlElement[1];
    HtmlElement.prototype = $desc;
    HtmlElement.$__fields__ = [];
    function _EntryArray() {
      this.$deferredAction();
    }
    _EntryArray.builtin$cls = "_EntryArray";
    if (!("name" in _EntryArray))
      _EntryArray.name = "_EntryArray";
    $desc = $collectedClasses$._EntryArray[1];
    _EntryArray.prototype = $desc;
    _EntryArray.$__fields__ = [];
    function AnchorElement() {
      this.$deferredAction();
    }
    AnchorElement.builtin$cls = "AnchorElement";
    if (!("name" in AnchorElement))
      AnchorElement.name = "AnchorElement";
    $desc = $collectedClasses$.AnchorElement[1];
    AnchorElement.prototype = $desc;
    AnchorElement.$__fields__ = [];
    AnchorElement.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    AnchorElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function AnimationPlayer() {
      this.$deferredAction();
    }
    AnimationPlayer.builtin$cls = "AnimationPlayer";
    if (!("name" in AnimationPlayer))
      AnimationPlayer.name = "AnimationPlayer";
    $desc = $collectedClasses$.AnimationPlayer[1];
    AnimationPlayer.prototype = $desc;
    AnimationPlayer.$__fields__ = [];
    function AreaElement() {
      this.$deferredAction();
    }
    AreaElement.builtin$cls = "AreaElement";
    if (!("name" in AreaElement))
      AreaElement.name = "AreaElement";
    $desc = $collectedClasses$.AreaElement[1];
    AreaElement.prototype = $desc;
    AreaElement.$__fields__ = [];
    AreaElement.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function AudioTrack() {
      this.$deferredAction();
    }
    AudioTrack.builtin$cls = "AudioTrack";
    if (!("name" in AudioTrack))
      AudioTrack.name = "AudioTrack";
    $desc = $collectedClasses$.AudioTrack[1];
    AudioTrack.prototype = $desc;
    AudioTrack.$__fields__ = [];
    AudioTrack.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function AudioTrackList() {
      this.$deferredAction();
    }
    AudioTrackList.builtin$cls = "AudioTrackList";
    if (!("name" in AudioTrackList))
      AudioTrackList.name = "AudioTrackList";
    $desc = $collectedClasses$.AudioTrackList[1];
    AudioTrackList.prototype = $desc;
    AudioTrackList.$__fields__ = [];
    AudioTrackList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function BaseElement() {
      this.$deferredAction();
    }
    BaseElement.builtin$cls = "BaseElement";
    if (!("name" in BaseElement))
      BaseElement.name = "BaseElement";
    $desc = $collectedClasses$.BaseElement[1];
    BaseElement.prototype = $desc;
    BaseElement.$__fields__ = [];
    BaseElement.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function Blob() {
      this.$deferredAction();
    }
    Blob.builtin$cls = "Blob";
    if (!("name" in Blob))
      Blob.name = "Blob";
    $desc = $collectedClasses$.Blob[1];
    Blob.prototype = $desc;
    Blob.$__fields__ = [];
    Blob.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function BodyElement() {
      this.$deferredAction();
    }
    BodyElement.builtin$cls = "BodyElement";
    if (!("name" in BodyElement))
      BodyElement.name = "BodyElement";
    $desc = $collectedClasses$.BodyElement[1];
    BodyElement.prototype = $desc;
    BodyElement.$__fields__ = [];
    function ButtonElement() {
      this.$deferredAction();
    }
    ButtonElement.builtin$cls = "ButtonElement";
    if (!("name" in ButtonElement))
      ButtonElement.name = "ButtonElement";
    $desc = $collectedClasses$.ButtonElement[1];
    ButtonElement.prototype = $desc;
    ButtonElement.$__fields__ = [];
    ButtonElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    ButtonElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    ButtonElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function CacheStorage() {
      this.$deferredAction();
    }
    CacheStorage.builtin$cls = "CacheStorage";
    if (!("name" in CacheStorage))
      CacheStorage.name = "CacheStorage";
    $desc = $collectedClasses$.CacheStorage[1];
    CacheStorage.prototype = $desc;
    CacheStorage.$__fields__ = [];
    function CanvasElement() {
      this.$deferredAction();
    }
    CanvasElement.builtin$cls = "CanvasElement";
    if (!("name" in CanvasElement))
      CanvasElement.name = "CanvasElement";
    $desc = $collectedClasses$.CanvasElement[1];
    CanvasElement.prototype = $desc;
    CanvasElement.$__fields__ = [];
    function CanvasRenderingContext2D() {
      this.$deferredAction();
    }
    CanvasRenderingContext2D.builtin$cls = "CanvasRenderingContext2D";
    if (!("name" in CanvasRenderingContext2D))
      CanvasRenderingContext2D.name = "CanvasRenderingContext2D";
    $desc = $collectedClasses$.CanvasRenderingContext2D[1];
    CanvasRenderingContext2D.prototype = $desc;
    CanvasRenderingContext2D.$__fields__ = [];
    function CharacterData() {
      this.$deferredAction();
    }
    CharacterData.builtin$cls = "CharacterData";
    if (!("name" in CharacterData))
      CharacterData.name = "CharacterData";
    $desc = $collectedClasses$.CharacterData[1];
    CharacterData.prototype = $desc;
    CharacterData.$__fields__ = [];
    CharacterData.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function Credential() {
      this.$deferredAction();
    }
    Credential.builtin$cls = "Credential";
    if (!("name" in Credential))
      Credential.name = "Credential";
    $desc = $collectedClasses$.Credential[1];
    Credential.prototype = $desc;
    Credential.$__fields__ = [];
    Credential.prototype.get$avatarUrl = function(receiver) {
      return receiver.avatarURL;
    };
    Credential.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function CryptoKey() {
      this.$deferredAction();
    }
    CryptoKey.builtin$cls = "CryptoKey";
    if (!("name" in CryptoKey))
      CryptoKey.name = "CryptoKey";
    $desc = $collectedClasses$.CryptoKey[1];
    CryptoKey.prototype = $desc;
    CryptoKey.$__fields__ = [];
    CryptoKey.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function CssRule() {
      this.$deferredAction();
    }
    CssRule.builtin$cls = "CssRule";
    if (!("name" in CssRule))
      CssRule.name = "CssRule";
    $desc = $collectedClasses$.CssRule[1];
    CssRule.prototype = $desc;
    CssRule.$__fields__ = [];
    CssRule.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function CssStyleDeclaration() {
      this.$deferredAction();
    }
    CssStyleDeclaration.builtin$cls = "CssStyleDeclaration";
    if (!("name" in CssStyleDeclaration))
      CssStyleDeclaration.name = "CssStyleDeclaration";
    $desc = $collectedClasses$.CssStyleDeclaration[1];
    CssStyleDeclaration.prototype = $desc;
    CssStyleDeclaration.$__fields__ = [];
    CssStyleDeclaration.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function Interceptor_CssStyleDeclarationBase() {
      this.$deferredAction();
    }
    Interceptor_CssStyleDeclarationBase.builtin$cls = "Interceptor_CssStyleDeclarationBase";
    if (!("name" in Interceptor_CssStyleDeclarationBase))
      Interceptor_CssStyleDeclarationBase.name = "Interceptor_CssStyleDeclarationBase";
    $desc = $collectedClasses$.Interceptor_CssStyleDeclarationBase[1];
    Interceptor_CssStyleDeclarationBase.prototype = $desc;
    Interceptor_CssStyleDeclarationBase.$__fields__ = [];
    function CssStyleDeclarationBase() {
      this.$deferredAction();
    }
    CssStyleDeclarationBase.builtin$cls = "CssStyleDeclarationBase";
    if (!("name" in CssStyleDeclarationBase))
      CssStyleDeclarationBase.name = "CssStyleDeclarationBase";
    $desc = $collectedClasses$.CssStyleDeclarationBase[1];
    CssStyleDeclarationBase.prototype = $desc;
    CssStyleDeclarationBase.$__fields__ = [];
    function CustomEvent() {
      this.$deferredAction();
    }
    CustomEvent.builtin$cls = "CustomEvent";
    if (!("name" in CustomEvent))
      CustomEvent.name = "CustomEvent";
    $desc = $collectedClasses$.CustomEvent[1];
    CustomEvent.prototype = $desc;
    CustomEvent.$__fields__ = [];
    function DataTransfer() {
      this.$deferredAction();
    }
    DataTransfer.builtin$cls = "DataTransfer";
    if (!("name" in DataTransfer))
      DataTransfer.name = "DataTransfer";
    $desc = $collectedClasses$.DataTransfer[1];
    DataTransfer.prototype = $desc;
    DataTransfer.$__fields__ = [];
    DataTransfer.prototype.get$dropEffect = function(receiver) {
      return receiver.dropEffect;
    };
    DataTransfer.prototype.get$effectAllowed = function(receiver) {
      return receiver.effectAllowed;
    };
    DataTransfer.prototype.get$files = function(receiver) {
      return receiver.files;
    };
    DataTransfer.prototype.get$types = function(receiver) {
      return receiver.types;
    };
    function DataTransferItem() {
      this.$deferredAction();
    }
    DataTransferItem.builtin$cls = "DataTransferItem";
    if (!("name" in DataTransferItem))
      DataTransferItem.name = "DataTransferItem";
    $desc = $collectedClasses$.DataTransferItem[1];
    DataTransferItem.prototype = $desc;
    DataTransferItem.$__fields__ = [];
    DataTransferItem.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function DataTransferItemList() {
      this.$deferredAction();
    }
    DataTransferItemList.builtin$cls = "DataTransferItemList";
    if (!("name" in DataTransferItemList))
      DataTransferItemList.name = "DataTransferItemList";
    $desc = $collectedClasses$.DataTransferItemList[1];
    DataTransferItemList.prototype = $desc;
    DataTransferItemList.$__fields__ = [];
    DataTransferItemList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function DeviceLightEvent() {
      this.$deferredAction();
    }
    DeviceLightEvent.builtin$cls = "DeviceLightEvent";
    if (!("name" in DeviceLightEvent))
      DeviceLightEvent.name = "DeviceLightEvent";
    $desc = $collectedClasses$.DeviceLightEvent[1];
    DeviceLightEvent.prototype = $desc;
    DeviceLightEvent.$__fields__ = [];
    DeviceLightEvent.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function Document() {
      this.$deferredAction();
    }
    Document.builtin$cls = "Document";
    if (!("name" in Document))
      Document.name = "Document";
    $desc = $collectedClasses$.Document[1];
    Document.prototype = $desc;
    Document.$__fields__ = [];
    function DocumentFragment() {
      this.$deferredAction();
    }
    DocumentFragment.builtin$cls = "DocumentFragment";
    if (!("name" in DocumentFragment))
      DocumentFragment.name = "DocumentFragment";
    $desc = $collectedClasses$.DocumentFragment[1];
    DocumentFragment.prototype = $desc;
    DocumentFragment.$__fields__ = [];
    function DomException() {
      this.$deferredAction();
    }
    DomException.builtin$cls = "DomException";
    if (!("name" in DomException))
      DomException.name = "DomException";
    $desc = $collectedClasses$.DomException[1];
    DomException.prototype = $desc;
    DomException.$__fields__ = [];
    function DomIterator() {
      this.$deferredAction();
    }
    DomIterator.builtin$cls = "DomIterator";
    if (!("name" in DomIterator))
      DomIterator.name = "DomIterator";
    $desc = $collectedClasses$.DomIterator[1];
    DomIterator.prototype = $desc;
    DomIterator.$__fields__ = [];
    function DomRectReadOnly() {
      this.$deferredAction();
    }
    DomRectReadOnly.builtin$cls = "DomRectReadOnly";
    if (!("name" in DomRectReadOnly))
      DomRectReadOnly.name = "DomRectReadOnly";
    $desc = $collectedClasses$.DomRectReadOnly[1];
    DomRectReadOnly.prototype = $desc;
    DomRectReadOnly.$__fields__ = [];
    DomRectReadOnly.prototype.get$height = function(receiver) {
      return receiver.height;
    };
    DomRectReadOnly.prototype.get$left = function(receiver) {
      return receiver.left;
    };
    DomRectReadOnly.prototype.get$top = function(receiver) {
      return receiver.top;
    };
    DomRectReadOnly.prototype.get$width = function(receiver) {
      return receiver.width;
    };
    function DomSettableTokenList() {
      this.$deferredAction();
    }
    DomSettableTokenList.builtin$cls = "DomSettableTokenList";
    if (!("name" in DomSettableTokenList))
      DomSettableTokenList.name = "DomSettableTokenList";
    $desc = $collectedClasses$.DomSettableTokenList[1];
    DomSettableTokenList.prototype = $desc;
    DomSettableTokenList.$__fields__ = [];
    DomSettableTokenList.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function DomStringList() {
      this.$deferredAction();
    }
    DomStringList.builtin$cls = "DomStringList";
    if (!("name" in DomStringList))
      DomStringList.name = "DomStringList";
    $desc = $collectedClasses$.DomStringList[1];
    DomStringList.prototype = $desc;
    DomStringList.$__fields__ = [];
    function Interceptor_ListMixin() {
      this.$deferredAction();
    }
    Interceptor_ListMixin.builtin$cls = "Interceptor_ListMixin";
    if (!("name" in Interceptor_ListMixin))
      Interceptor_ListMixin.name = "Interceptor_ListMixin";
    $desc = $collectedClasses$.Interceptor_ListMixin[1];
    Interceptor_ListMixin.prototype = $desc;
    Interceptor_ListMixin.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin))
      Interceptor_ListMixin_ImmutableListMixin.name = "Interceptor_ListMixin_ImmutableListMixin";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin[1];
    Interceptor_ListMixin_ImmutableListMixin.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin.$__fields__ = [];
    function DomTokenList() {
      this.$deferredAction();
    }
    DomTokenList.builtin$cls = "DomTokenList";
    if (!("name" in DomTokenList))
      DomTokenList.name = "DomTokenList";
    $desc = $collectedClasses$.DomTokenList[1];
    DomTokenList.prototype = $desc;
    DomTokenList.$__fields__ = [];
    DomTokenList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function Element() {
      this.$deferredAction();
    }
    Element.builtin$cls = "Element";
    if (!("name" in Element))
      Element.name = "Element";
    $desc = $collectedClasses$.Element[1];
    Element.prototype = $desc;
    Element.$__fields__ = [];
    Element.prototype.get$title = function(receiver) {
      return receiver.title;
    };
    Element.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function EmbedElement() {
      this.$deferredAction();
    }
    EmbedElement.builtin$cls = "EmbedElement";
    if (!("name" in EmbedElement))
      EmbedElement.name = "EmbedElement";
    $desc = $collectedClasses$.EmbedElement[1];
    EmbedElement.prototype = $desc;
    EmbedElement.$__fields__ = [];
    EmbedElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    EmbedElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function Entry() {
      this.$deferredAction();
    }
    Entry.builtin$cls = "Entry";
    if (!("name" in Entry))
      Entry.name = "Entry";
    $desc = $collectedClasses$.Entry[1];
    Entry.prototype = $desc;
    Entry.$__fields__ = [];
    function ErrorEvent() {
      this.$deferredAction();
    }
    ErrorEvent.builtin$cls = "ErrorEvent";
    if (!("name" in ErrorEvent))
      ErrorEvent.name = "ErrorEvent";
    $desc = $collectedClasses$.ErrorEvent[1];
    ErrorEvent.prototype = $desc;
    ErrorEvent.$__fields__ = [];
    ErrorEvent.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function Event() {
      this.$deferredAction();
    }
    Event.builtin$cls = "Event";
    if (!("name" in Event))
      Event.name = "Event";
    $desc = $collectedClasses$.Event[1];
    Event.prototype = $desc;
    Event.$__fields__ = [];
    Event.prototype.get$bubbles = function(receiver) {
      return receiver.bubbles;
    };
    Event.prototype.get$cancelable = function(receiver) {
      return receiver.cancelable;
    };
    Event.prototype.get$clipboardData = function(receiver) {
      return receiver.clipboardData;
    };
    Event.prototype.get$defaultPrevented = function(receiver) {
      return receiver.defaultPrevented;
    };
    Event.prototype.get$eventPhase = function(receiver) {
      return receiver.eventPhase;
    };
    Event.prototype.get$timeStamp = function(receiver) {
      return receiver.timeStamp;
    };
    Event.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function EventSource() {
      this.$deferredAction();
    }
    EventSource.builtin$cls = "EventSource";
    if (!("name" in EventSource))
      EventSource.name = "EventSource";
    $desc = $collectedClasses$.EventSource[1];
    EventSource.prototype = $desc;
    EventSource.$__fields__ = [];
    function EventTarget() {
      this.$deferredAction();
    }
    EventTarget.builtin$cls = "EventTarget";
    if (!("name" in EventTarget))
      EventTarget.name = "EventTarget";
    $desc = $collectedClasses$.EventTarget[1];
    EventTarget.prototype = $desc;
    EventTarget.$__fields__ = [];
    function FieldSetElement() {
      this.$deferredAction();
    }
    FieldSetElement.builtin$cls = "FieldSetElement";
    if (!("name" in FieldSetElement))
      FieldSetElement.name = "FieldSetElement";
    $desc = $collectedClasses$.FieldSetElement[1];
    FieldSetElement.prototype = $desc;
    FieldSetElement.$__fields__ = [];
    FieldSetElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    FieldSetElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function File() {
      this.$deferredAction();
    }
    File.builtin$cls = "File";
    if (!("name" in File))
      File.name = "File";
    $desc = $collectedClasses$.File[1];
    File.prototype = $desc;
    File.$__fields__ = [];
    function FileList() {
      this.$deferredAction();
    }
    FileList.builtin$cls = "FileList";
    if (!("name" in FileList))
      FileList.name = "FileList";
    $desc = $collectedClasses$.FileList[1];
    FileList.prototype = $desc;
    FileList.$__fields__ = [];
    function Interceptor_ListMixin0() {
      this.$deferredAction();
    }
    Interceptor_ListMixin0.builtin$cls = "Interceptor_ListMixin0";
    if (!("name" in Interceptor_ListMixin0))
      Interceptor_ListMixin0.name = "Interceptor_ListMixin0";
    $desc = $collectedClasses$.Interceptor_ListMixin0[1];
    Interceptor_ListMixin0.prototype = $desc;
    Interceptor_ListMixin0.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin0() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin0.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin0";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin0))
      Interceptor_ListMixin_ImmutableListMixin0.name = "Interceptor_ListMixin_ImmutableListMixin0";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin0[1];
    Interceptor_ListMixin_ImmutableListMixin0.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin0.$__fields__ = [];
    function FileReader() {
      this.$deferredAction();
    }
    FileReader.builtin$cls = "FileReader";
    if (!("name" in FileReader))
      FileReader.name = "FileReader";
    $desc = $collectedClasses$.FileReader[1];
    FileReader.prototype = $desc;
    FileReader.$__fields__ = [];
    FileReader.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function FileStream() {
      this.$deferredAction();
    }
    FileStream.builtin$cls = "FileStream";
    if (!("name" in FileStream))
      FileStream.name = "FileStream";
    $desc = $collectedClasses$.FileStream[1];
    FileStream.prototype = $desc;
    FileStream.$__fields__ = [];
    FileStream.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function FileWriter() {
      this.$deferredAction();
    }
    FileWriter.builtin$cls = "FileWriter";
    if (!("name" in FileWriter))
      FileWriter.name = "FileWriter";
    $desc = $collectedClasses$.FileWriter[1];
    FileWriter.prototype = $desc;
    FileWriter.$__fields__ = [];
    FileWriter.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    FileWriter.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function FocusEvent() {
      this.$deferredAction();
    }
    FocusEvent.builtin$cls = "FocusEvent";
    if (!("name" in FocusEvent))
      FocusEvent.name = "FocusEvent";
    $desc = $collectedClasses$.FocusEvent[1];
    FocusEvent.prototype = $desc;
    FocusEvent.$__fields__ = [];
    function FontFace() {
      this.$deferredAction();
    }
    FontFace.builtin$cls = "FontFace";
    if (!("name" in FontFace))
      FontFace.name = "FontFace";
    $desc = $collectedClasses$.FontFace[1];
    FontFace.prototype = $desc;
    FontFace.$__fields__ = [];
    function FontFaceSet() {
      this.$deferredAction();
    }
    FontFaceSet.builtin$cls = "FontFaceSet";
    if (!("name" in FontFaceSet))
      FontFaceSet.name = "FontFaceSet";
    $desc = $collectedClasses$.FontFaceSet[1];
    FontFaceSet.prototype = $desc;
    FontFaceSet.$__fields__ = [];
    function FormElement() {
      this.$deferredAction();
    }
    FormElement.builtin$cls = "FormElement";
    if (!("name" in FormElement))
      FormElement.name = "FormElement";
    $desc = $collectedClasses$.FormElement[1];
    FormElement.prototype = $desc;
    FormElement.$__fields__ = [];
    FormElement.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    FormElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    FormElement.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function Gamepad() {
      this.$deferredAction();
    }
    Gamepad.builtin$cls = "Gamepad";
    if (!("name" in Gamepad))
      Gamepad.name = "Gamepad";
    $desc = $collectedClasses$.Gamepad[1];
    Gamepad.prototype = $desc;
    Gamepad.$__fields__ = [];
    Gamepad.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function GamepadButton() {
      this.$deferredAction();
    }
    GamepadButton.builtin$cls = "GamepadButton";
    if (!("name" in GamepadButton))
      GamepadButton.name = "GamepadButton";
    $desc = $collectedClasses$.GamepadButton[1];
    GamepadButton.prototype = $desc;
    GamepadButton.$__fields__ = [];
    GamepadButton.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function GeofencingRegion() {
      this.$deferredAction();
    }
    GeofencingRegion.builtin$cls = "GeofencingRegion";
    if (!("name" in GeofencingRegion))
      GeofencingRegion.name = "GeofencingRegion";
    $desc = $collectedClasses$.GeofencingRegion[1];
    GeofencingRegion.prototype = $desc;
    GeofencingRegion.$__fields__ = [];
    GeofencingRegion.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function Headers() {
      this.$deferredAction();
    }
    Headers.builtin$cls = "Headers";
    if (!("name" in Headers))
      Headers.name = "Headers";
    $desc = $collectedClasses$.Headers[1];
    Headers.prototype = $desc;
    Headers.$__fields__ = [];
    function History() {
      this.$deferredAction();
    }
    History.builtin$cls = "History";
    if (!("name" in History))
      History.name = "History";
    $desc = $collectedClasses$.History[1];
    History.prototype = $desc;
    History.$__fields__ = [];
    History.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function HtmlCollection() {
      this.$deferredAction();
    }
    HtmlCollection.builtin$cls = "HtmlCollection";
    if (!("name" in HtmlCollection))
      HtmlCollection.name = "HtmlCollection";
    $desc = $collectedClasses$.HtmlCollection[1];
    HtmlCollection.prototype = $desc;
    HtmlCollection.$__fields__ = [];
    function Interceptor_ListMixin1() {
      this.$deferredAction();
    }
    Interceptor_ListMixin1.builtin$cls = "Interceptor_ListMixin1";
    if (!("name" in Interceptor_ListMixin1))
      Interceptor_ListMixin1.name = "Interceptor_ListMixin1";
    $desc = $collectedClasses$.Interceptor_ListMixin1[1];
    Interceptor_ListMixin1.prototype = $desc;
    Interceptor_ListMixin1.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin1() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin1.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin1";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin1))
      Interceptor_ListMixin_ImmutableListMixin1.name = "Interceptor_ListMixin_ImmutableListMixin1";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin1[1];
    Interceptor_ListMixin_ImmutableListMixin1.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin1.$__fields__ = [];
    function HtmlDocument() {
      this.$deferredAction();
    }
    HtmlDocument.builtin$cls = "HtmlDocument";
    if (!("name" in HtmlDocument))
      HtmlDocument.name = "HtmlDocument";
    $desc = $collectedClasses$.HtmlDocument[1];
    HtmlDocument.prototype = $desc;
    HtmlDocument.$__fields__ = [];
    HtmlDocument.prototype.get$body = function(receiver) {
      return receiver.body;
    };
    function HttpRequest() {
      this.$deferredAction();
    }
    HttpRequest.builtin$cls = "HttpRequest";
    if (!("name" in HttpRequest))
      HttpRequest.name = "HttpRequest";
    $desc = $collectedClasses$.HttpRequest[1];
    HttpRequest.prototype = $desc;
    HttpRequest.$__fields__ = [];
    function HttpRequest_request_closure(_captured_xhr_0) {
      this._captured_xhr_0 = _captured_xhr_0;
      this.$deferredAction();
    }
    HttpRequest_request_closure.builtin$cls = "HttpRequest_request_closure";
    if (!("name" in HttpRequest_request_closure))
      HttpRequest_request_closure.name = "HttpRequest_request_closure";
    $desc = $collectedClasses$.HttpRequest_request_closure[1];
    HttpRequest_request_closure.prototype = $desc;
    HttpRequest_request_closure.$__fields__ = ["_captured_xhr_0"];
    function HttpRequest_request_closure0(_html$_captured_completer_1, _captured_xhr_2) {
      this._html$_captured_completer_1 = _html$_captured_completer_1;
      this._captured_xhr_2 = _captured_xhr_2;
      this.$deferredAction();
    }
    HttpRequest_request_closure0.builtin$cls = "HttpRequest_request_closure0";
    if (!("name" in HttpRequest_request_closure0))
      HttpRequest_request_closure0.name = "HttpRequest_request_closure0";
    $desc = $collectedClasses$.HttpRequest_request_closure0[1];
    HttpRequest_request_closure0.prototype = $desc;
    HttpRequest_request_closure0.$__fields__ = ["_html$_captured_completer_1", "_captured_xhr_2"];
    function HttpRequestEventTarget() {
      this.$deferredAction();
    }
    HttpRequestEventTarget.builtin$cls = "HttpRequestEventTarget";
    if (!("name" in HttpRequestEventTarget))
      HttpRequestEventTarget.name = "HttpRequestEventTarget";
    $desc = $collectedClasses$.HttpRequestEventTarget[1];
    HttpRequestEventTarget.prototype = $desc;
    HttpRequestEventTarget.$__fields__ = [];
    function IFrameElement() {
      this.$deferredAction();
    }
    IFrameElement.builtin$cls = "IFrameElement";
    if (!("name" in IFrameElement))
      IFrameElement.name = "IFrameElement";
    $desc = $collectedClasses$.IFrameElement[1];
    IFrameElement.prototype = $desc;
    IFrameElement.$__fields__ = [];
    IFrameElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    function ImageData() {
      this.$deferredAction();
    }
    ImageData.builtin$cls = "ImageData";
    if (!("name" in ImageData))
      ImageData.name = "ImageData";
    $desc = $collectedClasses$.ImageData[1];
    ImageData.prototype = $desc;
    ImageData.$__fields__ = [];
    function ImageElement() {
      this.$deferredAction();
    }
    ImageElement.builtin$cls = "ImageElement";
    if (!("name" in ImageElement))
      ImageElement.name = "ImageElement";
    $desc = $collectedClasses$.ImageElement[1];
    ImageElement.prototype = $desc;
    ImageElement.$__fields__ = [];
    function InputElement() {
      this.$deferredAction();
    }
    InputElement.builtin$cls = "InputElement";
    if (!("name" in InputElement))
      InputElement.name = "InputElement";
    $desc = $collectedClasses$.InputElement[1];
    InputElement.prototype = $desc;
    InputElement.$__fields__ = [];
    InputElement.prototype.get$checked = function(receiver) {
      return receiver.checked;
    };
    InputElement.prototype.get$files = function(receiver) {
      return receiver.files;
    };
    InputElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    InputElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    InputElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function InputMethodContext() {
      this.$deferredAction();
    }
    InputMethodContext.builtin$cls = "InputMethodContext";
    if (!("name" in InputMethodContext))
      InputMethodContext.name = "InputMethodContext";
    $desc = $collectedClasses$.InputMethodContext[1];
    InputMethodContext.prototype = $desc;
    InputMethodContext.$__fields__ = [];
    InputMethodContext.prototype.get$locale = function(receiver) {
      return receiver.locale;
    };
    InputMethodContext.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function KeyboardEvent() {
      this.$deferredAction();
    }
    KeyboardEvent.builtin$cls = "KeyboardEvent";
    if (!("name" in KeyboardEvent))
      KeyboardEvent.name = "KeyboardEvent";
    $desc = $collectedClasses$.KeyboardEvent[1];
    KeyboardEvent.prototype = $desc;
    KeyboardEvent.$__fields__ = [];
    KeyboardEvent.prototype.get$altKey = function(receiver) {
      return receiver.altKey;
    };
    KeyboardEvent.prototype.get$ctrlKey = function(receiver) {
      return receiver.ctrlKey;
    };
    KeyboardEvent.prototype.get$location = function(receiver) {
      return receiver.location;
    };
    KeyboardEvent.prototype.get$metaKey = function(receiver) {
      return receiver.metaKey;
    };
    KeyboardEvent.prototype.get$repeat = function(receiver) {
      return receiver.repeat;
    };
    KeyboardEvent.prototype.get$shiftKey = function(receiver) {
      return receiver.shiftKey;
    };
    function KeygenElement() {
      this.$deferredAction();
    }
    KeygenElement.builtin$cls = "KeygenElement";
    if (!("name" in KeygenElement))
      KeygenElement.name = "KeygenElement";
    $desc = $collectedClasses$.KeygenElement[1];
    KeygenElement.prototype = $desc;
    KeygenElement.$__fields__ = [];
    KeygenElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    KeygenElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function LIElement() {
      this.$deferredAction();
    }
    LIElement.builtin$cls = "LIElement";
    if (!("name" in LIElement))
      LIElement.name = "LIElement";
    $desc = $collectedClasses$.LIElement[1];
    LIElement.prototype = $desc;
    LIElement.$__fields__ = [];
    LIElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function LinkElement() {
      this.$deferredAction();
    }
    LinkElement.builtin$cls = "LinkElement";
    if (!("name" in LinkElement))
      LinkElement.name = "LinkElement";
    $desc = $collectedClasses$.LinkElement[1];
    LinkElement.prototype = $desc;
    LinkElement.$__fields__ = [];
    LinkElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function Location() {
      this.$deferredAction();
    }
    Location.builtin$cls = "Location";
    if (!("name" in Location))
      Location.name = "Location";
    $desc = $collectedClasses$.Location[1];
    Location.prototype = $desc;
    Location.$__fields__ = [];
    function MapElement() {
      this.$deferredAction();
    }
    MapElement.builtin$cls = "MapElement";
    if (!("name" in MapElement))
      MapElement.name = "MapElement";
    $desc = $collectedClasses$.MapElement[1];
    MapElement.prototype = $desc;
    MapElement.$__fields__ = [];
    MapElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    function MediaController() {
      this.$deferredAction();
    }
    MediaController.builtin$cls = "MediaController";
    if (!("name" in MediaController))
      MediaController.name = "MediaController";
    $desc = $collectedClasses$.MediaController[1];
    MediaController.prototype = $desc;
    MediaController.$__fields__ = [];
    function MediaElement() {
      this.$deferredAction();
    }
    MediaElement.builtin$cls = "MediaElement";
    if (!("name" in MediaElement))
      MediaElement.name = "MediaElement";
    $desc = $collectedClasses$.MediaElement[1];
    MediaElement.prototype = $desc;
    MediaElement.$__fields__ = [];
    MediaElement.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function MediaKeySession() {
      this.$deferredAction();
    }
    MediaKeySession.builtin$cls = "MediaKeySession";
    if (!("name" in MediaKeySession))
      MediaKeySession.name = "MediaKeySession";
    $desc = $collectedClasses$.MediaKeySession[1];
    MediaKeySession.prototype = $desc;
    MediaKeySession.$__fields__ = [];
    MediaKeySession.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function MediaList() {
      this.$deferredAction();
    }
    MediaList.builtin$cls = "MediaList";
    if (!("name" in MediaList))
      MediaList.name = "MediaList";
    $desc = $collectedClasses$.MediaList[1];
    MediaList.prototype = $desc;
    MediaList.$__fields__ = [];
    MediaList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function MediaStream() {
      this.$deferredAction();
    }
    MediaStream.builtin$cls = "MediaStream";
    if (!("name" in MediaStream))
      MediaStream.name = "MediaStream";
    $desc = $collectedClasses$.MediaStream[1];
    MediaStream.prototype = $desc;
    MediaStream.$__fields__ = [];
    MediaStream.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function MediaStreamEvent() {
      this.$deferredAction();
    }
    MediaStreamEvent.builtin$cls = "MediaStreamEvent";
    if (!("name" in MediaStreamEvent))
      MediaStreamEvent.name = "MediaStreamEvent";
    $desc = $collectedClasses$.MediaStreamEvent[1];
    MediaStreamEvent.prototype = $desc;
    MediaStreamEvent.$__fields__ = [];
    MediaStreamEvent.prototype.get$stream = function(receiver) {
      return receiver.stream;
    };
    function MediaStreamTrack() {
      this.$deferredAction();
    }
    MediaStreamTrack.builtin$cls = "MediaStreamTrack";
    if (!("name" in MediaStreamTrack))
      MediaStreamTrack.name = "MediaStreamTrack";
    $desc = $collectedClasses$.MediaStreamTrack[1];
    MediaStreamTrack.prototype = $desc;
    MediaStreamTrack.$__fields__ = [];
    MediaStreamTrack.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function MenuElement() {
      this.$deferredAction();
    }
    MenuElement.builtin$cls = "MenuElement";
    if (!("name" in MenuElement))
      MenuElement.name = "MenuElement";
    $desc = $collectedClasses$.MenuElement[1];
    MenuElement.prototype = $desc;
    MenuElement.$__fields__ = [];
    MenuElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function MenuItemElement() {
      this.$deferredAction();
    }
    MenuItemElement.builtin$cls = "MenuItemElement";
    if (!("name" in MenuItemElement))
      MenuItemElement.name = "MenuItemElement";
    $desc = $collectedClasses$.MenuItemElement[1];
    MenuItemElement.prototype = $desc;
    MenuItemElement.$__fields__ = [];
    MenuItemElement.prototype.get$checked = function(receiver) {
      return receiver.checked;
    };
    MenuItemElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function MessagePort() {
      this.$deferredAction();
    }
    MessagePort.builtin$cls = "MessagePort";
    if (!("name" in MessagePort))
      MessagePort.name = "MessagePort";
    $desc = $collectedClasses$.MessagePort[1];
    MessagePort.prototype = $desc;
    MessagePort.$__fields__ = [];
    function MetaElement() {
      this.$deferredAction();
    }
    MetaElement.builtin$cls = "MetaElement";
    if (!("name" in MetaElement))
      MetaElement.name = "MetaElement";
    $desc = $collectedClasses$.MetaElement[1];
    MetaElement.prototype = $desc;
    MetaElement.$__fields__ = [];
    MetaElement.prototype.get$content = function(receiver) {
      return receiver.content;
    };
    MetaElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    function MeterElement() {
      this.$deferredAction();
    }
    MeterElement.builtin$cls = "MeterElement";
    if (!("name" in MeterElement))
      MeterElement.name = "MeterElement";
    $desc = $collectedClasses$.MeterElement[1];
    MeterElement.prototype = $desc;
    MeterElement.$__fields__ = [];
    MeterElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function MidiInputMap() {
      this.$deferredAction();
    }
    MidiInputMap.builtin$cls = "MidiInputMap";
    if (!("name" in MidiInputMap))
      MidiInputMap.name = "MidiInputMap";
    $desc = $collectedClasses$.MidiInputMap[1];
    MidiInputMap.prototype = $desc;
    MidiInputMap.$__fields__ = [];
    function MidiOutput() {
      this.$deferredAction();
    }
    MidiOutput.builtin$cls = "MidiOutput";
    if (!("name" in MidiOutput))
      MidiOutput.name = "MidiOutput";
    $desc = $collectedClasses$.MidiOutput[1];
    MidiOutput.prototype = $desc;
    MidiOutput.$__fields__ = [];
    function MidiOutputMap() {
      this.$deferredAction();
    }
    MidiOutputMap.builtin$cls = "MidiOutputMap";
    if (!("name" in MidiOutputMap))
      MidiOutputMap.name = "MidiOutputMap";
    $desc = $collectedClasses$.MidiOutputMap[1];
    MidiOutputMap.prototype = $desc;
    MidiOutputMap.$__fields__ = [];
    function MidiPort() {
      this.$deferredAction();
    }
    MidiPort.builtin$cls = "MidiPort";
    if (!("name" in MidiPort))
      MidiPort.name = "MidiPort";
    $desc = $collectedClasses$.MidiPort[1];
    MidiPort.prototype = $desc;
    MidiPort.$__fields__ = [];
    MidiPort.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    MidiPort.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function MimeType() {
      this.$deferredAction();
    }
    MimeType.builtin$cls = "MimeType";
    if (!("name" in MimeType))
      MimeType.name = "MimeType";
    $desc = $collectedClasses$.MimeType[1];
    MimeType.prototype = $desc;
    MimeType.$__fields__ = [];
    MimeType.prototype.get$description = function(receiver) {
      return receiver.description;
    };
    MimeType.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function MimeTypeArray() {
      this.$deferredAction();
    }
    MimeTypeArray.builtin$cls = "MimeTypeArray";
    if (!("name" in MimeTypeArray))
      MimeTypeArray.name = "MimeTypeArray";
    $desc = $collectedClasses$.MimeTypeArray[1];
    MimeTypeArray.prototype = $desc;
    MimeTypeArray.$__fields__ = [];
    function Interceptor_ListMixin2() {
      this.$deferredAction();
    }
    Interceptor_ListMixin2.builtin$cls = "Interceptor_ListMixin2";
    if (!("name" in Interceptor_ListMixin2))
      Interceptor_ListMixin2.name = "Interceptor_ListMixin2";
    $desc = $collectedClasses$.Interceptor_ListMixin2[1];
    Interceptor_ListMixin2.prototype = $desc;
    Interceptor_ListMixin2.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin2() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin2.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin2";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin2))
      Interceptor_ListMixin_ImmutableListMixin2.name = "Interceptor_ListMixin_ImmutableListMixin2";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin2[1];
    Interceptor_ListMixin_ImmutableListMixin2.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin2.$__fields__ = [];
    function MouseEvent() {
      this.$deferredAction();
    }
    MouseEvent.builtin$cls = "MouseEvent";
    if (!("name" in MouseEvent))
      MouseEvent.name = "MouseEvent";
    $desc = $collectedClasses$.MouseEvent[1];
    MouseEvent.prototype = $desc;
    MouseEvent.$__fields__ = [];
    MouseEvent.prototype.get$altKey = function(receiver) {
      return receiver.altKey;
    };
    MouseEvent.prototype.get$button = function(receiver) {
      return receiver.button;
    };
    MouseEvent.prototype.get$ctrlKey = function(receiver) {
      return receiver.ctrlKey;
    };
    MouseEvent.prototype.get$dataTransfer = function(receiver) {
      return receiver.dataTransfer;
    };
    MouseEvent.prototype.get$metaKey = function(receiver) {
      return receiver.metaKey;
    };
    MouseEvent.prototype.get$shiftKey = function(receiver) {
      return receiver.shiftKey;
    };
    function MutationRecord() {
      this.$deferredAction();
    }
    MutationRecord.builtin$cls = "MutationRecord";
    if (!("name" in MutationRecord))
      MutationRecord.name = "MutationRecord";
    $desc = $collectedClasses$.MutationRecord[1];
    MutationRecord.prototype = $desc;
    MutationRecord.$__fields__ = [];
    MutationRecord.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    MutationRecord.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function Navigator() {
      this.$deferredAction();
    }
    Navigator.builtin$cls = "Navigator";
    if (!("name" in Navigator))
      Navigator.name = "Navigator";
    $desc = $collectedClasses$.Navigator[1];
    Navigator.prototype = $desc;
    Navigator.$__fields__ = [];
    function NetworkInformation() {
      this.$deferredAction();
    }
    NetworkInformation.builtin$cls = "NetworkInformation";
    if (!("name" in NetworkInformation))
      NetworkInformation.name = "NetworkInformation";
    $desc = $collectedClasses$.NetworkInformation[1];
    NetworkInformation.prototype = $desc;
    NetworkInformation.$__fields__ = [];
    NetworkInformation.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function Node() {
      this.$deferredAction();
    }
    Node.builtin$cls = "Node";
    if (!("name" in Node))
      Node.name = "Node";
    $desc = $collectedClasses$.Node[1];
    Node.prototype = $desc;
    Node.$__fields__ = [];
    function NodeList() {
      this.$deferredAction();
    }
    NodeList.builtin$cls = "NodeList";
    if (!("name" in NodeList))
      NodeList.name = "NodeList";
    $desc = $collectedClasses$.NodeList[1];
    NodeList.prototype = $desc;
    NodeList.$__fields__ = [];
    function Interceptor_ListMixin3() {
      this.$deferredAction();
    }
    Interceptor_ListMixin3.builtin$cls = "Interceptor_ListMixin3";
    if (!("name" in Interceptor_ListMixin3))
      Interceptor_ListMixin3.name = "Interceptor_ListMixin3";
    $desc = $collectedClasses$.Interceptor_ListMixin3[1];
    Interceptor_ListMixin3.prototype = $desc;
    Interceptor_ListMixin3.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin3() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin3.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin3";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin3))
      Interceptor_ListMixin_ImmutableListMixin3.name = "Interceptor_ListMixin_ImmutableListMixin3";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin3[1];
    Interceptor_ListMixin_ImmutableListMixin3.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin3.$__fields__ = [];
    function Notification() {
      this.$deferredAction();
    }
    Notification.builtin$cls = "Notification";
    if (!("name" in Notification))
      Notification.name = "Notification";
    $desc = $collectedClasses$.Notification[1];
    Notification.prototype = $desc;
    Notification.$__fields__ = [];
    Notification.prototype.get$body = function(receiver) {
      return receiver.body;
    };
    Notification.prototype.get$title = function(receiver) {
      return receiver.title;
    };
    function OListElement() {
      this.$deferredAction();
    }
    OListElement.builtin$cls = "OListElement";
    if (!("name" in OListElement))
      OListElement.name = "OListElement";
    $desc = $collectedClasses$.OListElement[1];
    OListElement.prototype = $desc;
    OListElement.$__fields__ = [];
    OListElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function ObjectElement() {
      this.$deferredAction();
    }
    ObjectElement.builtin$cls = "ObjectElement";
    if (!("name" in ObjectElement))
      ObjectElement.name = "ObjectElement";
    $desc = $collectedClasses$.ObjectElement[1];
    ObjectElement.prototype = $desc;
    ObjectElement.$__fields__ = [];
    ObjectElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    ObjectElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function OptionElement() {
      this.$deferredAction();
    }
    OptionElement.builtin$cls = "OptionElement";
    if (!("name" in OptionElement))
      OptionElement.name = "OptionElement";
    $desc = $collectedClasses$.OptionElement[1];
    OptionElement.prototype = $desc;
    OptionElement.$__fields__ = [];
    OptionElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function OutputElement() {
      this.$deferredAction();
    }
    OutputElement.builtin$cls = "OutputElement";
    if (!("name" in OutputElement))
      OutputElement.name = "OutputElement";
    $desc = $collectedClasses$.OutputElement[1];
    OutputElement.prototype = $desc;
    OutputElement.$__fields__ = [];
    OutputElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    OutputElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    OutputElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function ParamElement() {
      this.$deferredAction();
    }
    ParamElement.builtin$cls = "ParamElement";
    if (!("name" in ParamElement))
      ParamElement.name = "ParamElement";
    $desc = $collectedClasses$.ParamElement[1];
    ParamElement.prototype = $desc;
    ParamElement.$__fields__ = [];
    ParamElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    ParamElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function Path2D() {
      this.$deferredAction();
    }
    Path2D.builtin$cls = "Path2D";
    if (!("name" in Path2D))
      Path2D.name = "Path2D";
    $desc = $collectedClasses$.Path2D[1];
    Path2D.prototype = $desc;
    Path2D.$__fields__ = [];
    function PerformanceNavigation() {
      this.$deferredAction();
    }
    PerformanceNavigation.builtin$cls = "PerformanceNavigation";
    if (!("name" in PerformanceNavigation))
      PerformanceNavigation.name = "PerformanceNavigation";
    $desc = $collectedClasses$.PerformanceNavigation[1];
    PerformanceNavigation.prototype = $desc;
    PerformanceNavigation.$__fields__ = [];
    PerformanceNavigation.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function Plugin() {
      this.$deferredAction();
    }
    Plugin.builtin$cls = "Plugin";
    if (!("name" in Plugin))
      Plugin.name = "Plugin";
    $desc = $collectedClasses$.Plugin[1];
    Plugin.prototype = $desc;
    Plugin.$__fields__ = [];
    Plugin.prototype.get$description = function(receiver) {
      return receiver.description;
    };
    Plugin.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function PluginArray() {
      this.$deferredAction();
    }
    PluginArray.builtin$cls = "PluginArray";
    if (!("name" in PluginArray))
      PluginArray.name = "PluginArray";
    $desc = $collectedClasses$.PluginArray[1];
    PluginArray.prototype = $desc;
    PluginArray.$__fields__ = [];
    function Interceptor_ListMixin4() {
      this.$deferredAction();
    }
    Interceptor_ListMixin4.builtin$cls = "Interceptor_ListMixin4";
    if (!("name" in Interceptor_ListMixin4))
      Interceptor_ListMixin4.name = "Interceptor_ListMixin4";
    $desc = $collectedClasses$.Interceptor_ListMixin4[1];
    Interceptor_ListMixin4.prototype = $desc;
    Interceptor_ListMixin4.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin4() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin4.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin4";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin4))
      Interceptor_ListMixin_ImmutableListMixin4.name = "Interceptor_ListMixin_ImmutableListMixin4";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin4[1];
    Interceptor_ListMixin_ImmutableListMixin4.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin4.$__fields__ = [];
    function PopStateEvent() {
      this.$deferredAction();
    }
    PopStateEvent.builtin$cls = "PopStateEvent";
    if (!("name" in PopStateEvent))
      PopStateEvent.name = "PopStateEvent";
    $desc = $collectedClasses$.PopStateEvent[1];
    PopStateEvent.prototype = $desc;
    PopStateEvent.$__fields__ = [];
    function ProcessingInstruction() {
      this.$deferredAction();
    }
    ProcessingInstruction.builtin$cls = "ProcessingInstruction";
    if (!("name" in ProcessingInstruction))
      ProcessingInstruction.name = "ProcessingInstruction";
    $desc = $collectedClasses$.ProcessingInstruction[1];
    ProcessingInstruction.prototype = $desc;
    ProcessingInstruction.$__fields__ = [];
    ProcessingInstruction.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function ProgressElement() {
      this.$deferredAction();
    }
    ProgressElement.builtin$cls = "ProgressElement";
    if (!("name" in ProgressElement))
      ProgressElement.name = "ProgressElement";
    $desc = $collectedClasses$.ProgressElement[1];
    ProgressElement.prototype = $desc;
    ProgressElement.$__fields__ = [];
    ProgressElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function ReadableStream() {
      this.$deferredAction();
    }
    ReadableStream.builtin$cls = "ReadableStream";
    if (!("name" in ReadableStream))
      ReadableStream.name = "ReadableStream";
    $desc = $collectedClasses$.ReadableStream[1];
    ReadableStream.prototype = $desc;
    ReadableStream.$__fields__ = [];
    ReadableStream.prototype.get$state = function(receiver) {
      return receiver.state;
    };
    function RelatedEvent() {
      this.$deferredAction();
    }
    RelatedEvent.builtin$cls = "RelatedEvent";
    if (!("name" in RelatedEvent))
      RelatedEvent.name = "RelatedEvent";
    $desc = $collectedClasses$.RelatedEvent[1];
    RelatedEvent.prototype = $desc;
    RelatedEvent.$__fields__ = [];
    function RtcDataChannel() {
      this.$deferredAction();
    }
    RtcDataChannel.builtin$cls = "RtcDataChannel";
    if (!("name" in RtcDataChannel))
      RtcDataChannel.name = "RtcDataChannel";
    $desc = $collectedClasses$.RtcDataChannel[1];
    RtcDataChannel.prototype = $desc;
    RtcDataChannel.$__fields__ = [];
    RtcDataChannel.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function RtcPeerConnection() {
      this.$deferredAction();
    }
    RtcPeerConnection.builtin$cls = "RtcPeerConnection";
    if (!("name" in RtcPeerConnection))
      RtcPeerConnection.name = "RtcPeerConnection";
    $desc = $collectedClasses$.RtcPeerConnection[1];
    RtcPeerConnection.prototype = $desc;
    RtcPeerConnection.$__fields__ = [];
    function RtcSessionDescription() {
      this.$deferredAction();
    }
    RtcSessionDescription.builtin$cls = "RtcSessionDescription";
    if (!("name" in RtcSessionDescription))
      RtcSessionDescription.name = "RtcSessionDescription";
    $desc = $collectedClasses$.RtcSessionDescription[1];
    RtcSessionDescription.prototype = $desc;
    RtcSessionDescription.$__fields__ = [];
    RtcSessionDescription.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function RtcStatsReport() {
      this.$deferredAction();
    }
    RtcStatsReport.builtin$cls = "RtcStatsReport";
    if (!("name" in RtcStatsReport))
      RtcStatsReport.name = "RtcStatsReport";
    $desc = $collectedClasses$.RtcStatsReport[1];
    RtcStatsReport.prototype = $desc;
    RtcStatsReport.$__fields__ = [];
    RtcStatsReport.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    RtcStatsReport.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function RtcStatsResponse() {
      this.$deferredAction();
    }
    RtcStatsResponse.builtin$cls = "RtcStatsResponse";
    if (!("name" in RtcStatsResponse))
      RtcStatsResponse.name = "RtcStatsResponse";
    $desc = $collectedClasses$.RtcStatsResponse[1];
    RtcStatsResponse.prototype = $desc;
    RtcStatsResponse.$__fields__ = [];
    function ScreenOrientation() {
      this.$deferredAction();
    }
    ScreenOrientation.builtin$cls = "ScreenOrientation";
    if (!("name" in ScreenOrientation))
      ScreenOrientation.name = "ScreenOrientation";
    $desc = $collectedClasses$.ScreenOrientation[1];
    ScreenOrientation.prototype = $desc;
    ScreenOrientation.$__fields__ = [];
    ScreenOrientation.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function ScriptElement() {
      this.$deferredAction();
    }
    ScriptElement.builtin$cls = "ScriptElement";
    if (!("name" in ScriptElement))
      ScriptElement.name = "ScriptElement";
    $desc = $collectedClasses$.ScriptElement[1];
    ScriptElement.prototype = $desc;
    ScriptElement.$__fields__ = [];
    ScriptElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function SelectElement() {
      this.$deferredAction();
    }
    SelectElement.builtin$cls = "SelectElement";
    if (!("name" in SelectElement))
      SelectElement.name = "SelectElement";
    $desc = $collectedClasses$.SelectElement[1];
    SelectElement.prototype = $desc;
    SelectElement.$__fields__ = [];
    SelectElement.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    SelectElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    SelectElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    SelectElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function Selection() {
      this.$deferredAction();
    }
    Selection.builtin$cls = "Selection";
    if (!("name" in Selection))
      Selection.name = "Selection";
    $desc = $collectedClasses$.Selection[1];
    Selection.prototype = $desc;
    Selection.$__fields__ = [];
    Selection.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function ServiceWorkerClient() {
      this.$deferredAction();
    }
    ServiceWorkerClient.builtin$cls = "ServiceWorkerClient";
    if (!("name" in ServiceWorkerClient))
      ServiceWorkerClient.name = "ServiceWorkerClient";
    $desc = $collectedClasses$.ServiceWorkerClient[1];
    ServiceWorkerClient.prototype = $desc;
    ServiceWorkerClient.$__fields__ = [];
    ServiceWorkerClient.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function SharedWorker() {
      this.$deferredAction();
    }
    SharedWorker.builtin$cls = "SharedWorker";
    if (!("name" in SharedWorker))
      SharedWorker.name = "SharedWorker";
    $desc = $collectedClasses$.SharedWorker[1];
    SharedWorker.prototype = $desc;
    SharedWorker.$__fields__ = [];
    function SourceBuffer() {
      this.$deferredAction();
    }
    SourceBuffer.builtin$cls = "SourceBuffer";
    if (!("name" in SourceBuffer))
      SourceBuffer.name = "SourceBuffer";
    $desc = $collectedClasses$.SourceBuffer[1];
    SourceBuffer.prototype = $desc;
    SourceBuffer.$__fields__ = [];
    function SourceBufferList() {
      this.$deferredAction();
    }
    SourceBufferList.builtin$cls = "SourceBufferList";
    if (!("name" in SourceBufferList))
      SourceBufferList.name = "SourceBufferList";
    $desc = $collectedClasses$.SourceBufferList[1];
    SourceBufferList.prototype = $desc;
    SourceBufferList.$__fields__ = [];
    function EventTarget_ListMixin() {
      this.$deferredAction();
    }
    EventTarget_ListMixin.builtin$cls = "EventTarget_ListMixin";
    if (!("name" in EventTarget_ListMixin))
      EventTarget_ListMixin.name = "EventTarget_ListMixin";
    $desc = $collectedClasses$.EventTarget_ListMixin[1];
    EventTarget_ListMixin.prototype = $desc;
    EventTarget_ListMixin.$__fields__ = [];
    function EventTarget_ListMixin_ImmutableListMixin() {
      this.$deferredAction();
    }
    EventTarget_ListMixin_ImmutableListMixin.builtin$cls = "EventTarget_ListMixin_ImmutableListMixin";
    if (!("name" in EventTarget_ListMixin_ImmutableListMixin))
      EventTarget_ListMixin_ImmutableListMixin.name = "EventTarget_ListMixin_ImmutableListMixin";
    $desc = $collectedClasses$.EventTarget_ListMixin_ImmutableListMixin[1];
    EventTarget_ListMixin_ImmutableListMixin.prototype = $desc;
    EventTarget_ListMixin_ImmutableListMixin.$__fields__ = [];
    function SourceElement() {
      this.$deferredAction();
    }
    SourceElement.builtin$cls = "SourceElement";
    if (!("name" in SourceElement))
      SourceElement.name = "SourceElement";
    $desc = $collectedClasses$.SourceElement[1];
    SourceElement.prototype = $desc;
    SourceElement.$__fields__ = [];
    SourceElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function SourceInfo() {
      this.$deferredAction();
    }
    SourceInfo.builtin$cls = "SourceInfo";
    if (!("name" in SourceInfo))
      SourceInfo.name = "SourceInfo";
    $desc = $collectedClasses$.SourceInfo[1];
    SourceInfo.prototype = $desc;
    SourceInfo.$__fields__ = [];
    SourceInfo.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function SpeechGrammar() {
      this.$deferredAction();
    }
    SpeechGrammar.builtin$cls = "SpeechGrammar";
    if (!("name" in SpeechGrammar))
      SpeechGrammar.name = "SpeechGrammar";
    $desc = $collectedClasses$.SpeechGrammar[1];
    SpeechGrammar.prototype = $desc;
    SpeechGrammar.$__fields__ = [];
    function SpeechGrammarList() {
      this.$deferredAction();
    }
    SpeechGrammarList.builtin$cls = "SpeechGrammarList";
    if (!("name" in SpeechGrammarList))
      SpeechGrammarList.name = "SpeechGrammarList";
    $desc = $collectedClasses$.SpeechGrammarList[1];
    SpeechGrammarList.prototype = $desc;
    SpeechGrammarList.$__fields__ = [];
    function Interceptor_ListMixin5() {
      this.$deferredAction();
    }
    Interceptor_ListMixin5.builtin$cls = "Interceptor_ListMixin5";
    if (!("name" in Interceptor_ListMixin5))
      Interceptor_ListMixin5.name = "Interceptor_ListMixin5";
    $desc = $collectedClasses$.Interceptor_ListMixin5[1];
    Interceptor_ListMixin5.prototype = $desc;
    Interceptor_ListMixin5.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin5() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin5.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin5";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin5))
      Interceptor_ListMixin_ImmutableListMixin5.name = "Interceptor_ListMixin_ImmutableListMixin5";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin5[1];
    Interceptor_ListMixin_ImmutableListMixin5.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin5.$__fields__ = [];
    function SpeechRecognitionError() {
      this.$deferredAction();
    }
    SpeechRecognitionError.builtin$cls = "SpeechRecognitionError";
    if (!("name" in SpeechRecognitionError))
      SpeechRecognitionError.name = "SpeechRecognitionError";
    $desc = $collectedClasses$.SpeechRecognitionError[1];
    SpeechRecognitionError.prototype = $desc;
    SpeechRecognitionError.$__fields__ = [];
    SpeechRecognitionError.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function SpeechRecognitionResult() {
      this.$deferredAction();
    }
    SpeechRecognitionResult.builtin$cls = "SpeechRecognitionResult";
    if (!("name" in SpeechRecognitionResult))
      SpeechRecognitionResult.name = "SpeechRecognitionResult";
    $desc = $collectedClasses$.SpeechRecognitionResult[1];
    SpeechRecognitionResult.prototype = $desc;
    SpeechRecognitionResult.$__fields__ = [];
    SpeechRecognitionResult.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function SpeechSynthesis() {
      this.$deferredAction();
    }
    SpeechSynthesis.builtin$cls = "SpeechSynthesis";
    if (!("name" in SpeechSynthesis))
      SpeechSynthesis.name = "SpeechSynthesis";
    $desc = $collectedClasses$.SpeechSynthesis[1];
    SpeechSynthesis.prototype = $desc;
    SpeechSynthesis.$__fields__ = [];
    function Storage() {
      this.$deferredAction();
    }
    Storage.builtin$cls = "Storage";
    if (!("name" in Storage))
      Storage.name = "Storage";
    $desc = $collectedClasses$.Storage[1];
    Storage.prototype = $desc;
    Storage.$__fields__ = [];
    function Storage_keys_closure(_captured_keys_0) {
      this._captured_keys_0 = _captured_keys_0;
      this.$deferredAction();
    }
    Storage_keys_closure.builtin$cls = "Storage_keys_closure";
    if (!("name" in Storage_keys_closure))
      Storage_keys_closure.name = "Storage_keys_closure";
    $desc = $collectedClasses$.Storage_keys_closure[1];
    Storage_keys_closure.prototype = $desc;
    Storage_keys_closure.$__fields__ = ["_captured_keys_0"];
    function StorageEvent() {
      this.$deferredAction();
    }
    StorageEvent.builtin$cls = "StorageEvent";
    if (!("name" in StorageEvent))
      StorageEvent.name = "StorageEvent";
    $desc = $collectedClasses$.StorageEvent[1];
    StorageEvent.prototype = $desc;
    StorageEvent.$__fields__ = [];
    StorageEvent.prototype.get$key = function(receiver) {
      return receiver.key;
    };
    function StyleElement() {
      this.$deferredAction();
    }
    StyleElement.builtin$cls = "StyleElement";
    if (!("name" in StyleElement))
      StyleElement.name = "StyleElement";
    $desc = $collectedClasses$.StyleElement[1];
    StyleElement.prototype = $desc;
    StyleElement.$__fields__ = [];
    StyleElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function StyleMedia() {
      this.$deferredAction();
    }
    StyleMedia.builtin$cls = "StyleMedia";
    if (!("name" in StyleMedia))
      StyleMedia.name = "StyleMedia";
    $desc = $collectedClasses$.StyleMedia[1];
    StyleMedia.prototype = $desc;
    StyleMedia.$__fields__ = [];
    StyleMedia.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function StyleSheet() {
      this.$deferredAction();
    }
    StyleSheet.builtin$cls = "StyleSheet";
    if (!("name" in StyleSheet))
      StyleSheet.name = "StyleSheet";
    $desc = $collectedClasses$.StyleSheet[1];
    StyleSheet.prototype = $desc;
    StyleSheet.$__fields__ = [];
    StyleSheet.prototype.get$title = function(receiver) {
      return receiver.title;
    };
    StyleSheet.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function TemplateElement() {
      this.$deferredAction();
    }
    TemplateElement.builtin$cls = "TemplateElement";
    if (!("name" in TemplateElement))
      TemplateElement.name = "TemplateElement";
    $desc = $collectedClasses$.TemplateElement[1];
    TemplateElement.prototype = $desc;
    TemplateElement.$__fields__ = [];
    TemplateElement.prototype.get$content = function(receiver) {
      return receiver.content;
    };
    function TextAreaElement() {
      this.$deferredAction();
    }
    TextAreaElement.builtin$cls = "TextAreaElement";
    if (!("name" in TextAreaElement))
      TextAreaElement.name = "TextAreaElement";
    $desc = $collectedClasses$.TextAreaElement[1];
    TextAreaElement.prototype = $desc;
    TextAreaElement.$__fields__ = [];
    TextAreaElement.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    TextAreaElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    TextAreaElement.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function TextTrack() {
      this.$deferredAction();
    }
    TextTrack.builtin$cls = "TextTrack";
    if (!("name" in TextTrack))
      TextTrack.name = "TextTrack";
    $desc = $collectedClasses$.TextTrack[1];
    TextTrack.prototype = $desc;
    TextTrack.$__fields__ = [];
    TextTrack.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function TextTrackCue() {
      this.$deferredAction();
    }
    TextTrackCue.builtin$cls = "TextTrackCue";
    if (!("name" in TextTrackCue))
      TextTrackCue.name = "TextTrackCue";
    $desc = $collectedClasses$.TextTrackCue[1];
    TextTrackCue.prototype = $desc;
    TextTrackCue.$__fields__ = [];
    TextTrackCue.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function TextTrackCueList() {
      this.$deferredAction();
    }
    TextTrackCueList.builtin$cls = "TextTrackCueList";
    if (!("name" in TextTrackCueList))
      TextTrackCueList.name = "TextTrackCueList";
    $desc = $collectedClasses$.TextTrackCueList[1];
    TextTrackCueList.prototype = $desc;
    TextTrackCueList.$__fields__ = [];
    function Interceptor_ListMixin6() {
      this.$deferredAction();
    }
    Interceptor_ListMixin6.builtin$cls = "Interceptor_ListMixin6";
    if (!("name" in Interceptor_ListMixin6))
      Interceptor_ListMixin6.name = "Interceptor_ListMixin6";
    $desc = $collectedClasses$.Interceptor_ListMixin6[1];
    Interceptor_ListMixin6.prototype = $desc;
    Interceptor_ListMixin6.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin6() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin6.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin6";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin6))
      Interceptor_ListMixin_ImmutableListMixin6.name = "Interceptor_ListMixin_ImmutableListMixin6";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin6[1];
    Interceptor_ListMixin_ImmutableListMixin6.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin6.$__fields__ = [];
    function TextTrackList() {
      this.$deferredAction();
    }
    TextTrackList.builtin$cls = "TextTrackList";
    if (!("name" in TextTrackList))
      TextTrackList.name = "TextTrackList";
    $desc = $collectedClasses$.TextTrackList[1];
    TextTrackList.prototype = $desc;
    TextTrackList.$__fields__ = [];
    function EventTarget_ListMixin0() {
      this.$deferredAction();
    }
    EventTarget_ListMixin0.builtin$cls = "EventTarget_ListMixin0";
    if (!("name" in EventTarget_ListMixin0))
      EventTarget_ListMixin0.name = "EventTarget_ListMixin0";
    $desc = $collectedClasses$.EventTarget_ListMixin0[1];
    EventTarget_ListMixin0.prototype = $desc;
    EventTarget_ListMixin0.$__fields__ = [];
    function EventTarget_ListMixin_ImmutableListMixin0() {
      this.$deferredAction();
    }
    EventTarget_ListMixin_ImmutableListMixin0.builtin$cls = "EventTarget_ListMixin_ImmutableListMixin0";
    if (!("name" in EventTarget_ListMixin_ImmutableListMixin0))
      EventTarget_ListMixin_ImmutableListMixin0.name = "EventTarget_ListMixin_ImmutableListMixin0";
    $desc = $collectedClasses$.EventTarget_ListMixin_ImmutableListMixin0[1];
    EventTarget_ListMixin_ImmutableListMixin0.prototype = $desc;
    EventTarget_ListMixin_ImmutableListMixin0.$__fields__ = [];
    function TimeRanges() {
      this.$deferredAction();
    }
    TimeRanges.builtin$cls = "TimeRanges";
    if (!("name" in TimeRanges))
      TimeRanges.name = "TimeRanges";
    $desc = $collectedClasses$.TimeRanges[1];
    TimeRanges.prototype = $desc;
    TimeRanges.$__fields__ = [];
    TimeRanges.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function Touch() {
      this.$deferredAction();
    }
    Touch.builtin$cls = "Touch";
    if (!("name" in Touch))
      Touch.name = "Touch";
    $desc = $collectedClasses$.Touch[1];
    Touch.prototype = $desc;
    Touch.$__fields__ = [];
    function TouchEvent() {
      this.$deferredAction();
    }
    TouchEvent.builtin$cls = "TouchEvent";
    if (!("name" in TouchEvent))
      TouchEvent.name = "TouchEvent";
    $desc = $collectedClasses$.TouchEvent[1];
    TouchEvent.prototype = $desc;
    TouchEvent.$__fields__ = [];
    TouchEvent.prototype.get$altKey = function(receiver) {
      return receiver.altKey;
    };
    TouchEvent.prototype.get$changedTouches = function(receiver) {
      return receiver.changedTouches;
    };
    TouchEvent.prototype.get$ctrlKey = function(receiver) {
      return receiver.ctrlKey;
    };
    TouchEvent.prototype.get$metaKey = function(receiver) {
      return receiver.metaKey;
    };
    TouchEvent.prototype.get$shiftKey = function(receiver) {
      return receiver.shiftKey;
    };
    TouchEvent.prototype.get$targetTouches = function(receiver) {
      return receiver.targetTouches;
    };
    TouchEvent.prototype.get$touches = function(receiver) {
      return receiver.touches;
    };
    function TouchList() {
      this.$deferredAction();
    }
    TouchList.builtin$cls = "TouchList";
    if (!("name" in TouchList))
      TouchList.name = "TouchList";
    $desc = $collectedClasses$.TouchList[1];
    TouchList.prototype = $desc;
    TouchList.$__fields__ = [];
    function Interceptor_ListMixin7() {
      this.$deferredAction();
    }
    Interceptor_ListMixin7.builtin$cls = "Interceptor_ListMixin7";
    if (!("name" in Interceptor_ListMixin7))
      Interceptor_ListMixin7.name = "Interceptor_ListMixin7";
    $desc = $collectedClasses$.Interceptor_ListMixin7[1];
    Interceptor_ListMixin7.prototype = $desc;
    Interceptor_ListMixin7.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin7() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin7.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin7";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin7))
      Interceptor_ListMixin_ImmutableListMixin7.name = "Interceptor_ListMixin_ImmutableListMixin7";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin7[1];
    Interceptor_ListMixin_ImmutableListMixin7.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin7.$__fields__ = [];
    function UIEvent() {
      this.$deferredAction();
    }
    UIEvent.builtin$cls = "UIEvent";
    if (!("name" in UIEvent))
      UIEvent.name = "UIEvent";
    $desc = $collectedClasses$.UIEvent[1];
    UIEvent.prototype = $desc;
    UIEvent.$__fields__ = [];
    UIEvent.prototype.get$detail = function(receiver) {
      return receiver.detail;
    };
    function Url() {
      this.$deferredAction();
    }
    Url.builtin$cls = "Url";
    if (!("name" in Url))
      Url.name = "Url";
    $desc = $collectedClasses$.Url[1];
    Url.prototype = $desc;
    Url.$__fields__ = [];
    function VideoElement() {
      this.$deferredAction();
    }
    VideoElement.builtin$cls = "VideoElement";
    if (!("name" in VideoElement))
      VideoElement.name = "VideoElement";
    $desc = $collectedClasses$.VideoElement[1];
    VideoElement.prototype = $desc;
    VideoElement.$__fields__ = [];
    function VideoTrack() {
      this.$deferredAction();
    }
    VideoTrack.builtin$cls = "VideoTrack";
    if (!("name" in VideoTrack))
      VideoTrack.name = "VideoTrack";
    $desc = $collectedClasses$.VideoTrack[1];
    VideoTrack.prototype = $desc;
    VideoTrack.$__fields__ = [];
    VideoTrack.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function VideoTrackList() {
      this.$deferredAction();
    }
    VideoTrackList.builtin$cls = "VideoTrackList";
    if (!("name" in VideoTrackList))
      VideoTrackList.name = "VideoTrackList";
    $desc = $collectedClasses$.VideoTrackList[1];
    VideoTrackList.prototype = $desc;
    VideoTrackList.$__fields__ = [];
    VideoTrackList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function VttRegion() {
      this.$deferredAction();
    }
    VttRegion.builtin$cls = "VttRegion";
    if (!("name" in VttRegion))
      VttRegion.name = "VttRegion";
    $desc = $collectedClasses$.VttRegion[1];
    VttRegion.prototype = $desc;
    VttRegion.$__fields__ = [];
    VttRegion.prototype.get$id = function(receiver) {
      return receiver.id;
    };
    function VttRegionList() {
      this.$deferredAction();
    }
    VttRegionList.builtin$cls = "VttRegionList";
    if (!("name" in VttRegionList))
      VttRegionList.name = "VttRegionList";
    $desc = $collectedClasses$.VttRegionList[1];
    VttRegionList.prototype = $desc;
    VttRegionList.$__fields__ = [];
    VttRegionList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function WebSocket() {
      this.$deferredAction();
    }
    WebSocket.builtin$cls = "WebSocket";
    if (!("name" in WebSocket))
      WebSocket.name = "WebSocket";
    $desc = $collectedClasses$.WebSocket[1];
    WebSocket.prototype = $desc;
    WebSocket.$__fields__ = [];
    function WheelEvent() {
      this.$deferredAction();
    }
    WheelEvent.builtin$cls = "WheelEvent";
    if (!("name" in WheelEvent))
      WheelEvent.name = "WheelEvent";
    $desc = $collectedClasses$.WheelEvent[1];
    WheelEvent.prototype = $desc;
    WheelEvent.$__fields__ = [];
    WheelEvent.prototype.get$deltaZ = function(receiver) {
      return receiver.deltaZ;
    };
    function Window() {
      this.$deferredAction();
    }
    Window.builtin$cls = "Window";
    if (!("name" in Window))
      Window.name = "Window";
    $desc = $collectedClasses$.Window[1];
    Window.prototype = $desc;
    Window.$__fields__ = [];
    Window.prototype.get$screenX = function(receiver) {
      return receiver.screenX;
    };
    Window.prototype.get$screenY = function(receiver) {
      return receiver.screenY;
    };
    function Window_animationFrame_closure(_html$_captured_completer_0) {
      this._html$_captured_completer_0 = _html$_captured_completer_0;
      this.$deferredAction();
    }
    Window_animationFrame_closure.builtin$cls = "Window_animationFrame_closure";
    if (!("name" in Window_animationFrame_closure))
      Window_animationFrame_closure.name = "Window_animationFrame_closure";
    $desc = $collectedClasses$.Window_animationFrame_closure[1];
    Window_animationFrame_closure.prototype = $desc;
    Window_animationFrame_closure.$__fields__ = ["_html$_captured_completer_0"];
    function Worker() {
      this.$deferredAction();
    }
    Worker.builtin$cls = "Worker";
    if (!("name" in Worker))
      Worker.name = "Worker";
    $desc = $collectedClasses$.Worker[1];
    Worker.prototype = $desc;
    Worker.$__fields__ = [];
    function WorkerGlobalScope() {
      this.$deferredAction();
    }
    WorkerGlobalScope.builtin$cls = "WorkerGlobalScope";
    if (!("name" in WorkerGlobalScope))
      WorkerGlobalScope.name = "WorkerGlobalScope";
    $desc = $collectedClasses$.WorkerGlobalScope[1];
    WorkerGlobalScope.prototype = $desc;
    WorkerGlobalScope.$__fields__ = [];
    WorkerGlobalScope.prototype.get$location = function(receiver) {
      return receiver.location;
    };
    function _Attr() {
      this.$deferredAction();
    }
    _Attr.builtin$cls = "_Attr";
    if (!("name" in _Attr))
      _Attr.name = "_Attr";
    $desc = $collectedClasses$._Attr[1];
    _Attr.prototype = $desc;
    _Attr.$__fields__ = [];
    _Attr.prototype.get$name = function(receiver) {
      return receiver.name;
    };
    _Attr.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function _CSSValue() {
      this.$deferredAction();
    }
    _CSSValue.builtin$cls = "_CSSValue";
    if (!("name" in _CSSValue))
      _CSSValue.name = "_CSSValue";
    $desc = $collectedClasses$._CSSValue[1];
    _CSSValue.prototype = $desc;
    _CSSValue.$__fields__ = [];
    function _ClientRect() {
      this.$deferredAction();
    }
    _ClientRect.builtin$cls = "_ClientRect";
    if (!("name" in _ClientRect))
      _ClientRect.name = "_ClientRect";
    $desc = $collectedClasses$._ClientRect[1];
    _ClientRect.prototype = $desc;
    _ClientRect.$__fields__ = [];
    _ClientRect.prototype.get$height = function(receiver) {
      return receiver.height;
    };
    _ClientRect.prototype.get$left = function(receiver) {
      return receiver.left;
    };
    _ClientRect.prototype.get$top = function(receiver) {
      return receiver.top;
    };
    _ClientRect.prototype.get$width = function(receiver) {
      return receiver.width;
    };
    function _ClientRectList() {
      this.$deferredAction();
    }
    _ClientRectList.builtin$cls = "_ClientRectList";
    if (!("name" in _ClientRectList))
      _ClientRectList.name = "_ClientRectList";
    $desc = $collectedClasses$._ClientRectList[1];
    _ClientRectList.prototype = $desc;
    _ClientRectList.$__fields__ = [];
    function Interceptor_ListMixin8() {
      this.$deferredAction();
    }
    Interceptor_ListMixin8.builtin$cls = "Interceptor_ListMixin8";
    if (!("name" in Interceptor_ListMixin8))
      Interceptor_ListMixin8.name = "Interceptor_ListMixin8";
    $desc = $collectedClasses$.Interceptor_ListMixin8[1];
    Interceptor_ListMixin8.prototype = $desc;
    Interceptor_ListMixin8.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin8() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin8.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin8";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin8))
      Interceptor_ListMixin_ImmutableListMixin8.name = "Interceptor_ListMixin_ImmutableListMixin8";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin8[1];
    Interceptor_ListMixin_ImmutableListMixin8.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin8.$__fields__ = [];
    function _CssRuleList() {
      this.$deferredAction();
    }
    _CssRuleList.builtin$cls = "_CssRuleList";
    if (!("name" in _CssRuleList))
      _CssRuleList.name = "_CssRuleList";
    $desc = $collectedClasses$._CssRuleList[1];
    _CssRuleList.prototype = $desc;
    _CssRuleList.$__fields__ = [];
    function Interceptor_ListMixin9() {
      this.$deferredAction();
    }
    Interceptor_ListMixin9.builtin$cls = "Interceptor_ListMixin9";
    if (!("name" in Interceptor_ListMixin9))
      Interceptor_ListMixin9.name = "Interceptor_ListMixin9";
    $desc = $collectedClasses$.Interceptor_ListMixin9[1];
    Interceptor_ListMixin9.prototype = $desc;
    Interceptor_ListMixin9.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin9() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin9.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin9";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin9))
      Interceptor_ListMixin_ImmutableListMixin9.name = "Interceptor_ListMixin_ImmutableListMixin9";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin9[1];
    Interceptor_ListMixin_ImmutableListMixin9.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin9.$__fields__ = [];
    function _CssValueList() {
      this.$deferredAction();
    }
    _CssValueList.builtin$cls = "_CssValueList";
    if (!("name" in _CssValueList))
      _CssValueList.name = "_CssValueList";
    $desc = $collectedClasses$._CssValueList[1];
    _CssValueList.prototype = $desc;
    _CssValueList.$__fields__ = [];
    function _CSSValue_ListMixin() {
      this.$deferredAction();
    }
    _CSSValue_ListMixin.builtin$cls = "_CSSValue_ListMixin";
    if (!("name" in _CSSValue_ListMixin))
      _CSSValue_ListMixin.name = "_CSSValue_ListMixin";
    $desc = $collectedClasses$._CSSValue_ListMixin[1];
    _CSSValue_ListMixin.prototype = $desc;
    _CSSValue_ListMixin.$__fields__ = [];
    function _CSSValue_ListMixin_ImmutableListMixin() {
      this.$deferredAction();
    }
    _CSSValue_ListMixin_ImmutableListMixin.builtin$cls = "_CSSValue_ListMixin_ImmutableListMixin";
    if (!("name" in _CSSValue_ListMixin_ImmutableListMixin))
      _CSSValue_ListMixin_ImmutableListMixin.name = "_CSSValue_ListMixin_ImmutableListMixin";
    $desc = $collectedClasses$._CSSValue_ListMixin_ImmutableListMixin[1];
    _CSSValue_ListMixin_ImmutableListMixin.prototype = $desc;
    _CSSValue_ListMixin_ImmutableListMixin.$__fields__ = [];
    function _DocumentType() {
      this.$deferredAction();
    }
    _DocumentType.builtin$cls = "_DocumentType";
    if (!("name" in _DocumentType))
      _DocumentType.name = "_DocumentType";
    $desc = $collectedClasses$._DocumentType[1];
    _DocumentType.prototype = $desc;
    _DocumentType.$__fields__ = [];
    function _DomRect() {
      this.$deferredAction();
    }
    _DomRect.builtin$cls = "_DomRect";
    if (!("name" in _DomRect))
      _DomRect.name = "_DomRect";
    $desc = $collectedClasses$._DomRect[1];
    _DomRect.prototype = $desc;
    _DomRect.$__fields__ = [];
    function _GamepadList() {
      this.$deferredAction();
    }
    _GamepadList.builtin$cls = "_GamepadList";
    if (!("name" in _GamepadList))
      _GamepadList.name = "_GamepadList";
    $desc = $collectedClasses$._GamepadList[1];
    _GamepadList.prototype = $desc;
    _GamepadList.$__fields__ = [];
    function Interceptor_ListMixin10() {
      this.$deferredAction();
    }
    Interceptor_ListMixin10.builtin$cls = "Interceptor_ListMixin10";
    if (!("name" in Interceptor_ListMixin10))
      Interceptor_ListMixin10.name = "Interceptor_ListMixin10";
    $desc = $collectedClasses$.Interceptor_ListMixin10[1];
    Interceptor_ListMixin10.prototype = $desc;
    Interceptor_ListMixin10.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin10() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin10.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin10";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin10))
      Interceptor_ListMixin_ImmutableListMixin10.name = "Interceptor_ListMixin_ImmutableListMixin10";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin10[1];
    Interceptor_ListMixin_ImmutableListMixin10.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin10.$__fields__ = [];
    function _HTMLFrameSetElement() {
      this.$deferredAction();
    }
    _HTMLFrameSetElement.builtin$cls = "_HTMLFrameSetElement";
    if (!("name" in _HTMLFrameSetElement))
      _HTMLFrameSetElement.name = "_HTMLFrameSetElement";
    $desc = $collectedClasses$._HTMLFrameSetElement[1];
    _HTMLFrameSetElement.prototype = $desc;
    _HTMLFrameSetElement.$__fields__ = [];
    function _NamedNodeMap() {
      this.$deferredAction();
    }
    _NamedNodeMap.builtin$cls = "_NamedNodeMap";
    if (!("name" in _NamedNodeMap))
      _NamedNodeMap.name = "_NamedNodeMap";
    $desc = $collectedClasses$._NamedNodeMap[1];
    _NamedNodeMap.prototype = $desc;
    _NamedNodeMap.$__fields__ = [];
    function Interceptor_ListMixin11() {
      this.$deferredAction();
    }
    Interceptor_ListMixin11.builtin$cls = "Interceptor_ListMixin11";
    if (!("name" in Interceptor_ListMixin11))
      Interceptor_ListMixin11.name = "Interceptor_ListMixin11";
    $desc = $collectedClasses$.Interceptor_ListMixin11[1];
    Interceptor_ListMixin11.prototype = $desc;
    Interceptor_ListMixin11.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin11() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin11.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin11";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin11))
      Interceptor_ListMixin_ImmutableListMixin11.name = "Interceptor_ListMixin_ImmutableListMixin11";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin11[1];
    Interceptor_ListMixin_ImmutableListMixin11.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin11.$__fields__ = [];
    function _ServiceWorker() {
      this.$deferredAction();
    }
    _ServiceWorker.builtin$cls = "_ServiceWorker";
    if (!("name" in _ServiceWorker))
      _ServiceWorker.name = "_ServiceWorker";
    $desc = $collectedClasses$._ServiceWorker[1];
    _ServiceWorker.prototype = $desc;
    _ServiceWorker.$__fields__ = [];
    function _SpeechRecognitionResultList() {
      this.$deferredAction();
    }
    _SpeechRecognitionResultList.builtin$cls = "_SpeechRecognitionResultList";
    if (!("name" in _SpeechRecognitionResultList))
      _SpeechRecognitionResultList.name = "_SpeechRecognitionResultList";
    $desc = $collectedClasses$._SpeechRecognitionResultList[1];
    _SpeechRecognitionResultList.prototype = $desc;
    _SpeechRecognitionResultList.$__fields__ = [];
    function Interceptor_ListMixin12() {
      this.$deferredAction();
    }
    Interceptor_ListMixin12.builtin$cls = "Interceptor_ListMixin12";
    if (!("name" in Interceptor_ListMixin12))
      Interceptor_ListMixin12.name = "Interceptor_ListMixin12";
    $desc = $collectedClasses$.Interceptor_ListMixin12[1];
    Interceptor_ListMixin12.prototype = $desc;
    Interceptor_ListMixin12.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin12() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin12.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin12";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin12))
      Interceptor_ListMixin_ImmutableListMixin12.name = "Interceptor_ListMixin_ImmutableListMixin12";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin12[1];
    Interceptor_ListMixin_ImmutableListMixin12.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin12.$__fields__ = [];
    function _StyleSheetList() {
      this.$deferredAction();
    }
    _StyleSheetList.builtin$cls = "_StyleSheetList";
    if (!("name" in _StyleSheetList))
      _StyleSheetList.name = "_StyleSheetList";
    $desc = $collectedClasses$._StyleSheetList[1];
    _StyleSheetList.prototype = $desc;
    _StyleSheetList.$__fields__ = [];
    function Interceptor_ListMixin13() {
      this.$deferredAction();
    }
    Interceptor_ListMixin13.builtin$cls = "Interceptor_ListMixin13";
    if (!("name" in Interceptor_ListMixin13))
      Interceptor_ListMixin13.name = "Interceptor_ListMixin13";
    $desc = $collectedClasses$.Interceptor_ListMixin13[1];
    Interceptor_ListMixin13.prototype = $desc;
    Interceptor_ListMixin13.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin13() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin13.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin13";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin13))
      Interceptor_ListMixin_ImmutableListMixin13.name = "Interceptor_ListMixin_ImmutableListMixin13";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin13[1];
    Interceptor_ListMixin_ImmutableListMixin13.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin13.$__fields__ = [];
    function _WorkerLocation() {
      this.$deferredAction();
    }
    _WorkerLocation.builtin$cls = "_WorkerLocation";
    if (!("name" in _WorkerLocation))
      _WorkerLocation.name = "_WorkerLocation";
    $desc = $collectedClasses$._WorkerLocation[1];
    _WorkerLocation.prototype = $desc;
    _WorkerLocation.$__fields__ = [];
    function _WorkerNavigator() {
      this.$deferredAction();
    }
    _WorkerNavigator.builtin$cls = "_WorkerNavigator";
    if (!("name" in _WorkerNavigator))
      _WorkerNavigator.name = "_WorkerNavigator";
    $desc = $collectedClasses$._WorkerNavigator[1];
    _WorkerNavigator.prototype = $desc;
    _WorkerNavigator.$__fields__ = [];
    function _AttributeMap() {
      this.$deferredAction();
    }
    _AttributeMap.builtin$cls = "_AttributeMap";
    if (!("name" in _AttributeMap))
      _AttributeMap.name = "_AttributeMap";
    $desc = $collectedClasses$._AttributeMap[1];
    _AttributeMap.prototype = $desc;
    _AttributeMap.$__fields__ = [];
    function _ElementAttributeMap(_element) {
      this._element = _element;
      this.$deferredAction();
    }
    _ElementAttributeMap.builtin$cls = "_ElementAttributeMap";
    if (!("name" in _ElementAttributeMap))
      _ElementAttributeMap.name = "_ElementAttributeMap";
    $desc = $collectedClasses$._ElementAttributeMap[1];
    _ElementAttributeMap.prototype = $desc;
    _ElementAttributeMap.$__fields__ = ["_element"];
    function _EventStream(_html$_target, _eventType, _useCapture) {
      this._html$_target = _html$_target;
      this._eventType = _eventType;
      this._useCapture = _useCapture;
      this.$deferredAction();
    }
    _EventStream.builtin$cls = "_EventStream";
    if (!("name" in _EventStream))
      _EventStream.name = "_EventStream";
    $desc = $collectedClasses$._EventStream[1];
    _EventStream.prototype = $desc;
    _EventStream.$__fields__ = ["_html$_target", "_eventType", "_useCapture"];
    function _EventStreamSubscription(_pauseCount, _html$_target, _eventType, _onData, _useCapture) {
      this._pauseCount = _pauseCount;
      this._html$_target = _html$_target;
      this._eventType = _eventType;
      this._onData = _onData;
      this._useCapture = _useCapture;
      this.$deferredAction();
    }
    _EventStreamSubscription.builtin$cls = "_EventStreamSubscription";
    if (!("name" in _EventStreamSubscription))
      _EventStreamSubscription.name = "_EventStreamSubscription";
    $desc = $collectedClasses$._EventStreamSubscription[1];
    _EventStreamSubscription.prototype = $desc;
    _EventStreamSubscription.$__fields__ = ["_pauseCount", "_html$_target", "_eventType", "_onData", "_useCapture"];
    function ImmutableListMixin() {
      this.$deferredAction();
    }
    ImmutableListMixin.builtin$cls = "ImmutableListMixin";
    if (!("name" in ImmutableListMixin))
      ImmutableListMixin.name = "ImmutableListMixin";
    $desc = $collectedClasses$.ImmutableListMixin[1];
    ImmutableListMixin.prototype = $desc;
    ImmutableListMixin.$__fields__ = [];
    function FixedSizeListIterator(_array, _length, _position, _html$_current) {
      this._array = _array;
      this._length = _length;
      this._position = _position;
      this._html$_current = _html$_current;
      this.$deferredAction();
    }
    FixedSizeListIterator.builtin$cls = "FixedSizeListIterator";
    if (!("name" in FixedSizeListIterator))
      FixedSizeListIterator.name = "FixedSizeListIterator";
    $desc = $collectedClasses$.FixedSizeListIterator[1];
    FixedSizeListIterator.prototype = $desc;
    FixedSizeListIterator.$__fields__ = ["_array", "_length", "_position", "_html$_current"];
    function _DOMWindowCrossFrame(_window) {
      this._window = _window;
      this.$deferredAction();
    }
    _DOMWindowCrossFrame.builtin$cls = "_DOMWindowCrossFrame";
    if (!("name" in _DOMWindowCrossFrame))
      _DOMWindowCrossFrame.name = "_DOMWindowCrossFrame";
    $desc = $collectedClasses$._DOMWindowCrossFrame[1];
    _DOMWindowCrossFrame.prototype = $desc;
    _DOMWindowCrossFrame.$__fields__ = ["_window"];
    function _LocationCrossFrame(_location) {
      this._location = _location;
      this.$deferredAction();
    }
    _LocationCrossFrame.builtin$cls = "_LocationCrossFrame";
    if (!("name" in _LocationCrossFrame))
      _LocationCrossFrame.name = "_LocationCrossFrame";
    $desc = $collectedClasses$._LocationCrossFrame[1];
    _LocationCrossFrame.prototype = $desc;
    _LocationCrossFrame.$__fields__ = ["_location"];
    function Cursor() {
      this.$deferredAction();
    }
    Cursor.builtin$cls = "Cursor";
    if (!("name" in Cursor))
      Cursor.name = "Cursor";
    $desc = $collectedClasses$.Cursor[1];
    Cursor.prototype = $desc;
    Cursor.$__fields__ = [];
    Cursor.prototype.get$key = function(receiver) {
      return receiver.key;
    };
    function CursorWithValue() {
      this.$deferredAction();
    }
    CursorWithValue.builtin$cls = "CursorWithValue";
    if (!("name" in CursorWithValue))
      CursorWithValue.name = "CursorWithValue";
    $desc = $collectedClasses$.CursorWithValue[1];
    CursorWithValue.prototype = $desc;
    CursorWithValue.$__fields__ = [];
    function Database() {
      this.$deferredAction();
    }
    Database.builtin$cls = "Database";
    if (!("name" in Database))
      Database.name = "Database";
    $desc = $collectedClasses$.Database[1];
    Database.prototype = $desc;
    Database.$__fields__ = [];
    function _completeRequest_closure(_captured_request_0, _indexed_db$_captured_completer_1) {
      this._captured_request_0 = _captured_request_0;
      this._indexed_db$_captured_completer_1 = _indexed_db$_captured_completer_1;
      this.$deferredAction();
    }
    _completeRequest_closure.builtin$cls = "_completeRequest_closure";
    if (!("name" in _completeRequest_closure))
      _completeRequest_closure.name = "_completeRequest_closure";
    $desc = $collectedClasses$._completeRequest_closure[1];
    _completeRequest_closure.prototype = $desc;
    _completeRequest_closure.$__fields__ = ["_captured_request_0", "_indexed_db$_captured_completer_1"];
    function Index() {
      this.$deferredAction();
    }
    Index.builtin$cls = "Index";
    if (!("name" in Index))
      Index.name = "Index";
    $desc = $collectedClasses$.Index[1];
    Index.prototype = $desc;
    Index.$__fields__ = [];
    function KeyRange() {
      this.$deferredAction();
    }
    KeyRange.builtin$cls = "KeyRange";
    if (!("name" in KeyRange))
      KeyRange.name = "KeyRange";
    $desc = $collectedClasses$.KeyRange[1];
    KeyRange.prototype = $desc;
    KeyRange.$__fields__ = [];
    function ObjectStore() {
      this.$deferredAction();
    }
    ObjectStore.builtin$cls = "ObjectStore";
    if (!("name" in ObjectStore))
      ObjectStore.name = "ObjectStore";
    $desc = $collectedClasses$.ObjectStore[1];
    ObjectStore.prototype = $desc;
    ObjectStore.$__fields__ = [];
    function Request() {
      this.$deferredAction();
    }
    Request.builtin$cls = "Request";
    if (!("name" in Request))
      Request.name = "Request";
    $desc = $collectedClasses$.Request[1];
    Request.prototype = $desc;
    Request.$__fields__ = [];
    Request.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function Transaction() {
      this.$deferredAction();
    }
    Transaction.builtin$cls = "Transaction";
    if (!("name" in Transaction))
      Transaction.name = "Transaction";
    $desc = $collectedClasses$.Transaction[1];
    Transaction.prototype = $desc;
    Transaction.$__fields__ = [];
    Transaction.prototype.get$error = function(receiver) {
      return receiver.error;
    };
    function AElement() {
      this.$deferredAction();
    }
    AElement.builtin$cls = "AElement";
    if (!("name" in AElement))
      AElement.name = "AElement";
    $desc = $collectedClasses$.AElement[1];
    AElement.prototype = $desc;
    AElement.$__fields__ = [];
    AElement.prototype.get$target = function(receiver) {
      return receiver.target;
    };
    function AltGlyphElement() {
      this.$deferredAction();
    }
    AltGlyphElement.builtin$cls = "AltGlyphElement";
    if (!("name" in AltGlyphElement))
      AltGlyphElement.name = "AltGlyphElement";
    $desc = $collectedClasses$.AltGlyphElement[1];
    AltGlyphElement.prototype = $desc;
    AltGlyphElement.$__fields__ = [];
    function Angle() {
      this.$deferredAction();
    }
    Angle.builtin$cls = "Angle";
    if (!("name" in Angle))
      Angle.name = "Angle";
    $desc = $collectedClasses$.Angle[1];
    Angle.prototype = $desc;
    Angle.$__fields__ = [];
    Angle.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function AnimationElement() {
      this.$deferredAction();
    }
    AnimationElement.builtin$cls = "AnimationElement";
    if (!("name" in AnimationElement))
      AnimationElement.name = "AnimationElement";
    $desc = $collectedClasses$.AnimationElement[1];
    AnimationElement.prototype = $desc;
    AnimationElement.$__fields__ = [];
    function FEBlendElement() {
      this.$deferredAction();
    }
    FEBlendElement.builtin$cls = "FEBlendElement";
    if (!("name" in FEBlendElement))
      FEBlendElement.name = "FEBlendElement";
    $desc = $collectedClasses$.FEBlendElement[1];
    FEBlendElement.prototype = $desc;
    FEBlendElement.$__fields__ = [];
    FEBlendElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEColorMatrixElement() {
      this.$deferredAction();
    }
    FEColorMatrixElement.builtin$cls = "FEColorMatrixElement";
    if (!("name" in FEColorMatrixElement))
      FEColorMatrixElement.name = "FEColorMatrixElement";
    $desc = $collectedClasses$.FEColorMatrixElement[1];
    FEColorMatrixElement.prototype = $desc;
    FEColorMatrixElement.$__fields__ = [];
    FEColorMatrixElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    FEColorMatrixElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEComponentTransferElement() {
      this.$deferredAction();
    }
    FEComponentTransferElement.builtin$cls = "FEComponentTransferElement";
    if (!("name" in FEComponentTransferElement))
      FEComponentTransferElement.name = "FEComponentTransferElement";
    $desc = $collectedClasses$.FEComponentTransferElement[1];
    FEComponentTransferElement.prototype = $desc;
    FEComponentTransferElement.$__fields__ = [];
    FEComponentTransferElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FECompositeElement() {
      this.$deferredAction();
    }
    FECompositeElement.builtin$cls = "FECompositeElement";
    if (!("name" in FECompositeElement))
      FECompositeElement.name = "FECompositeElement";
    $desc = $collectedClasses$.FECompositeElement[1];
    FECompositeElement.prototype = $desc;
    FECompositeElement.$__fields__ = [];
    FECompositeElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEConvolveMatrixElement() {
      this.$deferredAction();
    }
    FEConvolveMatrixElement.builtin$cls = "FEConvolveMatrixElement";
    if (!("name" in FEConvolveMatrixElement))
      FEConvolveMatrixElement.name = "FEConvolveMatrixElement";
    $desc = $collectedClasses$.FEConvolveMatrixElement[1];
    FEConvolveMatrixElement.prototype = $desc;
    FEConvolveMatrixElement.$__fields__ = [];
    FEConvolveMatrixElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEDiffuseLightingElement() {
      this.$deferredAction();
    }
    FEDiffuseLightingElement.builtin$cls = "FEDiffuseLightingElement";
    if (!("name" in FEDiffuseLightingElement))
      FEDiffuseLightingElement.name = "FEDiffuseLightingElement";
    $desc = $collectedClasses$.FEDiffuseLightingElement[1];
    FEDiffuseLightingElement.prototype = $desc;
    FEDiffuseLightingElement.$__fields__ = [];
    FEDiffuseLightingElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEDisplacementMapElement() {
      this.$deferredAction();
    }
    FEDisplacementMapElement.builtin$cls = "FEDisplacementMapElement";
    if (!("name" in FEDisplacementMapElement))
      FEDisplacementMapElement.name = "FEDisplacementMapElement";
    $desc = $collectedClasses$.FEDisplacementMapElement[1];
    FEDisplacementMapElement.prototype = $desc;
    FEDisplacementMapElement.$__fields__ = [];
    FEDisplacementMapElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEFloodElement() {
      this.$deferredAction();
    }
    FEFloodElement.builtin$cls = "FEFloodElement";
    if (!("name" in FEFloodElement))
      FEFloodElement.name = "FEFloodElement";
    $desc = $collectedClasses$.FEFloodElement[1];
    FEFloodElement.prototype = $desc;
    FEFloodElement.$__fields__ = [];
    FEFloodElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEGaussianBlurElement() {
      this.$deferredAction();
    }
    FEGaussianBlurElement.builtin$cls = "FEGaussianBlurElement";
    if (!("name" in FEGaussianBlurElement))
      FEGaussianBlurElement.name = "FEGaussianBlurElement";
    $desc = $collectedClasses$.FEGaussianBlurElement[1];
    FEGaussianBlurElement.prototype = $desc;
    FEGaussianBlurElement.$__fields__ = [];
    FEGaussianBlurElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEImageElement() {
      this.$deferredAction();
    }
    FEImageElement.builtin$cls = "FEImageElement";
    if (!("name" in FEImageElement))
      FEImageElement.name = "FEImageElement";
    $desc = $collectedClasses$.FEImageElement[1];
    FEImageElement.prototype = $desc;
    FEImageElement.$__fields__ = [];
    FEImageElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEMergeElement() {
      this.$deferredAction();
    }
    FEMergeElement.builtin$cls = "FEMergeElement";
    if (!("name" in FEMergeElement))
      FEMergeElement.name = "FEMergeElement";
    $desc = $collectedClasses$.FEMergeElement[1];
    FEMergeElement.prototype = $desc;
    FEMergeElement.$__fields__ = [];
    FEMergeElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEMorphologyElement() {
      this.$deferredAction();
    }
    FEMorphologyElement.builtin$cls = "FEMorphologyElement";
    if (!("name" in FEMorphologyElement))
      FEMorphologyElement.name = "FEMorphologyElement";
    $desc = $collectedClasses$.FEMorphologyElement[1];
    FEMorphologyElement.prototype = $desc;
    FEMorphologyElement.$__fields__ = [];
    FEMorphologyElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FEOffsetElement() {
      this.$deferredAction();
    }
    FEOffsetElement.builtin$cls = "FEOffsetElement";
    if (!("name" in FEOffsetElement))
      FEOffsetElement.name = "FEOffsetElement";
    $desc = $collectedClasses$.FEOffsetElement[1];
    FEOffsetElement.prototype = $desc;
    FEOffsetElement.$__fields__ = [];
    FEOffsetElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FESpecularLightingElement() {
      this.$deferredAction();
    }
    FESpecularLightingElement.builtin$cls = "FESpecularLightingElement";
    if (!("name" in FESpecularLightingElement))
      FESpecularLightingElement.name = "FESpecularLightingElement";
    $desc = $collectedClasses$.FESpecularLightingElement[1];
    FESpecularLightingElement.prototype = $desc;
    FESpecularLightingElement.$__fields__ = [];
    FESpecularLightingElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FETileElement() {
      this.$deferredAction();
    }
    FETileElement.builtin$cls = "FETileElement";
    if (!("name" in FETileElement))
      FETileElement.name = "FETileElement";
    $desc = $collectedClasses$.FETileElement[1];
    FETileElement.prototype = $desc;
    FETileElement.$__fields__ = [];
    FETileElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FETurbulenceElement() {
      this.$deferredAction();
    }
    FETurbulenceElement.builtin$cls = "FETurbulenceElement";
    if (!("name" in FETurbulenceElement))
      FETurbulenceElement.name = "FETurbulenceElement";
    $desc = $collectedClasses$.FETurbulenceElement[1];
    FETurbulenceElement.prototype = $desc;
    FETurbulenceElement.$__fields__ = [];
    FETurbulenceElement.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    FETurbulenceElement.prototype.get$result = function(receiver) {
      return receiver.result;
    };
    function FilterElement() {
      this.$deferredAction();
    }
    FilterElement.builtin$cls = "FilterElement";
    if (!("name" in FilterElement))
      FilterElement.name = "FilterElement";
    $desc = $collectedClasses$.FilterElement[1];
    FilterElement.prototype = $desc;
    FilterElement.$__fields__ = [];
    function GraphicsElement() {
      this.$deferredAction();
    }
    GraphicsElement.builtin$cls = "GraphicsElement";
    if (!("name" in GraphicsElement))
      GraphicsElement.name = "GraphicsElement";
    $desc = $collectedClasses$.GraphicsElement[1];
    GraphicsElement.prototype = $desc;
    GraphicsElement.$__fields__ = [];
    function ImageElement0() {
      this.$deferredAction();
    }
    ImageElement0.builtin$cls = "ImageElement0";
    if (!("name" in ImageElement0))
      ImageElement0.name = "ImageElement0";
    $desc = $collectedClasses$.ImageElement0[1];
    ImageElement0.prototype = $desc;
    ImageElement0.$__fields__ = [];
    function Length() {
      this.$deferredAction();
    }
    Length.builtin$cls = "Length";
    if (!("name" in Length))
      Length.name = "Length";
    $desc = $collectedClasses$.Length[1];
    Length.prototype = $desc;
    Length.$__fields__ = [];
    Length.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function LengthList() {
      this.$deferredAction();
    }
    LengthList.builtin$cls = "LengthList";
    if (!("name" in LengthList))
      LengthList.name = "LengthList";
    $desc = $collectedClasses$.LengthList[1];
    LengthList.prototype = $desc;
    LengthList.$__fields__ = [];
    function Interceptor_ListMixin14() {
      this.$deferredAction();
    }
    Interceptor_ListMixin14.builtin$cls = "Interceptor_ListMixin14";
    if (!("name" in Interceptor_ListMixin14))
      Interceptor_ListMixin14.name = "Interceptor_ListMixin14";
    $desc = $collectedClasses$.Interceptor_ListMixin14[1];
    Interceptor_ListMixin14.prototype = $desc;
    Interceptor_ListMixin14.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin14() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin14.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin14";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin14))
      Interceptor_ListMixin_ImmutableListMixin14.name = "Interceptor_ListMixin_ImmutableListMixin14";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin14[1];
    Interceptor_ListMixin_ImmutableListMixin14.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin14.$__fields__ = [];
    function MarkerElement() {
      this.$deferredAction();
    }
    MarkerElement.builtin$cls = "MarkerElement";
    if (!("name" in MarkerElement))
      MarkerElement.name = "MarkerElement";
    $desc = $collectedClasses$.MarkerElement[1];
    MarkerElement.prototype = $desc;
    MarkerElement.$__fields__ = [];
    function MaskElement() {
      this.$deferredAction();
    }
    MaskElement.builtin$cls = "MaskElement";
    if (!("name" in MaskElement))
      MaskElement.name = "MaskElement";
    $desc = $collectedClasses$.MaskElement[1];
    MaskElement.prototype = $desc;
    MaskElement.$__fields__ = [];
    function Number() {
      this.$deferredAction();
    }
    Number.builtin$cls = "Number";
    if (!("name" in Number))
      Number.name = "Number";
    $desc = $collectedClasses$.Number[1];
    Number.prototype = $desc;
    Number.$__fields__ = [];
    Number.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function NumberList() {
      this.$deferredAction();
    }
    NumberList.builtin$cls = "NumberList";
    if (!("name" in NumberList))
      NumberList.name = "NumberList";
    $desc = $collectedClasses$.NumberList[1];
    NumberList.prototype = $desc;
    NumberList.$__fields__ = [];
    function Interceptor_ListMixin15() {
      this.$deferredAction();
    }
    Interceptor_ListMixin15.builtin$cls = "Interceptor_ListMixin15";
    if (!("name" in Interceptor_ListMixin15))
      Interceptor_ListMixin15.name = "Interceptor_ListMixin15";
    $desc = $collectedClasses$.Interceptor_ListMixin15[1];
    Interceptor_ListMixin15.prototype = $desc;
    Interceptor_ListMixin15.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin15() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin15.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin15";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin15))
      Interceptor_ListMixin_ImmutableListMixin15.name = "Interceptor_ListMixin_ImmutableListMixin15";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin15[1];
    Interceptor_ListMixin_ImmutableListMixin15.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin15.$__fields__ = [];
    function PathSeg() {
      this.$deferredAction();
    }
    PathSeg.builtin$cls = "PathSeg";
    if (!("name" in PathSeg))
      PathSeg.name = "PathSeg";
    $desc = $collectedClasses$.PathSeg[1];
    PathSeg.prototype = $desc;
    PathSeg.$__fields__ = [];
    function PathSegList() {
      this.$deferredAction();
    }
    PathSegList.builtin$cls = "PathSegList";
    if (!("name" in PathSegList))
      PathSegList.name = "PathSegList";
    $desc = $collectedClasses$.PathSegList[1];
    PathSegList.prototype = $desc;
    PathSegList.$__fields__ = [];
    function Interceptor_ListMixin16() {
      this.$deferredAction();
    }
    Interceptor_ListMixin16.builtin$cls = "Interceptor_ListMixin16";
    if (!("name" in Interceptor_ListMixin16))
      Interceptor_ListMixin16.name = "Interceptor_ListMixin16";
    $desc = $collectedClasses$.Interceptor_ListMixin16[1];
    Interceptor_ListMixin16.prototype = $desc;
    Interceptor_ListMixin16.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin16() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin16.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin16";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin16))
      Interceptor_ListMixin_ImmutableListMixin16.name = "Interceptor_ListMixin_ImmutableListMixin16";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin16[1];
    Interceptor_ListMixin_ImmutableListMixin16.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin16.$__fields__ = [];
    function PatternElement() {
      this.$deferredAction();
    }
    PatternElement.builtin$cls = "PatternElement";
    if (!("name" in PatternElement))
      PatternElement.name = "PatternElement";
    $desc = $collectedClasses$.PatternElement[1];
    PatternElement.prototype = $desc;
    PatternElement.$__fields__ = [];
    function PointList() {
      this.$deferredAction();
    }
    PointList.builtin$cls = "PointList";
    if (!("name" in PointList))
      PointList.name = "PointList";
    $desc = $collectedClasses$.PointList[1];
    PointList.prototype = $desc;
    PointList.$__fields__ = [];
    PointList.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function ScriptElement0() {
      this.$deferredAction();
    }
    ScriptElement0.builtin$cls = "ScriptElement0";
    if (!("name" in ScriptElement0))
      ScriptElement0.name = "ScriptElement0";
    $desc = $collectedClasses$.ScriptElement0[1];
    ScriptElement0.prototype = $desc;
    ScriptElement0.$__fields__ = [];
    ScriptElement0.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function StringList() {
      this.$deferredAction();
    }
    StringList.builtin$cls = "StringList";
    if (!("name" in StringList))
      StringList.name = "StringList";
    $desc = $collectedClasses$.StringList[1];
    StringList.prototype = $desc;
    StringList.$__fields__ = [];
    function Interceptor_ListMixin17() {
      this.$deferredAction();
    }
    Interceptor_ListMixin17.builtin$cls = "Interceptor_ListMixin17";
    if (!("name" in Interceptor_ListMixin17))
      Interceptor_ListMixin17.name = "Interceptor_ListMixin17";
    $desc = $collectedClasses$.Interceptor_ListMixin17[1];
    Interceptor_ListMixin17.prototype = $desc;
    Interceptor_ListMixin17.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin17() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin17.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin17";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin17))
      Interceptor_ListMixin_ImmutableListMixin17.name = "Interceptor_ListMixin_ImmutableListMixin17";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin17[1];
    Interceptor_ListMixin_ImmutableListMixin17.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin17.$__fields__ = [];
    function StyleElement0() {
      this.$deferredAction();
    }
    StyleElement0.builtin$cls = "StyleElement0";
    if (!("name" in StyleElement0))
      StyleElement0.name = "StyleElement0";
    $desc = $collectedClasses$.StyleElement0[1];
    StyleElement0.prototype = $desc;
    StyleElement0.$__fields__ = [];
    StyleElement0.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function SvgElement() {
      this.$deferredAction();
    }
    SvgElement.builtin$cls = "SvgElement";
    if (!("name" in SvgElement))
      SvgElement.name = "SvgElement";
    $desc = $collectedClasses$.SvgElement[1];
    SvgElement.prototype = $desc;
    SvgElement.$__fields__ = [];
    function SvgSvgElement() {
      this.$deferredAction();
    }
    SvgSvgElement.builtin$cls = "SvgSvgElement";
    if (!("name" in SvgSvgElement))
      SvgSvgElement.name = "SvgSvgElement";
    $desc = $collectedClasses$.SvgSvgElement[1];
    SvgSvgElement.prototype = $desc;
    SvgSvgElement.$__fields__ = [];
    SvgSvgElement.prototype.get$currentView = function(receiver) {
      return receiver.currentView;
    };
    function SymbolElement() {
      this.$deferredAction();
    }
    SymbolElement.builtin$cls = "SymbolElement";
    if (!("name" in SymbolElement))
      SymbolElement.name = "SymbolElement";
    $desc = $collectedClasses$.SymbolElement[1];
    SymbolElement.prototype = $desc;
    SymbolElement.$__fields__ = [];
    function TextContentElement() {
      this.$deferredAction();
    }
    TextContentElement.builtin$cls = "TextContentElement";
    if (!("name" in TextContentElement))
      TextContentElement.name = "TextContentElement";
    $desc = $collectedClasses$.TextContentElement[1];
    TextContentElement.prototype = $desc;
    TextContentElement.$__fields__ = [];
    function TextPathElement() {
      this.$deferredAction();
    }
    TextPathElement.builtin$cls = "TextPathElement";
    if (!("name" in TextPathElement))
      TextPathElement.name = "TextPathElement";
    $desc = $collectedClasses$.TextPathElement[1];
    TextPathElement.prototype = $desc;
    TextPathElement.$__fields__ = [];
    function TextPositioningElement() {
      this.$deferredAction();
    }
    TextPositioningElement.builtin$cls = "TextPositioningElement";
    if (!("name" in TextPositioningElement))
      TextPositioningElement.name = "TextPositioningElement";
    $desc = $collectedClasses$.TextPositioningElement[1];
    TextPositioningElement.prototype = $desc;
    TextPositioningElement.$__fields__ = [];
    function Transform() {
      this.$deferredAction();
    }
    Transform.builtin$cls = "Transform";
    if (!("name" in Transform))
      Transform.name = "Transform";
    $desc = $collectedClasses$.Transform[1];
    Transform.prototype = $desc;
    Transform.$__fields__ = [];
    Transform.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function TransformList() {
      this.$deferredAction();
    }
    TransformList.builtin$cls = "TransformList";
    if (!("name" in TransformList))
      TransformList.name = "TransformList";
    $desc = $collectedClasses$.TransformList[1];
    TransformList.prototype = $desc;
    TransformList.$__fields__ = [];
    function Interceptor_ListMixin18() {
      this.$deferredAction();
    }
    Interceptor_ListMixin18.builtin$cls = "Interceptor_ListMixin18";
    if (!("name" in Interceptor_ListMixin18))
      Interceptor_ListMixin18.name = "Interceptor_ListMixin18";
    $desc = $collectedClasses$.Interceptor_ListMixin18[1];
    Interceptor_ListMixin18.prototype = $desc;
    Interceptor_ListMixin18.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin18() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin18.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin18";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin18))
      Interceptor_ListMixin_ImmutableListMixin18.name = "Interceptor_ListMixin_ImmutableListMixin18";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin18[1];
    Interceptor_ListMixin_ImmutableListMixin18.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin18.$__fields__ = [];
    function UseElement() {
      this.$deferredAction();
    }
    UseElement.builtin$cls = "UseElement";
    if (!("name" in UseElement))
      UseElement.name = "UseElement";
    $desc = $collectedClasses$.UseElement[1];
    UseElement.prototype = $desc;
    UseElement.$__fields__ = [];
    function ViewElement() {
      this.$deferredAction();
    }
    ViewElement.builtin$cls = "ViewElement";
    if (!("name" in ViewElement))
      ViewElement.name = "ViewElement";
    $desc = $collectedClasses$.ViewElement[1];
    ViewElement.prototype = $desc;
    ViewElement.$__fields__ = [];
    function ViewSpec() {
      this.$deferredAction();
    }
    ViewSpec.builtin$cls = "ViewSpec";
    if (!("name" in ViewSpec))
      ViewSpec.name = "ViewSpec";
    $desc = $collectedClasses$.ViewSpec[1];
    ViewSpec.prototype = $desc;
    ViewSpec.$__fields__ = [];
    function _GradientElement() {
      this.$deferredAction();
    }
    _GradientElement.builtin$cls = "_GradientElement";
    if (!("name" in _GradientElement))
      _GradientElement.name = "_GradientElement";
    $desc = $collectedClasses$._GradientElement[1];
    _GradientElement.prototype = $desc;
    _GradientElement.$__fields__ = [];
    function _SVGCursorElement() {
      this.$deferredAction();
    }
    _SVGCursorElement.builtin$cls = "_SVGCursorElement";
    if (!("name" in _SVGCursorElement))
      _SVGCursorElement.name = "_SVGCursorElement";
    $desc = $collectedClasses$._SVGCursorElement[1];
    _SVGCursorElement.prototype = $desc;
    _SVGCursorElement.$__fields__ = [];
    function _SVGFEDropShadowElement() {
      this.$deferredAction();
    }
    _SVGFEDropShadowElement.builtin$cls = "_SVGFEDropShadowElement";
    if (!("name" in _SVGFEDropShadowElement))
      _SVGFEDropShadowElement.name = "_SVGFEDropShadowElement";
    $desc = $collectedClasses$._SVGFEDropShadowElement[1];
    _SVGFEDropShadowElement.prototype = $desc;
    _SVGFEDropShadowElement.$__fields__ = [];
    function _SVGGlyphRefElement() {
      this.$deferredAction();
    }
    _SVGGlyphRefElement.builtin$cls = "_SVGGlyphRefElement";
    if (!("name" in _SVGGlyphRefElement))
      _SVGGlyphRefElement.name = "_SVGGlyphRefElement";
    $desc = $collectedClasses$._SVGGlyphRefElement[1];
    _SVGGlyphRefElement.prototype = $desc;
    _SVGGlyphRefElement.$__fields__ = [];
    function _SVGMPathElement() {
      this.$deferredAction();
    }
    _SVGMPathElement.builtin$cls = "_SVGMPathElement";
    if (!("name" in _SVGMPathElement))
      _SVGMPathElement.name = "_SVGMPathElement";
    $desc = $collectedClasses$._SVGMPathElement[1];
    _SVGMPathElement.prototype = $desc;
    _SVGMPathElement.$__fields__ = [];
    function AudioBuffer() {
      this.$deferredAction();
    }
    AudioBuffer.builtin$cls = "AudioBuffer";
    if (!("name" in AudioBuffer))
      AudioBuffer.name = "AudioBuffer";
    $desc = $collectedClasses$.AudioBuffer[1];
    AudioBuffer.prototype = $desc;
    AudioBuffer.$__fields__ = [];
    AudioBuffer.prototype.get$length = function(receiver) {
      return receiver.length;
    };
    function AudioNode() {
      this.$deferredAction();
    }
    AudioNode.builtin$cls = "AudioNode";
    if (!("name" in AudioNode))
      AudioNode.name = "AudioNode";
    $desc = $collectedClasses$.AudioNode[1];
    AudioNode.prototype = $desc;
    AudioNode.$__fields__ = [];
    AudioNode.prototype.get$context = function(receiver) {
      return receiver.context;
    };
    function AudioParam() {
      this.$deferredAction();
    }
    AudioParam.builtin$cls = "AudioParam";
    if (!("name" in AudioParam))
      AudioParam.name = "AudioParam";
    $desc = $collectedClasses$.AudioParam[1];
    AudioParam.prototype = $desc;
    AudioParam.$__fields__ = [];
    AudioParam.prototype.get$value = function(receiver) {
      return receiver.value;
    };
    function AudioSourceNode() {
      this.$deferredAction();
    }
    AudioSourceNode.builtin$cls = "AudioSourceNode";
    if (!("name" in AudioSourceNode))
      AudioSourceNode.name = "AudioSourceNode";
    $desc = $collectedClasses$.AudioSourceNode[1];
    AudioSourceNode.prototype = $desc;
    AudioSourceNode.$__fields__ = [];
    function BiquadFilterNode() {
      this.$deferredAction();
    }
    BiquadFilterNode.builtin$cls = "BiquadFilterNode";
    if (!("name" in BiquadFilterNode))
      BiquadFilterNode.name = "BiquadFilterNode";
    $desc = $collectedClasses$.BiquadFilterNode[1];
    BiquadFilterNode.prototype = $desc;
    BiquadFilterNode.$__fields__ = [];
    BiquadFilterNode.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function MediaStreamAudioDestinationNode() {
      this.$deferredAction();
    }
    MediaStreamAudioDestinationNode.builtin$cls = "MediaStreamAudioDestinationNode";
    if (!("name" in MediaStreamAudioDestinationNode))
      MediaStreamAudioDestinationNode.name = "MediaStreamAudioDestinationNode";
    $desc = $collectedClasses$.MediaStreamAudioDestinationNode[1];
    MediaStreamAudioDestinationNode.prototype = $desc;
    MediaStreamAudioDestinationNode.$__fields__ = [];
    MediaStreamAudioDestinationNode.prototype.get$stream = function(receiver) {
      return receiver.stream;
    };
    function OscillatorNode() {
      this.$deferredAction();
    }
    OscillatorNode.builtin$cls = "OscillatorNode";
    if (!("name" in OscillatorNode))
      OscillatorNode.name = "OscillatorNode";
    $desc = $collectedClasses$.OscillatorNode[1];
    OscillatorNode.prototype = $desc;
    OscillatorNode.$__fields__ = [];
    OscillatorNode.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function ActiveInfo() {
      this.$deferredAction();
    }
    ActiveInfo.builtin$cls = "ActiveInfo";
    if (!("name" in ActiveInfo))
      ActiveInfo.name = "ActiveInfo";
    $desc = $collectedClasses$.ActiveInfo[1];
    ActiveInfo.prototype = $desc;
    ActiveInfo.$__fields__ = [];
    ActiveInfo.prototype.get$type = function(receiver) {
      return receiver.type;
    };
    function RenderingContext() {
      this.$deferredAction();
    }
    RenderingContext.builtin$cls = "RenderingContext";
    if (!("name" in RenderingContext))
      RenderingContext.name = "RenderingContext";
    $desc = $collectedClasses$.RenderingContext[1];
    RenderingContext.prototype = $desc;
    RenderingContext.$__fields__ = [];
    function SqlResultSetRowList() {
      this.$deferredAction();
    }
    SqlResultSetRowList.builtin$cls = "SqlResultSetRowList";
    if (!("name" in SqlResultSetRowList))
      SqlResultSetRowList.name = "SqlResultSetRowList";
    $desc = $collectedClasses$.SqlResultSetRowList[1];
    SqlResultSetRowList.prototype = $desc;
    SqlResultSetRowList.$__fields__ = [];
    function Interceptor_ListMixin19() {
      this.$deferredAction();
    }
    Interceptor_ListMixin19.builtin$cls = "Interceptor_ListMixin19";
    if (!("name" in Interceptor_ListMixin19))
      Interceptor_ListMixin19.name = "Interceptor_ListMixin19";
    $desc = $collectedClasses$.Interceptor_ListMixin19[1];
    Interceptor_ListMixin19.prototype = $desc;
    Interceptor_ListMixin19.$__fields__ = [];
    function Interceptor_ListMixin_ImmutableListMixin19() {
      this.$deferredAction();
    }
    Interceptor_ListMixin_ImmutableListMixin19.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin19";
    if (!("name" in Interceptor_ListMixin_ImmutableListMixin19))
      Interceptor_ListMixin_ImmutableListMixin19.name = "Interceptor_ListMixin_ImmutableListMixin19";
    $desc = $collectedClasses$.Interceptor_ListMixin_ImmutableListMixin19[1];
    Interceptor_ListMixin_ImmutableListMixin19.prototype = $desc;
    Interceptor_ListMixin_ImmutableListMixin19.$__fields__ = [];
    function Capability() {
      this.$deferredAction();
    }
    Capability.builtin$cls = "Capability";
    if (!("name" in Capability))
      Capability.name = "Capability";
    $desc = $collectedClasses$.Capability[1];
    Capability.prototype = $desc;
    Capability.$__fields__ = [];
    function JsObject(_jsObject) {
      this._jsObject = _jsObject;
      this.$deferredAction();
    }
    JsObject.builtin$cls = "JsObject";
    if (!("name" in JsObject))
      JsObject.name = "JsObject";
    $desc = $collectedClasses$.JsObject[1];
    JsObject.prototype = $desc;
    JsObject.$__fields__ = ["_jsObject"];
    function JsObject__convertDataTree__convert(_captured__convertedObjects_0) {
      this._captured__convertedObjects_0 = _captured__convertedObjects_0;
      this.$deferredAction();
    }
    JsObject__convertDataTree__convert.builtin$cls = "JsObject__convertDataTree__convert";
    if (!("name" in JsObject__convertDataTree__convert))
      JsObject__convertDataTree__convert.name = "JsObject__convertDataTree__convert";
    $desc = $collectedClasses$.JsObject__convertDataTree__convert[1];
    JsObject__convertDataTree__convert.prototype = $desc;
    JsObject__convertDataTree__convert.$__fields__ = ["_captured__convertedObjects_0"];
    function JsFunction(_jsObject) {
      this._jsObject = _jsObject;
      this.$deferredAction();
    }
    JsFunction.builtin$cls = "JsFunction";
    if (!("name" in JsFunction))
      JsFunction.name = "JsFunction";
    $desc = $collectedClasses$.JsFunction[1];
    JsFunction.prototype = $desc;
    JsFunction.$__fields__ = ["_jsObject"];
    function JsArray(_jsObject) {
      this._jsObject = _jsObject;
      this.$deferredAction();
    }
    JsArray.builtin$cls = "JsArray";
    if (!("name" in JsArray))
      JsArray.name = "JsArray";
    $desc = $collectedClasses$.JsArray[1];
    JsArray.prototype = $desc;
    JsArray.$__fields__ = ["_jsObject"];
    function JsObject_ListMixin() {
      this.$deferredAction();
    }
    JsObject_ListMixin.builtin$cls = "JsObject_ListMixin";
    if (!("name" in JsObject_ListMixin))
      JsObject_ListMixin.name = "JsObject_ListMixin";
    $desc = $collectedClasses$.JsObject_ListMixin[1];
    JsObject_ListMixin.prototype = $desc;
    JsObject_ListMixin.$__fields__ = [];
    function _convertToJS_closure() {
      this.$deferredAction();
    }
    _convertToJS_closure.builtin$cls = "_convertToJS_closure";
    if (!("name" in _convertToJS_closure))
      _convertToJS_closure.name = "_convertToJS_closure";
    $desc = $collectedClasses$._convertToJS_closure[1];
    _convertToJS_closure.prototype = $desc;
    _convertToJS_closure.$__fields__ = [];
    function _convertToJS_closure0(_captured_ctor_0) {
      this._captured_ctor_0 = _captured_ctor_0;
      this.$deferredAction();
    }
    _convertToJS_closure0.builtin$cls = "_convertToJS_closure0";
    if (!("name" in _convertToJS_closure0))
      _convertToJS_closure0.name = "_convertToJS_closure0";
    $desc = $collectedClasses$._convertToJS_closure0[1];
    _convertToJS_closure0.prototype = $desc;
    _convertToJS_closure0.$__fields__ = ["_captured_ctor_0"];
    function _wrapToDart_closure() {
      this.$deferredAction();
    }
    _wrapToDart_closure.builtin$cls = "_wrapToDart_closure";
    if (!("name" in _wrapToDart_closure))
      _wrapToDart_closure.name = "_wrapToDart_closure";
    $desc = $collectedClasses$._wrapToDart_closure[1];
    _wrapToDart_closure.prototype = $desc;
    _wrapToDart_closure.$__fields__ = [];
    function _wrapToDart_closure0() {
      this.$deferredAction();
    }
    _wrapToDart_closure0.builtin$cls = "_wrapToDart_closure0";
    if (!("name" in _wrapToDart_closure0))
      _wrapToDart_closure0.name = "_wrapToDart_closure0";
    $desc = $collectedClasses$._wrapToDart_closure0[1];
    _wrapToDart_closure0.prototype = $desc;
    _wrapToDart_closure0.$__fields__ = [];
    function _wrapToDart_closure1() {
      this.$deferredAction();
    }
    _wrapToDart_closure1.builtin$cls = "_wrapToDart_closure1";
    if (!("name" in _wrapToDart_closure1))
      _wrapToDart_closure1.name = "_wrapToDart_closure1";
    $desc = $collectedClasses$._wrapToDart_closure1[1];
    _wrapToDart_closure1.prototype = $desc;
    _wrapToDart_closure1.$__fields__ = [];
    function _RectangleBase() {
      this.$deferredAction();
    }
    _RectangleBase.builtin$cls = "_RectangleBase";
    if (!("name" in _RectangleBase))
      _RectangleBase.name = "_RectangleBase";
    $desc = $collectedClasses$._RectangleBase[1];
    _RectangleBase.prototype = $desc;
    _RectangleBase.$__fields__ = [];
    function Rectangle() {
      this.$deferredAction();
    }
    Rectangle.builtin$cls = "Rectangle";
    if (!("name" in Rectangle))
      Rectangle.name = "Rectangle";
    $desc = $collectedClasses$.Rectangle[1];
    Rectangle.prototype = $desc;
    Rectangle.$__fields__ = [];
    function NativeByteBuffer() {
      this.$deferredAction();
    }
    NativeByteBuffer.builtin$cls = "NativeByteBuffer";
    if (!("name" in NativeByteBuffer))
      NativeByteBuffer.name = "NativeByteBuffer";
    $desc = $collectedClasses$.NativeByteBuffer[1];
    NativeByteBuffer.prototype = $desc;
    NativeByteBuffer.$__fields__ = [];
    function NativeTypedData() {
      this.$deferredAction();
    }
    NativeTypedData.builtin$cls = "NativeTypedData";
    if (!("name" in NativeTypedData))
      NativeTypedData.name = "NativeTypedData";
    $desc = $collectedClasses$.NativeTypedData[1];
    NativeTypedData.prototype = $desc;
    NativeTypedData.$__fields__ = [];
    function NativeByteData() {
      this.$deferredAction();
    }
    NativeByteData.builtin$cls = "NativeByteData";
    if (!("name" in NativeByteData))
      NativeByteData.name = "NativeByteData";
    $desc = $collectedClasses$.NativeByteData[1];
    NativeByteData.prototype = $desc;
    NativeByteData.$__fields__ = [];
    function NativeTypedArray() {
      this.$deferredAction();
    }
    NativeTypedArray.builtin$cls = "NativeTypedArray";
    if (!("name" in NativeTypedArray))
      NativeTypedArray.name = "NativeTypedArray";
    $desc = $collectedClasses$.NativeTypedArray[1];
    NativeTypedArray.prototype = $desc;
    NativeTypedArray.$__fields__ = [];
    function NativeTypedArrayOfDouble() {
      this.$deferredAction();
    }
    NativeTypedArrayOfDouble.builtin$cls = "NativeTypedArrayOfDouble";
    if (!("name" in NativeTypedArrayOfDouble))
      NativeTypedArrayOfDouble.name = "NativeTypedArrayOfDouble";
    $desc = $collectedClasses$.NativeTypedArrayOfDouble[1];
    NativeTypedArrayOfDouble.prototype = $desc;
    NativeTypedArrayOfDouble.$__fields__ = [];
    function NativeTypedArray_ListMixin() {
      this.$deferredAction();
    }
    NativeTypedArray_ListMixin.builtin$cls = "NativeTypedArray_ListMixin";
    if (!("name" in NativeTypedArray_ListMixin))
      NativeTypedArray_ListMixin.name = "NativeTypedArray_ListMixin";
    $desc = $collectedClasses$.NativeTypedArray_ListMixin[1];
    NativeTypedArray_ListMixin.prototype = $desc;
    NativeTypedArray_ListMixin.$__fields__ = [];
    function NativeTypedArray_ListMixin_FixedLengthListMixin() {
      this.$deferredAction();
    }
    NativeTypedArray_ListMixin_FixedLengthListMixin.builtin$cls = "NativeTypedArray_ListMixin_FixedLengthListMixin";
    if (!("name" in NativeTypedArray_ListMixin_FixedLengthListMixin))
      NativeTypedArray_ListMixin_FixedLengthListMixin.name = "NativeTypedArray_ListMixin_FixedLengthListMixin";
    $desc = $collectedClasses$.NativeTypedArray_ListMixin_FixedLengthListMixin[1];
    NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = $desc;
    NativeTypedArray_ListMixin_FixedLengthListMixin.$__fields__ = [];
    function NativeTypedArrayOfInt() {
      this.$deferredAction();
    }
    NativeTypedArrayOfInt.builtin$cls = "NativeTypedArrayOfInt";
    if (!("name" in NativeTypedArrayOfInt))
      NativeTypedArrayOfInt.name = "NativeTypedArrayOfInt";
    $desc = $collectedClasses$.NativeTypedArrayOfInt[1];
    NativeTypedArrayOfInt.prototype = $desc;
    NativeTypedArrayOfInt.$__fields__ = [];
    function NativeTypedArray_ListMixin0() {
      this.$deferredAction();
    }
    NativeTypedArray_ListMixin0.builtin$cls = "NativeTypedArray_ListMixin0";
    if (!("name" in NativeTypedArray_ListMixin0))
      NativeTypedArray_ListMixin0.name = "NativeTypedArray_ListMixin0";
    $desc = $collectedClasses$.NativeTypedArray_ListMixin0[1];
    NativeTypedArray_ListMixin0.prototype = $desc;
    NativeTypedArray_ListMixin0.$__fields__ = [];
    function NativeTypedArray_ListMixin_FixedLengthListMixin0() {
      this.$deferredAction();
    }
    NativeTypedArray_ListMixin_FixedLengthListMixin0.builtin$cls = "NativeTypedArray_ListMixin_FixedLengthListMixin0";
    if (!("name" in NativeTypedArray_ListMixin_FixedLengthListMixin0))
      NativeTypedArray_ListMixin_FixedLengthListMixin0.name = "NativeTypedArray_ListMixin_FixedLengthListMixin0";
    $desc = $collectedClasses$.NativeTypedArray_ListMixin_FixedLengthListMixin0[1];
    NativeTypedArray_ListMixin_FixedLengthListMixin0.prototype = $desc;
    NativeTypedArray_ListMixin_FixedLengthListMixin0.$__fields__ = [];
    function NativeFloat32List() {
      this.$deferredAction();
    }
    NativeFloat32List.builtin$cls = "NativeFloat32List";
    if (!("name" in NativeFloat32List))
      NativeFloat32List.name = "NativeFloat32List";
    $desc = $collectedClasses$.NativeFloat32List[1];
    NativeFloat32List.prototype = $desc;
    NativeFloat32List.$__fields__ = [];
    function NativeFloat64List() {
      this.$deferredAction();
    }
    NativeFloat64List.builtin$cls = "NativeFloat64List";
    if (!("name" in NativeFloat64List))
      NativeFloat64List.name = "NativeFloat64List";
    $desc = $collectedClasses$.NativeFloat64List[1];
    NativeFloat64List.prototype = $desc;
    NativeFloat64List.$__fields__ = [];
    function NativeInt16List() {
      this.$deferredAction();
    }
    NativeInt16List.builtin$cls = "NativeInt16List";
    if (!("name" in NativeInt16List))
      NativeInt16List.name = "NativeInt16List";
    $desc = $collectedClasses$.NativeInt16List[1];
    NativeInt16List.prototype = $desc;
    NativeInt16List.$__fields__ = [];
    function NativeInt32List() {
      this.$deferredAction();
    }
    NativeInt32List.builtin$cls = "NativeInt32List";
    if (!("name" in NativeInt32List))
      NativeInt32List.name = "NativeInt32List";
    $desc = $collectedClasses$.NativeInt32List[1];
    NativeInt32List.prototype = $desc;
    NativeInt32List.$__fields__ = [];
    function NativeInt8List() {
      this.$deferredAction();
    }
    NativeInt8List.builtin$cls = "NativeInt8List";
    if (!("name" in NativeInt8List))
      NativeInt8List.name = "NativeInt8List";
    $desc = $collectedClasses$.NativeInt8List[1];
    NativeInt8List.prototype = $desc;
    NativeInt8List.$__fields__ = [];
    function NativeUint16List() {
      this.$deferredAction();
    }
    NativeUint16List.builtin$cls = "NativeUint16List";
    if (!("name" in NativeUint16List))
      NativeUint16List.name = "NativeUint16List";
    $desc = $collectedClasses$.NativeUint16List[1];
    NativeUint16List.prototype = $desc;
    NativeUint16List.$__fields__ = [];
    function NativeUint32List() {
      this.$deferredAction();
    }
    NativeUint32List.builtin$cls = "NativeUint32List";
    if (!("name" in NativeUint32List))
      NativeUint32List.name = "NativeUint32List";
    $desc = $collectedClasses$.NativeUint32List[1];
    NativeUint32List.prototype = $desc;
    NativeUint32List.$__fields__ = [];
    function NativeUint8ClampedList() {
      this.$deferredAction();
    }
    NativeUint8ClampedList.builtin$cls = "NativeUint8ClampedList";
    if (!("name" in NativeUint8ClampedList))
      NativeUint8ClampedList.name = "NativeUint8ClampedList";
    $desc = $collectedClasses$.NativeUint8ClampedList[1];
    NativeUint8ClampedList.prototype = $desc;
    NativeUint8ClampedList.$__fields__ = [];
    function NativeUint8List() {
      this.$deferredAction();
    }
    NativeUint8List.builtin$cls = "NativeUint8List";
    if (!("name" in NativeUint8List))
      NativeUint8List.name = "NativeUint8List";
    $desc = $collectedClasses$.NativeUint8List[1];
    NativeUint8List.prototype = $desc;
    NativeUint8List.$__fields__ = [];
    function DateSymbols(NAME, ERAS, ERANAMES, NARROWMONTHS, STANDALONENARROWMONTHS, MONTHS, STANDALONEMONTHS, SHORTMONTHS, STANDALONESHORTMONTHS, WEEKDAYS, STANDALONEWEEKDAYS, SHORTWEEKDAYS, STANDALONESHORTWEEKDAYS, NARROWWEEKDAYS, STANDALONENARROWWEEKDAYS, SHORTQUARTERS, QUARTERS, AMPMS, DATEFORMATS, TIMEFORMATS, DATETIMEFORMATS, AVAILABLEFORMATS, FIRSTDAYOFWEEK, WEEKENDRANGE, FIRSTWEEKCUTOFFDAY) {
      this.NAME = NAME;
      this.ERAS = ERAS;
      this.ERANAMES = ERANAMES;
      this.NARROWMONTHS = NARROWMONTHS;
      this.STANDALONENARROWMONTHS = STANDALONENARROWMONTHS;
      this.MONTHS = MONTHS;
      this.STANDALONEMONTHS = STANDALONEMONTHS;
      this.SHORTMONTHS = SHORTMONTHS;
      this.STANDALONESHORTMONTHS = STANDALONESHORTMONTHS;
      this.WEEKDAYS = WEEKDAYS;
      this.STANDALONEWEEKDAYS = STANDALONEWEEKDAYS;
      this.SHORTWEEKDAYS = SHORTWEEKDAYS;
      this.STANDALONESHORTWEEKDAYS = STANDALONESHORTWEEKDAYS;
      this.NARROWWEEKDAYS = NARROWWEEKDAYS;
      this.STANDALONENARROWWEEKDAYS = STANDALONENARROWWEEKDAYS;
      this.SHORTQUARTERS = SHORTQUARTERS;
      this.QUARTERS = QUARTERS;
      this.AMPMS = AMPMS;
      this.DATEFORMATS = DATEFORMATS;
      this.TIMEFORMATS = TIMEFORMATS;
      this.DATETIMEFORMATS = DATETIMEFORMATS;
      this.AVAILABLEFORMATS = AVAILABLEFORMATS;
      this.FIRSTDAYOFWEEK = FIRSTDAYOFWEEK;
      this.WEEKENDRANGE = WEEKENDRANGE;
      this.FIRSTWEEKCUTOFFDAY = FIRSTWEEKCUTOFFDAY;
      this.$deferredAction();
    }
    DateSymbols.builtin$cls = "DateSymbols";
    if (!("name" in DateSymbols))
      DateSymbols.name = "DateSymbols";
    $desc = $collectedClasses$.DateSymbols[1];
    DateSymbols.prototype = $desc;
    DateSymbols.$__fields__ = ["NAME", "ERAS", "ERANAMES", "NARROWMONTHS", "STANDALONENARROWMONTHS", "MONTHS", "STANDALONEMONTHS", "SHORTMONTHS", "STANDALONESHORTMONTHS", "WEEKDAYS", "STANDALONEWEEKDAYS", "SHORTWEEKDAYS", "STANDALONESHORTWEEKDAYS", "NARROWWEEKDAYS", "STANDALONENARROWWEEKDAYS", "SHORTQUARTERS", "QUARTERS", "AMPMS", "DATEFORMATS", "TIMEFORMATS", "DATETIMEFORMATS", "AVAILABLEFORMATS", "FIRSTDAYOFWEEK", "WEEKENDRANGE", "FIRSTWEEKCUTOFFDAY"];
    DateSymbols.prototype.get$ERAS = function() {
      return this.ERAS;
    };
    DateSymbols.prototype.get$ERANAMES = function() {
      return this.ERANAMES;
    };
    DateSymbols.prototype.get$NARROWMONTHS = function() {
      return this.NARROWMONTHS;
    };
    DateSymbols.prototype.get$STANDALONENARROWMONTHS = function() {
      return this.STANDALONENARROWMONTHS;
    };
    DateSymbols.prototype.get$MONTHS = function() {
      return this.MONTHS;
    };
    DateSymbols.prototype.get$STANDALONEMONTHS = function() {
      return this.STANDALONEMONTHS;
    };
    DateSymbols.prototype.get$SHORTMONTHS = function() {
      return this.SHORTMONTHS;
    };
    DateSymbols.prototype.get$STANDALONESHORTMONTHS = function() {
      return this.STANDALONESHORTMONTHS;
    };
    DateSymbols.prototype.get$WEEKDAYS = function() {
      return this.WEEKDAYS;
    };
    DateSymbols.prototype.get$STANDALONEWEEKDAYS = function() {
      return this.STANDALONEWEEKDAYS;
    };
    DateSymbols.prototype.get$SHORTWEEKDAYS = function() {
      return this.SHORTWEEKDAYS;
    };
    DateSymbols.prototype.get$STANDALONESHORTWEEKDAYS = function() {
      return this.STANDALONESHORTWEEKDAYS;
    };
    DateSymbols.prototype.get$STANDALONENARROWWEEKDAYS = function() {
      return this.STANDALONENARROWWEEKDAYS;
    };
    DateSymbols.prototype.get$SHORTQUARTERS = function() {
      return this.SHORTQUARTERS;
    };
    DateSymbols.prototype.get$QUARTERS = function() {
      return this.QUARTERS;
    };
    DateSymbols.prototype.get$AMPMS = function() {
      return this.AMPMS;
    };
    function Fluri(_uri) {
      this._uri = _uri;
      this.$deferredAction();
    }
    Fluri.builtin$cls = "Fluri";
    if (!("name" in Fluri))
      Fluri.name = "Fluri";
    $desc = $collectedClasses$.Fluri[1];
    Fluri.prototype = $desc;
    Fluri.$__fields__ = ["_uri"];
    function FluriMixin() {
      this.$deferredAction();
    }
    FluriMixin.builtin$cls = "FluriMixin";
    if (!("name" in FluriMixin))
      FluriMixin.name = "FluriMixin";
    $desc = $collectedClasses$.FluriMixin[1];
    FluriMixin.prototype = $desc;
    FluriMixin.$__fields__ = [];
    function _StructuredClone() {
      this.$deferredAction();
    }
    _StructuredClone.builtin$cls = "_StructuredClone";
    if (!("name" in _StructuredClone))
      _StructuredClone.name = "_StructuredClone";
    $desc = $collectedClasses$._StructuredClone[1];
    _StructuredClone.prototype = $desc;
    _StructuredClone.$__fields__ = [];
    function _StructuredClone_walk_closure(_html_common$_box_0, _captured_this_1) {
      this._html_common$_box_0 = _html_common$_box_0;
      this._captured_this_1 = _captured_this_1;
      this.$deferredAction();
    }
    _StructuredClone_walk_closure.builtin$cls = "_StructuredClone_walk_closure";
    if (!("name" in _StructuredClone_walk_closure))
      _StructuredClone_walk_closure.name = "_StructuredClone_walk_closure";
    $desc = $collectedClasses$._StructuredClone_walk_closure[1];
    _StructuredClone_walk_closure.prototype = $desc;
    _StructuredClone_walk_closure.$__fields__ = ["_html_common$_box_0", "_captured_this_1"];
    function _AcceptStructuredClone() {
      this.$deferredAction();
    }
    _AcceptStructuredClone.builtin$cls = "_AcceptStructuredClone";
    if (!("name" in _AcceptStructuredClone))
      _AcceptStructuredClone.name = "_AcceptStructuredClone";
    $desc = $collectedClasses$._AcceptStructuredClone[1];
    _AcceptStructuredClone.prototype = $desc;
    _AcceptStructuredClone.$__fields__ = [];
    function _AcceptStructuredClone_walk_closure(_html_common$_box_0, _captured_this_1) {
      this._html_common$_box_0 = _html_common$_box_0;
      this._captured_this_1 = _captured_this_1;
      this.$deferredAction();
    }
    _AcceptStructuredClone_walk_closure.builtin$cls = "_AcceptStructuredClone_walk_closure";
    if (!("name" in _AcceptStructuredClone_walk_closure))
      _AcceptStructuredClone_walk_closure.name = "_AcceptStructuredClone_walk_closure";
    $desc = $collectedClasses$._AcceptStructuredClone_walk_closure[1];
    _AcceptStructuredClone_walk_closure.prototype = $desc;
    _AcceptStructuredClone_walk_closure.$__fields__ = ["_html_common$_box_0", "_captured_this_1"];
    function _StructuredCloneDart2Js(values, copies) {
      this.values = values;
      this.copies = copies;
      this.$deferredAction();
    }
    _StructuredCloneDart2Js.builtin$cls = "_StructuredCloneDart2Js";
    if (!("name" in _StructuredCloneDart2Js))
      _StructuredCloneDart2Js.name = "_StructuredCloneDart2Js";
    $desc = $collectedClasses$._StructuredCloneDart2Js[1];
    _StructuredCloneDart2Js.prototype = $desc;
    _StructuredCloneDart2Js.$__fields__ = ["values", "copies"];
    function _AcceptStructuredCloneDart2Js(values, copies, mustCopy) {
      this.values = values;
      this.copies = copies;
      this.mustCopy = mustCopy;
      this.$deferredAction();
    }
    _AcceptStructuredCloneDart2Js.builtin$cls = "_AcceptStructuredCloneDart2Js";
    if (!("name" in _AcceptStructuredCloneDart2Js))
      _AcceptStructuredCloneDart2Js.name = "_AcceptStructuredCloneDart2Js";
    $desc = $collectedClasses$._AcceptStructuredCloneDart2Js[1];
    _AcceptStructuredCloneDart2Js.prototype = $desc;
    _AcceptStructuredCloneDart2Js.$__fields__ = ["values", "copies", "mustCopy"];
    function convertNativePromiseToDartFuture_closure(_captured_completer_0) {
      this._captured_completer_0 = _captured_completer_0;
      this.$deferredAction();
    }
    convertNativePromiseToDartFuture_closure.builtin$cls = "convertNativePromiseToDartFuture_closure";
    if (!("name" in convertNativePromiseToDartFuture_closure))
      convertNativePromiseToDartFuture_closure.name = "convertNativePromiseToDartFuture_closure";
    $desc = $collectedClasses$.convertNativePromiseToDartFuture_closure[1];
    convertNativePromiseToDartFuture_closure.prototype = $desc;
    convertNativePromiseToDartFuture_closure.$__fields__ = ["_captured_completer_0"];
    function convertNativePromiseToDartFuture_closure0(_captured_completer_1) {
      this._captured_completer_1 = _captured_completer_1;
      this.$deferredAction();
    }
    convertNativePromiseToDartFuture_closure0.builtin$cls = "convertNativePromiseToDartFuture_closure0";
    if (!("name" in convertNativePromiseToDartFuture_closure0))
      convertNativePromiseToDartFuture_closure0.name = "convertNativePromiseToDartFuture_closure0";
    $desc = $collectedClasses$.convertNativePromiseToDartFuture_closure0[1];
    convertNativePromiseToDartFuture_closure0.prototype = $desc;
    convertNativePromiseToDartFuture_closure0.$__fields__ = ["_captured_completer_1"];
    function DateFormat(_locale, _intl$_pattern, _formatFieldsPrivate) {
      this._locale = _locale;
      this._intl$_pattern = _intl$_pattern;
      this._formatFieldsPrivate = _formatFieldsPrivate;
      this.$deferredAction();
    }
    DateFormat.builtin$cls = "DateFormat";
    if (!("name" in DateFormat))
      DateFormat.name = "DateFormat";
    $desc = $collectedClasses$.DateFormat[1];
    DateFormat.prototype = $desc;
    DateFormat.$__fields__ = ["_locale", "_intl$_pattern", "_formatFieldsPrivate"];
    function DateFormat_format_closure(_captured_date_0, _intl$_captured_result_1) {
      this._captured_date_0 = _captured_date_0;
      this._intl$_captured_result_1 = _intl$_captured_result_1;
      this.$deferredAction();
    }
    DateFormat_format_closure.builtin$cls = "DateFormat_format_closure";
    if (!("name" in DateFormat_format_closure))
      DateFormat_format_closure.name = "DateFormat_format_closure";
    $desc = $collectedClasses$.DateFormat_format_closure[1];
    DateFormat_format_closure.prototype = $desc;
    DateFormat_format_closure.$__fields__ = ["_captured_date_0", "_intl$_captured_result_1"];
    function DateFormat__fieldConstructors_closure() {
      this.$deferredAction();
    }
    DateFormat__fieldConstructors_closure.builtin$cls = "DateFormat__fieldConstructors_closure";
    if (!("name" in DateFormat__fieldConstructors_closure))
      DateFormat__fieldConstructors_closure.name = "DateFormat__fieldConstructors_closure";
    $desc = $collectedClasses$.DateFormat__fieldConstructors_closure[1];
    DateFormat__fieldConstructors_closure.prototype = $desc;
    DateFormat__fieldConstructors_closure.$__fields__ = [];
    function DateFormat__fieldConstructors_closure0() {
      this.$deferredAction();
    }
    DateFormat__fieldConstructors_closure0.builtin$cls = "DateFormat__fieldConstructors_closure0";
    if (!("name" in DateFormat__fieldConstructors_closure0))
      DateFormat__fieldConstructors_closure0.name = "DateFormat__fieldConstructors_closure0";
    $desc = $collectedClasses$.DateFormat__fieldConstructors_closure0[1];
    DateFormat__fieldConstructors_closure0.prototype = $desc;
    DateFormat__fieldConstructors_closure0.$__fields__ = [];
    function DateFormat__fieldConstructors_closure1() {
      this.$deferredAction();
    }
    DateFormat__fieldConstructors_closure1.builtin$cls = "DateFormat__fieldConstructors_closure1";
    if (!("name" in DateFormat__fieldConstructors_closure1))
      DateFormat__fieldConstructors_closure1.name = "DateFormat__fieldConstructors_closure1";
    $desc = $collectedClasses$.DateFormat__fieldConstructors_closure1[1];
    DateFormat__fieldConstructors_closure1.prototype = $desc;
    DateFormat__fieldConstructors_closure1.$__fields__ = [];
    function _DateFormatField() {
      this.$deferredAction();
    }
    _DateFormatField.builtin$cls = "_DateFormatField";
    if (!("name" in _DateFormatField))
      _DateFormatField.name = "_DateFormatField";
    $desc = $collectedClasses$._DateFormatField[1];
    _DateFormatField.prototype = $desc;
    _DateFormatField.$__fields__ = [];
    function _DateFormatLiteralField(pattern, parent) {
      this.pattern = pattern;
      this.parent = parent;
      this.$deferredAction();
    }
    _DateFormatLiteralField.builtin$cls = "_DateFormatLiteralField";
    if (!("name" in _DateFormatLiteralField))
      _DateFormatLiteralField.name = "_DateFormatLiteralField";
    $desc = $collectedClasses$._DateFormatLiteralField[1];
    _DateFormatLiteralField.prototype = $desc;
    _DateFormatLiteralField.$__fields__ = ["pattern", "parent"];
    function _DateFormatQuotedField(_fullPattern, pattern, parent) {
      this._fullPattern = _fullPattern;
      this.pattern = pattern;
      this.parent = parent;
      this.$deferredAction();
    }
    _DateFormatQuotedField.builtin$cls = "_DateFormatQuotedField";
    if (!("name" in _DateFormatQuotedField))
      _DateFormatQuotedField.name = "_DateFormatQuotedField";
    $desc = $collectedClasses$._DateFormatQuotedField[1];
    _DateFormatQuotedField.prototype = $desc;
    _DateFormatQuotedField.$__fields__ = ["_fullPattern", "pattern", "parent"];
    function _DateFormatPatternField(pattern, parent) {
      this.pattern = pattern;
      this.parent = parent;
      this.$deferredAction();
    }
    _DateFormatPatternField.builtin$cls = "_DateFormatPatternField";
    if (!("name" in _DateFormatPatternField))
      _DateFormatPatternField.name = "_DateFormatPatternField";
    $desc = $collectedClasses$._DateFormatPatternField[1];
    _DateFormatPatternField.prototype = $desc;
    _DateFormatPatternField.$__fields__ = ["pattern", "parent"];
    function UninitializedLocaleData(message, fallbackData) {
      this.message = message;
      this.fallbackData = fallbackData;
      this.$deferredAction();
    }
    UninitializedLocaleData.builtin$cls = "UninitializedLocaleData";
    if (!("name" in UninitializedLocaleData))
      UninitializedLocaleData.name = "UninitializedLocaleData";
    $desc = $collectedClasses$.UninitializedLocaleData[1];
    UninitializedLocaleData.prototype = $desc;
    UninitializedLocaleData.$__fields__ = ["message", "fallbackData"];
    function LocaleDataException(message) {
      this.message = message;
      this.$deferredAction();
    }
    LocaleDataException.builtin$cls = "LocaleDataException";
    if (!("name" in LocaleDataException))
      LocaleDataException.name = "LocaleDataException";
    $desc = $collectedClasses$.LocaleDataException[1];
    LocaleDataException.prototype = $desc;
    LocaleDataException.$__fields__ = ["message"];
    function closure10() {
      this.$deferredAction();
    }
    closure10.builtin$cls = "closure10";
    if (!("name" in closure10))
      closure10.name = "closure10";
    $desc = $collectedClasses$.closure10[1];
    closure10.prototype = $desc;
    closure10.$__fields__ = [];
    function _Label(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Label.builtin$cls = "_Label";
    if (!("name" in _Label))
      _Label.name = "_Label";
    $desc = $collectedClasses$._Label[1];
    _Label.prototype = $desc;
    _Label.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function Store0() {
      this.$deferredAction();
    }
    Store0.builtin$cls = "Store0";
    if (!("name" in Store0))
      Store0.name = "Store0";
    $desc = $collectedClasses$.Store0[1];
    Store0.prototype = $desc;
    Store0.$__fields__ = [];
    function _MapStore() {
      this.$deferredAction();
    }
    _MapStore.builtin$cls = "_MapStore";
    if (!("name" in _MapStore))
      _MapStore.name = "_MapStore";
    $desc = $collectedClasses$._MapStore[1];
    _MapStore.prototype = $desc;
    _MapStore.$__fields__ = [];
    function LocalStorageStore(storage) {
      this.storage = storage;
      this.$deferredAction();
    }
    LocalStorageStore.builtin$cls = "LocalStorageStore";
    if (!("name" in LocalStorageStore))
      LocalStorageStore.name = "LocalStorageStore";
    $desc = $collectedClasses$.LocalStorageStore[1];
    LocalStorageStore.prototype = $desc;
    LocalStorageStore.$__fields__ = ["storage"];
    function Component(props, ref, state, nextProps) {
      this.props = props;
      this.ref = ref;
      this.state = state;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    Component.builtin$cls = "Component";
    if (!("name" in Component))
      Component.name = "Component";
    $desc = $collectedClasses$.Component[1];
    Component.prototype = $desc;
    Component.$__fields__ = ["props", "ref", "state", "nextProps"];
    Component.prototype.get$props = function(receiver) {
      return this.props;
    };
    Component.prototype.set$props = function(receiver, v) {
      return this.props = v;
    };
    Component.prototype.set$ref = function(receiver, v) {
      return this.ref = v;
    };
    Component.prototype.get$state = function(receiver) {
      return this.state;
    };
    Component.prototype.get$nextProps = function() {
      return this.nextProps;
    };
    Component.prototype.set$nextProps = function(v) {
      return this.nextProps = v;
    };
    function SyntheticEvent(bubbles, cancelable, currentTarget, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticEvent.builtin$cls = "SyntheticEvent";
    if (!("name" in SyntheticEvent))
      SyntheticEvent.name = "SyntheticEvent";
    $desc = $collectedClasses$.SyntheticEvent[1];
    SyntheticEvent.prototype = $desc;
    SyntheticEvent.$__fields__ = ["bubbles", "cancelable", "currentTarget", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticEvent.prototype.get$bubbles = function(receiver) {
      return this.bubbles;
    };
    SyntheticEvent.prototype.get$cancelable = function(receiver) {
      return this.cancelable;
    };
    SyntheticEvent.prototype.get$currentTarget = function(receiver) {
      return this.currentTarget;
    };
    SyntheticEvent.prototype.get$eventPhase = function(receiver) {
      return this.eventPhase;
    };
    SyntheticEvent.prototype.get$isTrusted = function(receiver) {
      return this.isTrusted;
    };
    SyntheticEvent.prototype.get$nativeEvent = function(receiver) {
      return this.nativeEvent;
    };
    SyntheticEvent.prototype.get$target = function(receiver) {
      return this.target;
    };
    SyntheticEvent.prototype.get$timeStamp = function(receiver) {
      return this.timeStamp;
    };
    SyntheticEvent.prototype.get$type = function(receiver) {
      return this.type;
    };
    function SyntheticClipboardEvent(clipboardData, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.clipboardData = clipboardData;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticClipboardEvent.builtin$cls = "SyntheticClipboardEvent";
    if (!("name" in SyntheticClipboardEvent))
      SyntheticClipboardEvent.name = "SyntheticClipboardEvent";
    $desc = $collectedClasses$.SyntheticClipboardEvent[1];
    SyntheticClipboardEvent.prototype = $desc;
    SyntheticClipboardEvent.$__fields__ = ["clipboardData", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticClipboardEvent.prototype.get$clipboardData = function(receiver) {
      return this.clipboardData;
    };
    function SyntheticKeyboardEvent(altKey, $char, ctrlKey, locale, location, key, metaKey, repeat, shiftKey, keyCode, charCode, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.altKey = altKey;
      this.$char = $char;
      this.ctrlKey = ctrlKey;
      this.locale = locale;
      this.location = location;
      this.key = key;
      this.metaKey = metaKey;
      this.repeat = repeat;
      this.shiftKey = shiftKey;
      this.keyCode = keyCode;
      this.charCode = charCode;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticKeyboardEvent.builtin$cls = "SyntheticKeyboardEvent";
    if (!("name" in SyntheticKeyboardEvent))
      SyntheticKeyboardEvent.name = "SyntheticKeyboardEvent";
    $desc = $collectedClasses$.SyntheticKeyboardEvent[1];
    SyntheticKeyboardEvent.prototype = $desc;
    SyntheticKeyboardEvent.$__fields__ = ["altKey", "$char", "ctrlKey", "locale", "location", "key", "metaKey", "repeat", "shiftKey", "keyCode", "charCode", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticKeyboardEvent.prototype.get$altKey = function(receiver) {
      return this.altKey;
    };
    SyntheticKeyboardEvent.prototype.get$$char = function(receiver) {
      return this.$char;
    };
    SyntheticKeyboardEvent.prototype.get$ctrlKey = function(receiver) {
      return this.ctrlKey;
    };
    SyntheticKeyboardEvent.prototype.get$locale = function(receiver) {
      return this.locale;
    };
    SyntheticKeyboardEvent.prototype.get$location = function(receiver) {
      return this.location;
    };
    SyntheticKeyboardEvent.prototype.get$key = function(receiver) {
      return this.key;
    };
    SyntheticKeyboardEvent.prototype.get$metaKey = function(receiver) {
      return this.metaKey;
    };
    SyntheticKeyboardEvent.prototype.get$repeat = function(receiver) {
      return this.repeat;
    };
    SyntheticKeyboardEvent.prototype.get$shiftKey = function(receiver) {
      return this.shiftKey;
    };
    SyntheticKeyboardEvent.prototype.get$keyCode = function(receiver) {
      return this.keyCode;
    };
    SyntheticKeyboardEvent.prototype.get$charCode = function(receiver) {
      return this.charCode;
    };
    function SyntheticFocusEvent(relatedTarget, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.relatedTarget = relatedTarget;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticFocusEvent.builtin$cls = "SyntheticFocusEvent";
    if (!("name" in SyntheticFocusEvent))
      SyntheticFocusEvent.name = "SyntheticFocusEvent";
    $desc = $collectedClasses$.SyntheticFocusEvent[1];
    SyntheticFocusEvent.prototype = $desc;
    SyntheticFocusEvent.$__fields__ = ["relatedTarget", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticFocusEvent.prototype.get$relatedTarget = function(receiver) {
      return this.relatedTarget;
    };
    function SyntheticFormEvent(bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticFormEvent.builtin$cls = "SyntheticFormEvent";
    if (!("name" in SyntheticFormEvent))
      SyntheticFormEvent.name = "SyntheticFormEvent";
    $desc = $collectedClasses$.SyntheticFormEvent[1];
    SyntheticFormEvent.prototype = $desc;
    SyntheticFormEvent.$__fields__ = ["bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    function SyntheticDataTransfer(dropEffect, effectAllowed, files, types) {
      this.dropEffect = dropEffect;
      this.effectAllowed = effectAllowed;
      this.files = files;
      this.types = types;
      this.$deferredAction();
    }
    SyntheticDataTransfer.builtin$cls = "SyntheticDataTransfer";
    if (!("name" in SyntheticDataTransfer))
      SyntheticDataTransfer.name = "SyntheticDataTransfer";
    $desc = $collectedClasses$.SyntheticDataTransfer[1];
    SyntheticDataTransfer.prototype = $desc;
    SyntheticDataTransfer.$__fields__ = ["dropEffect", "effectAllowed", "files", "types"];
    SyntheticDataTransfer.prototype.get$dropEffect = function(receiver) {
      return this.dropEffect;
    };
    SyntheticDataTransfer.prototype.get$effectAllowed = function(receiver) {
      return this.effectAllowed;
    };
    SyntheticDataTransfer.prototype.get$files = function(receiver) {
      return this.files;
    };
    SyntheticDataTransfer.prototype.get$types = function(receiver) {
      return this.types;
    };
    function SyntheticMouseEvent(altKey, button, buttons, clientX, clientY, ctrlKey, dataTransfer, metaKey, pageX, pageY, relatedTarget, screenX, screenY, shiftKey, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.altKey = altKey;
      this.button = button;
      this.buttons = buttons;
      this.clientX = clientX;
      this.clientY = clientY;
      this.ctrlKey = ctrlKey;
      this.dataTransfer = dataTransfer;
      this.metaKey = metaKey;
      this.pageX = pageX;
      this.pageY = pageY;
      this.relatedTarget = relatedTarget;
      this.screenX = screenX;
      this.screenY = screenY;
      this.shiftKey = shiftKey;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticMouseEvent.builtin$cls = "SyntheticMouseEvent";
    if (!("name" in SyntheticMouseEvent))
      SyntheticMouseEvent.name = "SyntheticMouseEvent";
    $desc = $collectedClasses$.SyntheticMouseEvent[1];
    SyntheticMouseEvent.prototype = $desc;
    SyntheticMouseEvent.$__fields__ = ["altKey", "button", "buttons", "clientX", "clientY", "ctrlKey", "dataTransfer", "metaKey", "pageX", "pageY", "relatedTarget", "screenX", "screenY", "shiftKey", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticMouseEvent.prototype.get$altKey = function(receiver) {
      return this.altKey;
    };
    SyntheticMouseEvent.prototype.get$button = function(receiver) {
      return this.button;
    };
    SyntheticMouseEvent.prototype.get$buttons = function(receiver) {
      return this.buttons;
    };
    SyntheticMouseEvent.prototype.get$clientX = function(receiver) {
      return this.clientX;
    };
    SyntheticMouseEvent.prototype.get$clientY = function(receiver) {
      return this.clientY;
    };
    SyntheticMouseEvent.prototype.get$ctrlKey = function(receiver) {
      return this.ctrlKey;
    };
    SyntheticMouseEvent.prototype.get$dataTransfer = function(receiver) {
      return this.dataTransfer;
    };
    SyntheticMouseEvent.prototype.get$metaKey = function(receiver) {
      return this.metaKey;
    };
    SyntheticMouseEvent.prototype.get$pageX = function(receiver) {
      return this.pageX;
    };
    SyntheticMouseEvent.prototype.get$pageY = function(receiver) {
      return this.pageY;
    };
    SyntheticMouseEvent.prototype.get$relatedTarget = function(receiver) {
      return this.relatedTarget;
    };
    SyntheticMouseEvent.prototype.get$screenX = function(receiver) {
      return this.screenX;
    };
    SyntheticMouseEvent.prototype.get$screenY = function(receiver) {
      return this.screenY;
    };
    SyntheticMouseEvent.prototype.get$shiftKey = function(receiver) {
      return this.shiftKey;
    };
    function SyntheticTouchEvent(altKey, changedTouches, ctrlKey, metaKey, shiftKey, targetTouches, touches, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.altKey = altKey;
      this.changedTouches = changedTouches;
      this.ctrlKey = ctrlKey;
      this.metaKey = metaKey;
      this.shiftKey = shiftKey;
      this.targetTouches = targetTouches;
      this.touches = touches;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticTouchEvent.builtin$cls = "SyntheticTouchEvent";
    if (!("name" in SyntheticTouchEvent))
      SyntheticTouchEvent.name = "SyntheticTouchEvent";
    $desc = $collectedClasses$.SyntheticTouchEvent[1];
    SyntheticTouchEvent.prototype = $desc;
    SyntheticTouchEvent.$__fields__ = ["altKey", "changedTouches", "ctrlKey", "metaKey", "shiftKey", "targetTouches", "touches", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticTouchEvent.prototype.get$altKey = function(receiver) {
      return this.altKey;
    };
    SyntheticTouchEvent.prototype.get$changedTouches = function(receiver) {
      return this.changedTouches;
    };
    SyntheticTouchEvent.prototype.get$ctrlKey = function(receiver) {
      return this.ctrlKey;
    };
    SyntheticTouchEvent.prototype.get$metaKey = function(receiver) {
      return this.metaKey;
    };
    SyntheticTouchEvent.prototype.get$shiftKey = function(receiver) {
      return this.shiftKey;
    };
    SyntheticTouchEvent.prototype.get$targetTouches = function(receiver) {
      return this.targetTouches;
    };
    SyntheticTouchEvent.prototype.get$touches = function(receiver) {
      return this.touches;
    };
    function SyntheticUIEvent(detail, view, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.detail = detail;
      this.view = view;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticUIEvent.builtin$cls = "SyntheticUIEvent";
    if (!("name" in SyntheticUIEvent))
      SyntheticUIEvent.name = "SyntheticUIEvent";
    $desc = $collectedClasses$.SyntheticUIEvent[1];
    SyntheticUIEvent.prototype = $desc;
    SyntheticUIEvent.$__fields__ = ["detail", "view", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticUIEvent.prototype.get$detail = function(receiver) {
      return this.detail;
    };
    SyntheticUIEvent.prototype.get$view = function(receiver) {
      return this.view;
    };
    function SyntheticWheelEvent(deltaX, deltaMode, deltaY, deltaZ, bubbles, cancelable, currentTarget, _defaultPrevented, _preventDefault, stopPropagation, eventPhase, isTrusted, nativeEvent, target, timeStamp, type) {
      this.deltaX = deltaX;
      this.deltaMode = deltaMode;
      this.deltaY = deltaY;
      this.deltaZ = deltaZ;
      this.bubbles = bubbles;
      this.cancelable = cancelable;
      this.currentTarget = currentTarget;
      this._defaultPrevented = _defaultPrevented;
      this._preventDefault = _preventDefault;
      this.stopPropagation = stopPropagation;
      this.eventPhase = eventPhase;
      this.isTrusted = isTrusted;
      this.nativeEvent = nativeEvent;
      this.target = target;
      this.timeStamp = timeStamp;
      this.type = type;
      this.$deferredAction();
    }
    SyntheticWheelEvent.builtin$cls = "SyntheticWheelEvent";
    if (!("name" in SyntheticWheelEvent))
      SyntheticWheelEvent.name = "SyntheticWheelEvent";
    $desc = $collectedClasses$.SyntheticWheelEvent[1];
    SyntheticWheelEvent.prototype = $desc;
    SyntheticWheelEvent.$__fields__ = ["deltaX", "deltaMode", "deltaY", "deltaZ", "bubbles", "cancelable", "currentTarget", "_defaultPrevented", "_preventDefault", "stopPropagation", "eventPhase", "isTrusted", "nativeEvent", "target", "timeStamp", "type"];
    SyntheticWheelEvent.prototype.get$deltaX = function(receiver) {
      return this.deltaX;
    };
    SyntheticWheelEvent.prototype.get$deltaMode = function(receiver) {
      return this.deltaMode;
    };
    SyntheticWheelEvent.prototype.get$deltaY = function(receiver) {
      return this.deltaY;
    };
    SyntheticWheelEvent.prototype.get$deltaZ = function(receiver) {
      return this.deltaZ;
    };
    function closure1() {
      this.$deferredAction();
    }
    closure1.builtin$cls = "closure1";
    if (!("name" in closure1))
      closure1.name = "closure1";
    $desc = $collectedClasses$.closure1[1];
    closure1.prototype = $desc;
    closure1.$__fields__ = [];
    function closure0() {
      this.$deferredAction();
    }
    closure0.builtin$cls = "closure0";
    if (!("name" in closure0))
      closure0.name = "closure0";
    $desc = $collectedClasses$.closure0[1];
    closure0.prototype = $desc;
    closure0.$__fields__ = [];
    function ReactComponentFactoryProxy() {
      this.$deferredAction();
    }
    ReactComponentFactoryProxy.builtin$cls = "ReactComponentFactoryProxy";
    if (!("name" in ReactComponentFactoryProxy))
      ReactComponentFactoryProxy.name = "ReactComponentFactoryProxy";
    $desc = $collectedClasses$.ReactComponentFactoryProxy[1];
    ReactComponentFactoryProxy.prototype = $desc;
    ReactComponentFactoryProxy.$__fields__ = [];
    function ReactDartComponentFactoryProxy(reactClass, reactComponentFactory, defaultProps) {
      this.reactClass = reactClass;
      this.reactComponentFactory = reactComponentFactory;
      this.defaultProps = defaultProps;
      this.$deferredAction();
    }
    ReactDartComponentFactoryProxy.builtin$cls = "ReactDartComponentFactoryProxy";
    if (!("name" in ReactDartComponentFactoryProxy))
      ReactDartComponentFactoryProxy.name = "ReactDartComponentFactoryProxy";
    $desc = $collectedClasses$.ReactDartComponentFactoryProxy[1];
    ReactDartComponentFactoryProxy.prototype = $desc;
    ReactDartComponentFactoryProxy.$__fields__ = ["reactClass", "reactComponentFactory", "defaultProps"];
    function ReactDartComponentFactoryProxy_generateExtendedJsProps_closure(_captured_ref_0) {
      this._captured_ref_0 = _captured_ref_0;
      this.$deferredAction();
    }
    ReactDartComponentFactoryProxy_generateExtendedJsProps_closure.builtin$cls = "ReactDartComponentFactoryProxy_generateExtendedJsProps_closure";
    if (!("name" in ReactDartComponentFactoryProxy_generateExtendedJsProps_closure))
      ReactDartComponentFactoryProxy_generateExtendedJsProps_closure.name = "ReactDartComponentFactoryProxy_generateExtendedJsProps_closure";
    $desc = $collectedClasses$.ReactDartComponentFactoryProxy_generateExtendedJsProps_closure[1];
    ReactDartComponentFactoryProxy_generateExtendedJsProps_closure.prototype = $desc;
    ReactDartComponentFactoryProxy_generateExtendedJsProps_closure.$__fields__ = ["_captured_ref_0"];
    function _registerComponent_closure(_captured_zone_0) {
      this._captured_zone_0 = _captured_zone_0;
      this.$deferredAction();
    }
    _registerComponent_closure.builtin$cls = "_registerComponent_closure";
    if (!("name" in _registerComponent_closure))
      _registerComponent_closure.name = "_registerComponent_closure";
    $desc = $collectedClasses$._registerComponent_closure[1];
    _registerComponent_closure.prototype = $desc;
    _registerComponent_closure.$__fields__ = ["_captured_zone_0"];
    function _registerComponent__closure8() {
      this.$deferredAction();
    }
    _registerComponent__closure8.builtin$cls = "_registerComponent__closure8";
    if (!("name" in _registerComponent__closure8))
      _registerComponent__closure8.name = "_registerComponent__closure8";
    $desc = $collectedClasses$._registerComponent__closure8[1];
    _registerComponent__closure8.prototype = $desc;
    _registerComponent__closure8.$__fields__ = [];
    function _registerComponent_closure0(_captured_componentFactory_1, _captured_zone_2) {
      this._captured_componentFactory_1 = _captured_componentFactory_1;
      this._captured_zone_2 = _captured_zone_2;
      this.$deferredAction();
    }
    _registerComponent_closure0.builtin$cls = "_registerComponent_closure0";
    if (!("name" in _registerComponent_closure0))
      _registerComponent_closure0.name = "_registerComponent_closure0";
    $desc = $collectedClasses$._registerComponent_closure0[1];
    _registerComponent_closure0.prototype = $desc;
    _registerComponent_closure0.$__fields__ = ["_captured_componentFactory_1", "_captured_zone_2"];
    function _registerComponent__closure7(_captured_componentFactory_3, _captured_jsThis_4) {
      this._captured_componentFactory_3 = _captured_componentFactory_3;
      this._captured_jsThis_4 = _captured_jsThis_4;
      this.$deferredAction();
    }
    _registerComponent__closure7.builtin$cls = "_registerComponent__closure7";
    if (!("name" in _registerComponent__closure7))
      _registerComponent__closure7.name = "_registerComponent__closure7";
    $desc = $collectedClasses$._registerComponent__closure7[1];
    _registerComponent__closure7.prototype = $desc;
    _registerComponent__closure7.$__fields__ = ["_captured_componentFactory_3", "_captured_jsThis_4"];
    function _registerComponent___closure(_captured_jsThis_5, _captured_internal_6) {
      this._captured_jsThis_5 = _captured_jsThis_5;
      this._captured_internal_6 = _captured_internal_6;
      this.$deferredAction();
    }
    _registerComponent___closure.builtin$cls = "_registerComponent___closure";
    if (!("name" in _registerComponent___closure))
      _registerComponent___closure.name = "_registerComponent___closure";
    $desc = $collectedClasses$._registerComponent___closure[1];
    _registerComponent___closure.prototype = $desc;
    _registerComponent___closure.$__fields__ = ["_captured_jsThis_5", "_captured_internal_6"];
    function _registerComponent___closure0(_captured_jsThis_7) {
      this._captured_jsThis_7 = _captured_jsThis_7;
      this.$deferredAction();
    }
    _registerComponent___closure0.builtin$cls = "_registerComponent___closure0";
    if (!("name" in _registerComponent___closure0))
      _registerComponent___closure0.name = "_registerComponent___closure0";
    $desc = $collectedClasses$._registerComponent___closure0[1];
    _registerComponent___closure0.prototype = $desc;
    _registerComponent___closure0.$__fields__ = ["_captured_jsThis_7"];
    function _registerComponent___closure1(_captured_jsThis_8) {
      this._captured_jsThis_8 = _captured_jsThis_8;
      this.$deferredAction();
    }
    _registerComponent___closure1.builtin$cls = "_registerComponent___closure1";
    if (!("name" in _registerComponent___closure1))
      _registerComponent___closure1.name = "_registerComponent___closure1";
    $desc = $collectedClasses$._registerComponent___closure1[1];
    _registerComponent___closure1.prototype = $desc;
    _registerComponent___closure1.$__fields__ = ["_captured_jsThis_8"];
    function _registerComponent_closure1(_captured_zone_9) {
      this._captured_zone_9 = _captured_zone_9;
      this.$deferredAction();
    }
    _registerComponent_closure1.builtin$cls = "_registerComponent_closure1";
    if (!("name" in _registerComponent_closure1))
      _registerComponent_closure1.name = "_registerComponent_closure1";
    $desc = $collectedClasses$._registerComponent_closure1[1];
    _registerComponent_closure1.prototype = $desc;
    _registerComponent_closure1.$__fields__ = ["_captured_zone_9"];
    function _registerComponent__closure6(_captured_jsThis_10) {
      this._captured_jsThis_10 = _captured_jsThis_10;
      this.$deferredAction();
    }
    _registerComponent__closure6.builtin$cls = "_registerComponent__closure6";
    if (!("name" in _registerComponent__closure6))
      _registerComponent__closure6.name = "_registerComponent__closure6";
    $desc = $collectedClasses$._registerComponent__closure6[1];
    _registerComponent__closure6.prototype = $desc;
    _registerComponent__closure6.$__fields__ = ["_captured_jsThis_10"];
    function _registerComponent_closure2(_captured_zone_11) {
      this._captured_zone_11 = _captured_zone_11;
      this.$deferredAction();
    }
    _registerComponent_closure2.builtin$cls = "_registerComponent_closure2";
    if (!("name" in _registerComponent_closure2))
      _registerComponent_closure2.name = "_registerComponent_closure2";
    $desc = $collectedClasses$._registerComponent_closure2[1];
    _registerComponent_closure2.prototype = $desc;
    _registerComponent_closure2.$__fields__ = ["_captured_zone_11"];
    function _registerComponent__closure5(_captured_jsThis_12) {
      this._captured_jsThis_12 = _captured_jsThis_12;
      this.$deferredAction();
    }
    _registerComponent__closure5.builtin$cls = "_registerComponent__closure5";
    if (!("name" in _registerComponent__closure5))
      _registerComponent__closure5.name = "_registerComponent__closure5";
    $desc = $collectedClasses$._registerComponent__closure5[1];
    _registerComponent__closure5.prototype = $desc;
    _registerComponent__closure5.$__fields__ = ["_captured_jsThis_12"];
    function _registerComponent__getNextProps() {
      this.$deferredAction();
    }
    _registerComponent__getNextProps.builtin$cls = "_registerComponent__getNextProps";
    if (!("name" in _registerComponent__getNextProps))
      _registerComponent__getNextProps.name = "_registerComponent__getNextProps";
    $desc = $collectedClasses$._registerComponent__getNextProps[1];
    _registerComponent__getNextProps.prototype = $desc;
    _registerComponent__getNextProps.$__fields__ = [];
    function _registerComponent__afterPropsChange() {
      this.$deferredAction();
    }
    _registerComponent__afterPropsChange.builtin$cls = "_registerComponent__afterPropsChange";
    if (!("name" in _registerComponent__afterPropsChange))
      _registerComponent__afterPropsChange.name = "_registerComponent__afterPropsChange";
    $desc = $collectedClasses$._registerComponent__afterPropsChange[1];
    _registerComponent__afterPropsChange.prototype = $desc;
    _registerComponent__afterPropsChange.$__fields__ = [];
    function _registerComponent_closure3(_captured_zone_13, _captured__getNextProps_14) {
      this._captured_zone_13 = _captured_zone_13;
      this._captured__getNextProps_14 = _captured__getNextProps_14;
      this.$deferredAction();
    }
    _registerComponent_closure3.builtin$cls = "_registerComponent_closure3";
    if (!("name" in _registerComponent_closure3))
      _registerComponent_closure3.name = "_registerComponent_closure3";
    $desc = $collectedClasses$._registerComponent_closure3[1];
    _registerComponent_closure3.prototype = $desc;
    _registerComponent_closure3.$__fields__ = ["_captured_zone_13", "_captured__getNextProps_14"];
    function _registerComponent__closure4(_captured__getNextProps_15, _captured_jsThis_16, _captured_newArgs_17) {
      this._captured__getNextProps_15 = _captured__getNextProps_15;
      this._captured_jsThis_16 = _captured_jsThis_16;
      this._captured_newArgs_17 = _captured_newArgs_17;
      this.$deferredAction();
    }
    _registerComponent__closure4.builtin$cls = "_registerComponent__closure4";
    if (!("name" in _registerComponent__closure4))
      _registerComponent__closure4.name = "_registerComponent__closure4";
    $desc = $collectedClasses$._registerComponent__closure4[1];
    _registerComponent__closure4.prototype = $desc;
    _registerComponent__closure4.$__fields__ = ["_captured__getNextProps_15", "_captured_jsThis_16", "_captured_newArgs_17"];
    function _registerComponent_closure4(_captured_zone_18, _captured__afterPropsChange_19) {
      this._captured_zone_18 = _captured_zone_18;
      this._captured__afterPropsChange_19 = _captured__afterPropsChange_19;
      this.$deferredAction();
    }
    _registerComponent_closure4.builtin$cls = "_registerComponent_closure4";
    if (!("name" in _registerComponent_closure4))
      _registerComponent_closure4.name = "_registerComponent_closure4";
    $desc = $collectedClasses$._registerComponent_closure4[1];
    _registerComponent_closure4.prototype = $desc;
    _registerComponent_closure4.$__fields__ = ["_captured_zone_18", "_captured__afterPropsChange_19"];
    function _registerComponent__closure3(_captured__afterPropsChange_20, _captured_jsThis_21, _captured_newArgs_22) {
      this._captured__afterPropsChange_20 = _captured__afterPropsChange_20;
      this._captured_jsThis_21 = _captured_jsThis_21;
      this._captured_newArgs_22 = _captured_newArgs_22;
      this.$deferredAction();
    }
    _registerComponent__closure3.builtin$cls = "_registerComponent__closure3";
    if (!("name" in _registerComponent__closure3))
      _registerComponent__closure3.name = "_registerComponent__closure3";
    $desc = $collectedClasses$._registerComponent__closure3[1];
    _registerComponent__closure3.prototype = $desc;
    _registerComponent__closure3.$__fields__ = ["_captured__afterPropsChange_20", "_captured_jsThis_21", "_captured_newArgs_22"];
    function _registerComponent_closure5(_captured_zone_23, _captured__afterPropsChange_24) {
      this._captured_zone_23 = _captured_zone_23;
      this._captured__afterPropsChange_24 = _captured__afterPropsChange_24;
      this.$deferredAction();
    }
    _registerComponent_closure5.builtin$cls = "_registerComponent_closure5";
    if (!("name" in _registerComponent_closure5))
      _registerComponent_closure5.name = "_registerComponent_closure5";
    $desc = $collectedClasses$._registerComponent_closure5[1];
    _registerComponent_closure5.prototype = $desc;
    _registerComponent_closure5.$__fields__ = ["_captured_zone_23", "_captured__afterPropsChange_24"];
    function _registerComponent__closure2(_captured__afterPropsChange_25, _captured_jsThis_26, _captured_newArgs_27) {
      this._captured__afterPropsChange_25 = _captured__afterPropsChange_25;
      this._captured_jsThis_26 = _captured_jsThis_26;
      this._captured_newArgs_27 = _captured_newArgs_27;
      this.$deferredAction();
    }
    _registerComponent__closure2.builtin$cls = "_registerComponent__closure2";
    if (!("name" in _registerComponent__closure2))
      _registerComponent__closure2.name = "_registerComponent__closure2";
    $desc = $collectedClasses$._registerComponent__closure2[1];
    _registerComponent__closure2.prototype = $desc;
    _registerComponent__closure2.$__fields__ = ["_captured__afterPropsChange_25", "_captured_jsThis_26", "_captured_newArgs_27"];
    function _registerComponent_closure6(_captured_zone_28) {
      this._captured_zone_28 = _captured_zone_28;
      this.$deferredAction();
    }
    _registerComponent_closure6.builtin$cls = "_registerComponent_closure6";
    if (!("name" in _registerComponent_closure6))
      _registerComponent_closure6.name = "_registerComponent_closure6";
    $desc = $collectedClasses$._registerComponent_closure6[1];
    _registerComponent_closure6.prototype = $desc;
    _registerComponent_closure6.$__fields__ = ["_captured_zone_28"];
    function _registerComponent__closure1(_captured_jsThis_29, _captured_prevProps_30) {
      this._captured_jsThis_29 = _captured_jsThis_29;
      this._captured_prevProps_30 = _captured_prevProps_30;
      this.$deferredAction();
    }
    _registerComponent__closure1.builtin$cls = "_registerComponent__closure1";
    if (!("name" in _registerComponent__closure1))
      _registerComponent__closure1.name = "_registerComponent__closure1";
    $desc = $collectedClasses$._registerComponent__closure1[1];
    _registerComponent__closure1.prototype = $desc;
    _registerComponent__closure1.$__fields__ = ["_captured_jsThis_29", "_captured_prevProps_30"];
    function _registerComponent_closure7(_captured_zone_31) {
      this._captured_zone_31 = _captured_zone_31;
      this.$deferredAction();
    }
    _registerComponent_closure7.builtin$cls = "_registerComponent_closure7";
    if (!("name" in _registerComponent_closure7))
      _registerComponent_closure7.name = "_registerComponent_closure7";
    $desc = $collectedClasses$._registerComponent_closure7[1];
    _registerComponent_closure7.prototype = $desc;
    _registerComponent_closure7.$__fields__ = ["_captured_zone_31"];
    function _registerComponent__closure0(_captured_jsThis_32) {
      this._captured_jsThis_32 = _captured_jsThis_32;
      this.$deferredAction();
    }
    _registerComponent__closure0.builtin$cls = "_registerComponent__closure0";
    if (!("name" in _registerComponent__closure0))
      _registerComponent__closure0.name = "_registerComponent__closure0";
    $desc = $collectedClasses$._registerComponent__closure0[1];
    _registerComponent__closure0.prototype = $desc;
    _registerComponent__closure0.$__fields__ = ["_captured_jsThis_32"];
    function _registerComponent_closure8(_captured_zone_33) {
      this._captured_zone_33 = _captured_zone_33;
      this.$deferredAction();
    }
    _registerComponent_closure8.builtin$cls = "_registerComponent_closure8";
    if (!("name" in _registerComponent_closure8))
      _registerComponent_closure8.name = "_registerComponent_closure8";
    $desc = $collectedClasses$._registerComponent_closure8[1];
    _registerComponent_closure8.prototype = $desc;
    _registerComponent_closure8.$__fields__ = ["_captured_zone_33"];
    function _registerComponent__closure(_captured_jsThis_34) {
      this._captured_jsThis_34 = _captured_jsThis_34;
      this.$deferredAction();
    }
    _registerComponent__closure.builtin$cls = "_registerComponent__closure";
    if (!("name" in _registerComponent__closure))
      _registerComponent__closure.name = "_registerComponent__closure";
    $desc = $collectedClasses$._registerComponent__closure[1];
    _registerComponent__closure.prototype = $desc;
    _registerComponent__closure.$__fields__ = ["_captured_jsThis_34"];
    function ReactDomComponentFactoryProxy(name, factory) {
      this.name = name;
      this.factory = factory;
      this.$deferredAction();
    }
    ReactDomComponentFactoryProxy.builtin$cls = "ReactDomComponentFactoryProxy";
    if (!("name" in ReactDomComponentFactoryProxy))
      ReactDomComponentFactoryProxy.name = "ReactDomComponentFactoryProxy";
    $desc = $collectedClasses$.ReactDomComponentFactoryProxy[1];
    ReactDomComponentFactoryProxy.prototype = $desc;
    ReactDomComponentFactoryProxy.$__fields__ = ["name", "factory"];
    function _convertBoundValues_closure(_captured_boundValue_0, _captured_onChange_1) {
      this._captured_boundValue_0 = _captured_boundValue_0;
      this._captured_onChange_1 = _captured_onChange_1;
      this.$deferredAction();
    }
    _convertBoundValues_closure.builtin$cls = "_convertBoundValues_closure";
    if (!("name" in _convertBoundValues_closure))
      _convertBoundValues_closure.name = "_convertBoundValues_closure";
    $desc = $collectedClasses$._convertBoundValues_closure[1];
    _convertBoundValues_closure.prototype = $desc;
    _convertBoundValues_closure.$__fields__ = ["_captured_boundValue_0", "_captured_onChange_1"];
    function _convertEventHandlers_closure(_captured_args_0, _captured_zone_1) {
      this._captured_args_0 = _captured_args_0;
      this._captured_zone_1 = _captured_zone_1;
      this.$deferredAction();
    }
    _convertEventHandlers_closure.builtin$cls = "_convertEventHandlers_closure";
    if (!("name" in _convertEventHandlers_closure))
      _convertEventHandlers_closure.name = "_convertEventHandlers_closure";
    $desc = $collectedClasses$._convertEventHandlers_closure[1];
    _convertEventHandlers_closure.prototype = $desc;
    _convertEventHandlers_closure.$__fields__ = ["_captured_args_0", "_captured_zone_1"];
    function _convertEventHandlers__closure(_captured_zone_2, _react_client$_captured_value_3, _captured_eventFactory_4) {
      this._captured_zone_2 = _captured_zone_2;
      this._react_client$_captured_value_3 = _react_client$_captured_value_3;
      this._captured_eventFactory_4 = _captured_eventFactory_4;
      this.$deferredAction();
    }
    _convertEventHandlers__closure.builtin$cls = "_convertEventHandlers__closure";
    if (!("name" in _convertEventHandlers__closure))
      _convertEventHandlers__closure.name = "_convertEventHandlers__closure";
    $desc = $collectedClasses$._convertEventHandlers__closure[1];
    _convertEventHandlers__closure.prototype = $desc;
    _convertEventHandlers__closure.$__fields__ = ["_captured_zone_2", "_react_client$_captured_value_3", "_captured_eventFactory_4"];
    function _convertEventHandlers___closure(_react_client$_captured_value_5, _captured_eventFactory_6, _captured_e_7) {
      this._react_client$_captured_value_5 = _react_client$_captured_value_5;
      this._captured_eventFactory_6 = _captured_eventFactory_6;
      this._captured_e_7 = _captured_e_7;
      this.$deferredAction();
    }
    _convertEventHandlers___closure.builtin$cls = "_convertEventHandlers___closure";
    if (!("name" in _convertEventHandlers___closure))
      _convertEventHandlers___closure.name = "_convertEventHandlers___closure";
    $desc = $collectedClasses$._convertEventHandlers___closure[1];
    _convertEventHandlers___closure.prototype = $desc;
    _convertEventHandlers___closure.$__fields__ = ["_react_client$_captured_value_5", "_captured_eventFactory_6", "_captured_e_7"];
    function syntheticClipboardEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticClipboardEventFactory_closure.builtin$cls = "syntheticClipboardEventFactory_closure";
    if (!("name" in syntheticClipboardEventFactory_closure))
      syntheticClipboardEventFactory_closure.name = "syntheticClipboardEventFactory_closure";
    $desc = $collectedClasses$.syntheticClipboardEventFactory_closure[1];
    syntheticClipboardEventFactory_closure.prototype = $desc;
    syntheticClipboardEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticClipboardEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticClipboardEventFactory_closure0.builtin$cls = "syntheticClipboardEventFactory_closure0";
    if (!("name" in syntheticClipboardEventFactory_closure0))
      syntheticClipboardEventFactory_closure0.name = "syntheticClipboardEventFactory_closure0";
    $desc = $collectedClasses$.syntheticClipboardEventFactory_closure0[1];
    syntheticClipboardEventFactory_closure0.prototype = $desc;
    syntheticClipboardEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticKeyboardEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticKeyboardEventFactory_closure.builtin$cls = "syntheticKeyboardEventFactory_closure";
    if (!("name" in syntheticKeyboardEventFactory_closure))
      syntheticKeyboardEventFactory_closure.name = "syntheticKeyboardEventFactory_closure";
    $desc = $collectedClasses$.syntheticKeyboardEventFactory_closure[1];
    syntheticKeyboardEventFactory_closure.prototype = $desc;
    syntheticKeyboardEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticKeyboardEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticKeyboardEventFactory_closure0.builtin$cls = "syntheticKeyboardEventFactory_closure0";
    if (!("name" in syntheticKeyboardEventFactory_closure0))
      syntheticKeyboardEventFactory_closure0.name = "syntheticKeyboardEventFactory_closure0";
    $desc = $collectedClasses$.syntheticKeyboardEventFactory_closure0[1];
    syntheticKeyboardEventFactory_closure0.prototype = $desc;
    syntheticKeyboardEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticFocusEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticFocusEventFactory_closure.builtin$cls = "syntheticFocusEventFactory_closure";
    if (!("name" in syntheticFocusEventFactory_closure))
      syntheticFocusEventFactory_closure.name = "syntheticFocusEventFactory_closure";
    $desc = $collectedClasses$.syntheticFocusEventFactory_closure[1];
    syntheticFocusEventFactory_closure.prototype = $desc;
    syntheticFocusEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticFocusEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticFocusEventFactory_closure0.builtin$cls = "syntheticFocusEventFactory_closure0";
    if (!("name" in syntheticFocusEventFactory_closure0))
      syntheticFocusEventFactory_closure0.name = "syntheticFocusEventFactory_closure0";
    $desc = $collectedClasses$.syntheticFocusEventFactory_closure0[1];
    syntheticFocusEventFactory_closure0.prototype = $desc;
    syntheticFocusEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticFormEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticFormEventFactory_closure.builtin$cls = "syntheticFormEventFactory_closure";
    if (!("name" in syntheticFormEventFactory_closure))
      syntheticFormEventFactory_closure.name = "syntheticFormEventFactory_closure";
    $desc = $collectedClasses$.syntheticFormEventFactory_closure[1];
    syntheticFormEventFactory_closure.prototype = $desc;
    syntheticFormEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticFormEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticFormEventFactory_closure0.builtin$cls = "syntheticFormEventFactory_closure0";
    if (!("name" in syntheticFormEventFactory_closure0))
      syntheticFormEventFactory_closure0.name = "syntheticFormEventFactory_closure0";
    $desc = $collectedClasses$.syntheticFormEventFactory_closure0[1];
    syntheticFormEventFactory_closure0.prototype = $desc;
    syntheticFormEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticMouseEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticMouseEventFactory_closure.builtin$cls = "syntheticMouseEventFactory_closure";
    if (!("name" in syntheticMouseEventFactory_closure))
      syntheticMouseEventFactory_closure.name = "syntheticMouseEventFactory_closure";
    $desc = $collectedClasses$.syntheticMouseEventFactory_closure[1];
    syntheticMouseEventFactory_closure.prototype = $desc;
    syntheticMouseEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticMouseEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticMouseEventFactory_closure0.builtin$cls = "syntheticMouseEventFactory_closure0";
    if (!("name" in syntheticMouseEventFactory_closure0))
      syntheticMouseEventFactory_closure0.name = "syntheticMouseEventFactory_closure0";
    $desc = $collectedClasses$.syntheticMouseEventFactory_closure0[1];
    syntheticMouseEventFactory_closure0.prototype = $desc;
    syntheticMouseEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticTouchEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticTouchEventFactory_closure.builtin$cls = "syntheticTouchEventFactory_closure";
    if (!("name" in syntheticTouchEventFactory_closure))
      syntheticTouchEventFactory_closure.name = "syntheticTouchEventFactory_closure";
    $desc = $collectedClasses$.syntheticTouchEventFactory_closure[1];
    syntheticTouchEventFactory_closure.prototype = $desc;
    syntheticTouchEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticTouchEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticTouchEventFactory_closure0.builtin$cls = "syntheticTouchEventFactory_closure0";
    if (!("name" in syntheticTouchEventFactory_closure0))
      syntheticTouchEventFactory_closure0.name = "syntheticTouchEventFactory_closure0";
    $desc = $collectedClasses$.syntheticTouchEventFactory_closure0[1];
    syntheticTouchEventFactory_closure0.prototype = $desc;
    syntheticTouchEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticUIEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticUIEventFactory_closure.builtin$cls = "syntheticUIEventFactory_closure";
    if (!("name" in syntheticUIEventFactory_closure))
      syntheticUIEventFactory_closure.name = "syntheticUIEventFactory_closure";
    $desc = $collectedClasses$.syntheticUIEventFactory_closure[1];
    syntheticUIEventFactory_closure.prototype = $desc;
    syntheticUIEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticUIEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticUIEventFactory_closure0.builtin$cls = "syntheticUIEventFactory_closure0";
    if (!("name" in syntheticUIEventFactory_closure0))
      syntheticUIEventFactory_closure0.name = "syntheticUIEventFactory_closure0";
    $desc = $collectedClasses$.syntheticUIEventFactory_closure0[1];
    syntheticUIEventFactory_closure0.prototype = $desc;
    syntheticUIEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function syntheticWheelEventFactory_closure(_captured_e_0) {
      this._captured_e_0 = _captured_e_0;
      this.$deferredAction();
    }
    syntheticWheelEventFactory_closure.builtin$cls = "syntheticWheelEventFactory_closure";
    if (!("name" in syntheticWheelEventFactory_closure))
      syntheticWheelEventFactory_closure.name = "syntheticWheelEventFactory_closure";
    $desc = $collectedClasses$.syntheticWheelEventFactory_closure[1];
    syntheticWheelEventFactory_closure.prototype = $desc;
    syntheticWheelEventFactory_closure.$__fields__ = ["_captured_e_0"];
    function syntheticWheelEventFactory_closure0(_captured_e_1) {
      this._captured_e_1 = _captured_e_1;
      this.$deferredAction();
    }
    syntheticWheelEventFactory_closure0.builtin$cls = "syntheticWheelEventFactory_closure0";
    if (!("name" in syntheticWheelEventFactory_closure0))
      syntheticWheelEventFactory_closure0.name = "syntheticWheelEventFactory_closure0";
    $desc = $collectedClasses$.syntheticWheelEventFactory_closure0[1];
    syntheticWheelEventFactory_closure0.prototype = $desc;
    syntheticWheelEventFactory_closure0.$__fields__ = ["_captured_e_1"];
    function _MissingJsMemberError(name, message) {
      this.name = name;
      this.message = message;
      this.$deferredAction();
    }
    _MissingJsMemberError.builtin$cls = "_MissingJsMemberError";
    if (!("name" in _MissingJsMemberError))
      _MissingJsMemberError.name = "_MissingJsMemberError";
    $desc = $collectedClasses$._MissingJsMemberError[1];
    _MissingJsMemberError.prototype = $desc;
    _MissingJsMemberError.$__fields__ = ["name", "message"];
    function closure14() {
      this.$deferredAction();
    }
    closure14.builtin$cls = "closure14";
    if (!("name" in closure14))
      closure14.name = "closure14";
    $desc = $collectedClasses$.closure14[1];
    closure14.prototype = $desc;
    closure14.$__fields__ = [];
    function closure3() {
      this.$deferredAction();
    }
    closure3.builtin$cls = "closure3";
    if (!("name" in closure3))
      closure3.name = "closure3";
    $desc = $collectedClasses$.closure3[1];
    closure3.prototype = $desc;
    closure3.$__fields__ = [];
    function EmptyObject() {
      this.$deferredAction();
    }
    EmptyObject.builtin$cls = "EmptyObject";
    if (!("name" in EmptyObject))
      EmptyObject.name = "EmptyObject";
    $desc = $collectedClasses$.EmptyObject[1];
    EmptyObject.prototype = $desc;
    EmptyObject.$__fields__ = [];
    function jsify_closure(_captured_jsMap_0) {
      this._captured_jsMap_0 = _captured_jsMap_0;
      this.$deferredAction();
    }
    jsify_closure.builtin$cls = "jsify_closure";
    if (!("name" in jsify_closure))
      jsify_closure.name = "jsify_closure";
    $desc = $collectedClasses$.jsify_closure[1];
    jsify_closure.prototype = $desc;
    jsify_closure.$__fields__ = ["_captured_jsMap_0"];
    function React() {
      this.$deferredAction();
    }
    React.builtin$cls = "React";
    if (!("name" in React))
      React.name = "React";
    $desc = $collectedClasses$.React[1];
    React.prototype = $desc;
    React.$__fields__ = [];
    function ReactDom() {
      this.$deferredAction();
    }
    ReactDom.builtin$cls = "ReactDom";
    if (!("name" in ReactDom))
      ReactDom.name = "ReactDom";
    $desc = $collectedClasses$.ReactDom[1];
    ReactDom.prototype = $desc;
    ReactDom.$__fields__ = [];
    function ReactDomServer() {
      this.$deferredAction();
    }
    ReactDomServer.builtin$cls = "ReactDomServer";
    if (!("name" in ReactDomServer))
      ReactDomServer.name = "ReactDomServer";
    $desc = $collectedClasses$.ReactDomServer[1];
    ReactDomServer.prototype = $desc;
    ReactDomServer.$__fields__ = [];
    function ReactClass() {
      this.$deferredAction();
    }
    ReactClass.builtin$cls = "ReactClass";
    if (!("name" in ReactClass))
      ReactClass.name = "ReactClass";
    $desc = $collectedClasses$.ReactClass[1];
    ReactClass.prototype = $desc;
    ReactClass.$__fields__ = [];
    function ReactClassConfig() {
      this.$deferredAction();
    }
    ReactClassConfig.builtin$cls = "ReactClassConfig";
    if (!("name" in ReactClassConfig))
      ReactClassConfig.name = "ReactClassConfig";
    $desc = $collectedClasses$.ReactClassConfig[1];
    ReactClassConfig.prototype = $desc;
    ReactClassConfig.$__fields__ = [];
    function ReactElementStore() {
      this.$deferredAction();
    }
    ReactElementStore.builtin$cls = "ReactElementStore";
    if (!("name" in ReactElementStore))
      ReactElementStore.name = "ReactElementStore";
    $desc = $collectedClasses$.ReactElementStore[1];
    ReactElementStore.prototype = $desc;
    ReactElementStore.$__fields__ = [];
    function ReactElement() {
      this.$deferredAction();
    }
    ReactElement.builtin$cls = "ReactElement";
    if (!("name" in ReactElement))
      ReactElement.name = "ReactElement";
    $desc = $collectedClasses$.ReactElement[1];
    ReactElement.prototype = $desc;
    ReactElement.$__fields__ = [];
    function ReactComponent() {
      this.$deferredAction();
    }
    ReactComponent.builtin$cls = "ReactComponent";
    if (!("name" in ReactComponent))
      ReactComponent.name = "ReactComponent";
    $desc = $collectedClasses$.ReactComponent[1];
    ReactComponent.prototype = $desc;
    ReactComponent.$__fields__ = [];
    function InteropProps() {
      this.$deferredAction();
    }
    InteropProps.builtin$cls = "InteropProps";
    if (!("name" in InteropProps))
      InteropProps.name = "InteropProps";
    $desc = $collectedClasses$.InteropProps[1];
    InteropProps.prototype = $desc;
    InteropProps.$__fields__ = [];
    function ReactDartComponentInternal(component, isMounted, props) {
      this.component = component;
      this.isMounted = isMounted;
      this.props = props;
      this.$deferredAction();
    }
    ReactDartComponentInternal.builtin$cls = "ReactDartComponentInternal";
    if (!("name" in ReactDartComponentInternal))
      ReactDartComponentInternal.name = "ReactDartComponentInternal";
    $desc = $collectedClasses$.ReactDartComponentInternal[1];
    ReactDartComponentInternal.prototype = $desc;
    ReactDartComponentInternal.$__fields__ = ["component", "isMounted", "props"];
    ReactDartComponentInternal.prototype.get$component = function() {
      return this.component;
    };
    ReactDartComponentInternal.prototype.set$component = function(v) {
      return this.component = v;
    };
    ReactDartComponentInternal.prototype.get$isMounted = function(receiver) {
      return this.isMounted;
    };
    ReactDartComponentInternal.prototype.set$isMounted = function(receiver, v) {
      return this.isMounted = v;
    };
    ReactDartComponentInternal.prototype.get$props = function(receiver) {
      return this.props;
    };
    ReactDartComponentInternal.prototype.set$props = function(receiver, v) {
      return this.props = v;
    };
    function markChildrenValidated_closure() {
      this.$deferredAction();
    }
    markChildrenValidated_closure.builtin$cls = "markChildrenValidated_closure";
    if (!("name" in markChildrenValidated_closure))
      markChildrenValidated_closure.name = "markChildrenValidated_closure";
    $desc = $collectedClasses$.markChildrenValidated_closure[1];
    markChildrenValidated_closure.prototype = $desc;
    markChildrenValidated_closure.$__fields__ = [];
    function SyntheticEvent0() {
      this.$deferredAction();
    }
    SyntheticEvent0.builtin$cls = "SyntheticEvent0";
    if (!("name" in SyntheticEvent0))
      SyntheticEvent0.name = "SyntheticEvent0";
    $desc = $collectedClasses$.SyntheticEvent0[1];
    SyntheticEvent0.prototype = $desc;
    SyntheticEvent0.$__fields__ = [];
    function SyntheticClipboardEvent0() {
      this.$deferredAction();
    }
    SyntheticClipboardEvent0.builtin$cls = "SyntheticClipboardEvent0";
    if (!("name" in SyntheticClipboardEvent0))
      SyntheticClipboardEvent0.name = "SyntheticClipboardEvent0";
    $desc = $collectedClasses$.SyntheticClipboardEvent0[1];
    SyntheticClipboardEvent0.prototype = $desc;
    SyntheticClipboardEvent0.$__fields__ = [];
    function SyntheticKeyboardEvent0() {
      this.$deferredAction();
    }
    SyntheticKeyboardEvent0.builtin$cls = "SyntheticKeyboardEvent0";
    if (!("name" in SyntheticKeyboardEvent0))
      SyntheticKeyboardEvent0.name = "SyntheticKeyboardEvent0";
    $desc = $collectedClasses$.SyntheticKeyboardEvent0[1];
    SyntheticKeyboardEvent0.prototype = $desc;
    SyntheticKeyboardEvent0.$__fields__ = [];
    function SyntheticFocusEvent0() {
      this.$deferredAction();
    }
    SyntheticFocusEvent0.builtin$cls = "SyntheticFocusEvent0";
    if (!("name" in SyntheticFocusEvent0))
      SyntheticFocusEvent0.name = "SyntheticFocusEvent0";
    $desc = $collectedClasses$.SyntheticFocusEvent0[1];
    SyntheticFocusEvent0.prototype = $desc;
    SyntheticFocusEvent0.$__fields__ = [];
    function SyntheticFormEvent0() {
      this.$deferredAction();
    }
    SyntheticFormEvent0.builtin$cls = "SyntheticFormEvent0";
    if (!("name" in SyntheticFormEvent0))
      SyntheticFormEvent0.name = "SyntheticFormEvent0";
    $desc = $collectedClasses$.SyntheticFormEvent0[1];
    SyntheticFormEvent0.prototype = $desc;
    SyntheticFormEvent0.$__fields__ = [];
    function SyntheticDataTransfer0() {
      this.$deferredAction();
    }
    SyntheticDataTransfer0.builtin$cls = "SyntheticDataTransfer0";
    if (!("name" in SyntheticDataTransfer0))
      SyntheticDataTransfer0.name = "SyntheticDataTransfer0";
    $desc = $collectedClasses$.SyntheticDataTransfer0[1];
    SyntheticDataTransfer0.prototype = $desc;
    SyntheticDataTransfer0.$__fields__ = [];
    function SyntheticMouseEvent0() {
      this.$deferredAction();
    }
    SyntheticMouseEvent0.builtin$cls = "SyntheticMouseEvent0";
    if (!("name" in SyntheticMouseEvent0))
      SyntheticMouseEvent0.name = "SyntheticMouseEvent0";
    $desc = $collectedClasses$.SyntheticMouseEvent0[1];
    SyntheticMouseEvent0.prototype = $desc;
    SyntheticMouseEvent0.$__fields__ = [];
    function SyntheticTouchEvent0() {
      this.$deferredAction();
    }
    SyntheticTouchEvent0.builtin$cls = "SyntheticTouchEvent0";
    if (!("name" in SyntheticTouchEvent0))
      SyntheticTouchEvent0.name = "SyntheticTouchEvent0";
    $desc = $collectedClasses$.SyntheticTouchEvent0[1];
    SyntheticTouchEvent0.prototype = $desc;
    SyntheticTouchEvent0.$__fields__ = [];
    function SyntheticUIEvent0() {
      this.$deferredAction();
    }
    SyntheticUIEvent0.builtin$cls = "SyntheticUIEvent0";
    if (!("name" in SyntheticUIEvent0))
      SyntheticUIEvent0.name = "SyntheticUIEvent0";
    $desc = $collectedClasses$.SyntheticUIEvent0[1];
    SyntheticUIEvent0.prototype = $desc;
    SyntheticUIEvent0.$__fields__ = [];
    function SyntheticWheelEvent0() {
      this.$deferredAction();
    }
    SyntheticWheelEvent0.builtin$cls = "SyntheticWheelEvent0";
    if (!("name" in SyntheticWheelEvent0))
      SyntheticWheelEvent0.name = "SyntheticWheelEvent0";
    $desc = $collectedClasses$.SyntheticWheelEvent0[1];
    SyntheticWheelEvent0.prototype = $desc;
    SyntheticWheelEvent0.$__fields__ = [];
    function closure2() {
      this.$deferredAction();
    }
    closure2.builtin$cls = "closure2";
    if (!("name" in closure2))
      closure2.name = "closure2";
    $desc = $collectedClasses$.closure2[1];
    closure2.prototype = $desc;
    closure2.$__fields__ = [];
    function closure13() {
      this.$deferredAction();
    }
    closure13.builtin$cls = "closure13";
    if (!("name" in closure13))
      closure13.name = "closure13";
    $desc = $collectedClasses$.closure13[1];
    closure13.prototype = $desc;
    closure13.$__fields__ = [];
    function _Alert(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Alert.builtin$cls = "_Alert";
    if (!("name" in _Alert))
      _Alert.name = "_Alert";
    $desc = $collectedClasses$._Alert[1];
    _Alert.prototype = $desc;
    _Alert.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function _Alert_componentDidMount_closure() {
      this.$deferredAction();
    }
    _Alert_componentDidMount_closure.builtin$cls = "_Alert_componentDidMount_closure";
    if (!("name" in _Alert_componentDidMount_closure))
      _Alert_componentDidMount_closure.name = "_Alert_componentDidMount_closure";
    $desc = $collectedClasses$._Alert_componentDidMount_closure[1];
    _Alert_componentDidMount_closure.prototype = $desc;
    _Alert_componentDidMount_closure.$__fields__ = [];
    function closure() {
      this.$deferredAction();
    }
    closure.builtin$cls = "closure";
    if (!("name" in closure))
      closure.name = "closure";
    $desc = $collectedClasses$.closure[1];
    closure.prototype = $desc;
    closure.$__fields__ = [];
    function _ChaserApp(_subscriptions, props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this._subscriptions = _subscriptions;
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _ChaserApp.builtin$cls = "_ChaserApp";
    if (!("name" in _ChaserApp))
      _ChaserApp.name = "_ChaserApp";
    $desc = $collectedClasses$._ChaserApp[1];
    _ChaserApp.prototype = $desc;
    _ChaserApp.$__fields__ = ["_subscriptions", "props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function _ChaserApp_componentDidMount_closure(_chaser_app$_captured_this_0) {
      this._chaser_app$_captured_this_0 = _chaser_app$_captured_this_0;
      this.$deferredAction();
    }
    _ChaserApp_componentDidMount_closure.builtin$cls = "_ChaserApp_componentDidMount_closure";
    if (!("name" in _ChaserApp_componentDidMount_closure))
      _ChaserApp_componentDidMount_closure.name = "_ChaserApp_componentDidMount_closure";
    $desc = $collectedClasses$._ChaserApp_componentDidMount_closure[1];
    _ChaserApp_componentDidMount_closure.prototype = $desc;
    _ChaserApp_componentDidMount_closure.$__fields__ = ["_chaser_app$_captured_this_0"];
    function closure7() {
      this.$deferredAction();
    }
    closure7.builtin$cls = "closure7";
    if (!("name" in closure7))
      closure7.name = "closure7";
    $desc = $collectedClasses$.closure7[1];
    closure7.prototype = $desc;
    closure7.$__fields__ = [];
    function _ChaserGrid(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _ChaserGrid.builtin$cls = "_ChaserGrid";
    if (!("name" in _ChaserGrid))
      _ChaserGrid.name = "_ChaserGrid";
    $desc = $collectedClasses$._ChaserGrid[1];
    _ChaserGrid.prototype = $desc;
    _ChaserGrid.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function _ChaserGrid_render_closure(_chaser_grid$_captured_this_0) {
      this._chaser_grid$_captured_this_0 = _chaser_grid$_captured_this_0;
      this.$deferredAction();
    }
    _ChaserGrid_render_closure.builtin$cls = "_ChaserGrid_render_closure";
    if (!("name" in _ChaserGrid_render_closure))
      _ChaserGrid_render_closure.name = "_ChaserGrid_render_closure";
    $desc = $collectedClasses$._ChaserGrid_render_closure[1];
    _ChaserGrid_render_closure.prototype = $desc;
    _ChaserGrid_render_closure.$__fields__ = ["_chaser_grid$_captured_this_0"];
    function _ChaserGrid_render_closure0(_chaser_grid$_captured_this_1) {
      this._chaser_grid$_captured_this_1 = _chaser_grid$_captured_this_1;
      this.$deferredAction();
    }
    _ChaserGrid_render_closure0.builtin$cls = "_ChaserGrid_render_closure0";
    if (!("name" in _ChaserGrid_render_closure0))
      _ChaserGrid_render_closure0.name = "_ChaserGrid_render_closure0";
    $desc = $collectedClasses$._ChaserGrid_render_closure0[1];
    _ChaserGrid_render_closure0.prototype = $desc;
    _ChaserGrid_render_closure0.$__fields__ = ["_chaser_grid$_captured_this_1"];
    function closure9() {
      this.$deferredAction();
    }
    closure9.builtin$cls = "closure9";
    if (!("name" in closure9))
      closure9.name = "closure9";
    $desc = $collectedClasses$.closure9[1];
    closure9.prototype = $desc;
    closure9.$__fields__ = [];
    function _ChaserRow(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _ChaserRow.builtin$cls = "_ChaserRow";
    if (!("name" in _ChaserRow))
      _ChaserRow.name = "_ChaserRow";
    $desc = $collectedClasses$._ChaserRow[1];
    _ChaserRow.prototype = $desc;
    _ChaserRow.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function closure6() {
      this.$deferredAction();
    }
    closure6.builtin$cls = "closure6";
    if (!("name" in closure6))
      closure6.name = "closure6";
    $desc = $collectedClasses$.closure6[1];
    closure6.prototype = $desc;
    closure6.$__fields__ = [];
    function _Footer(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Footer.builtin$cls = "_Footer";
    if (!("name" in _Footer))
      _Footer.name = "_Footer";
    $desc = $collectedClasses$._Footer[1];
    _Footer.prototype = $desc;
    _Footer.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function closure5() {
      this.$deferredAction();
    }
    closure5.builtin$cls = "closure5";
    if (!("name" in closure5))
      closure5.name = "closure5";
    $desc = $collectedClasses$.closure5[1];
    closure5.prototype = $desc;
    closure5.$__fields__ = [];
    function _Header(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Header.builtin$cls = "_Header";
    if (!("name" in _Header))
      _Header.name = "_Header";
    $desc = $collectedClasses$._Header[1];
    _Header.prototype = $desc;
    _Header.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function closure12() {
      this.$deferredAction();
    }
    closure12.builtin$cls = "closure12";
    if (!("name" in closure12))
      closure12.name = "closure12";
    $desc = $collectedClasses$.closure12[1];
    closure12.prototype = $desc;
    closure12.$__fields__ = [];
    function _Loading(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Loading.builtin$cls = "_Loading";
    if (!("name" in _Loading))
      _Loading.name = "_Loading";
    $desc = $collectedClasses$._Loading[1];
    _Loading.prototype = $desc;
    _Loading.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function closure4() {
      this.$deferredAction();
    }
    closure4.builtin$cls = "closure4";
    if (!("name" in closure4))
      closure4.name = "closure4";
    $desc = $collectedClasses$.closure4[1];
    closure4.prototype = $desc;
    closure4.$__fields__ = [];
    function _Login(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _Login.builtin$cls = "_Login";
    if (!("name" in _Login))
      _Login.name = "_Login";
    $desc = $collectedClasses$._Login[1];
    _Login.prototype = $desc;
    _Login.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function closure8() {
      this.$deferredAction();
    }
    closure8.builtin$cls = "closure8";
    if (!("name" in closure8))
      closure8.name = "closure8";
    $desc = $collectedClasses$.closure8[1];
    closure8.prototype = $desc;
    closure8.$__fields__ = [];
    function _PopOver(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _PopOver.builtin$cls = "_PopOver";
    if (!("name" in _PopOver))
      _PopOver.name = "_PopOver";
    $desc = $collectedClasses$._PopOver[1];
    _PopOver.prototype = $desc;
    _PopOver.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function _PopOver_componentDidMount_closure(_popover$_captured_this_0) {
      this._popover$_captured_this_0 = _popover$_captured_this_0;
      this.$deferredAction();
    }
    _PopOver_componentDidMount_closure.builtin$cls = "_PopOver_componentDidMount_closure";
    if (!("name" in _PopOver_componentDidMount_closure))
      _PopOver_componentDidMount_closure.name = "_PopOver_componentDidMount_closure";
    $desc = $collectedClasses$._PopOver_componentDidMount_closure[1];
    _PopOver_componentDidMount_closure.prototype = $desc;
    _PopOver_componentDidMount_closure.$__fields__ = ["_popover$_captured_this_0"];
    function closure11() {
      this.$deferredAction();
    }
    closure11.builtin$cls = "closure11";
    if (!("name" in closure11))
      closure11.name = "closure11";
    $desc = $collectedClasses$.closure11[1];
    closure11.prototype = $desc;
    closure11.$__fields__ = [];
    function _PullRequestStatus(props, ref, getDOMNode, _jsRedraw, _jsThis, state, _prevState, _nextState, nextProps) {
      this.props = props;
      this.ref = ref;
      this.getDOMNode = getDOMNode;
      this._jsRedraw = _jsRedraw;
      this._jsThis = _jsThis;
      this.state = state;
      this._prevState = _prevState;
      this._nextState = _nextState;
      this.nextProps = nextProps;
      this.$deferredAction();
    }
    _PullRequestStatus.builtin$cls = "_PullRequestStatus";
    if (!("name" in _PullRequestStatus))
      _PullRequestStatus.name = "_PullRequestStatus";
    $desc = $collectedClasses$._PullRequestStatus[1];
    _PullRequestStatus.prototype = $desc;
    _PullRequestStatus.$__fields__ = ["props", "ref", "getDOMNode", "_jsRedraw", "_jsThis", "state", "_prevState", "_nextState", "nextProps"];
    function _PullRequestStatus_render_closure(_pull_request_status$_captured_this_0, _captured_statuses_1) {
      this._pull_request_status$_captured_this_0 = _pull_request_status$_captured_this_0;
      this._captured_statuses_1 = _captured_statuses_1;
      this.$deferredAction();
    }
    _PullRequestStatus_render_closure.builtin$cls = "_PullRequestStatus_render_closure";
    if (!("name" in _PullRequestStatus_render_closure))
      _PullRequestStatus_render_closure.name = "_PullRequestStatus_render_closure";
    $desc = $collectedClasses$._PullRequestStatus_render_closure[1];
    _PullRequestStatus_render_closure.prototype = $desc;
    _PullRequestStatus_render_closure.$__fields__ = ["_pull_request_status$_captured_this_0", "_captured_statuses_1"];
    function _PullRequestStatus_render__closure(_pull_request_status$_captured_this_2, _captured_ghs_3) {
      this._pull_request_status$_captured_this_2 = _pull_request_status$_captured_this_2;
      this._captured_ghs_3 = _captured_ghs_3;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure.builtin$cls = "_PullRequestStatus_render__closure";
    if (!("name" in _PullRequestStatus_render__closure))
      _PullRequestStatus_render__closure.name = "_PullRequestStatus_render__closure";
    $desc = $collectedClasses$._PullRequestStatus_render__closure[1];
    _PullRequestStatus_render__closure.prototype = $desc;
    _PullRequestStatus_render__closure.$__fields__ = ["_pull_request_status$_captured_this_2", "_captured_ghs_3"];
    function _PullRequestStatus_render__closure0(_captured_this_4, _captured_ghs_5) {
      this._captured_this_4 = _captured_this_4;
      this._captured_ghs_5 = _captured_ghs_5;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure0.builtin$cls = "_PullRequestStatus_render__closure0";
    if (!("name" in _PullRequestStatus_render__closure0))
      _PullRequestStatus_render__closure0.name = "_PullRequestStatus_render__closure0";
    $desc = $collectedClasses$._PullRequestStatus_render__closure0[1];
    _PullRequestStatus_render__closure0.prototype = $desc;
    _PullRequestStatus_render__closure0.$__fields__ = ["_captured_this_4", "_captured_ghs_5"];
    function _PullRequestStatus_render__closure1(_captured_this_6, _captured_ghs_7) {
      this._captured_this_6 = _captured_this_6;
      this._captured_ghs_7 = _captured_ghs_7;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure1.builtin$cls = "_PullRequestStatus_render__closure1";
    if (!("name" in _PullRequestStatus_render__closure1))
      _PullRequestStatus_render__closure1.name = "_PullRequestStatus_render__closure1";
    $desc = $collectedClasses$._PullRequestStatus_render__closure1[1];
    _PullRequestStatus_render__closure1.prototype = $desc;
    _PullRequestStatus_render__closure1.$__fields__ = ["_captured_this_6", "_captured_ghs_7"];
    function _PullRequestStatus_render__closure2(_captured_this_8, _captured_ghs_9) {
      this._captured_this_8 = _captured_this_8;
      this._captured_ghs_9 = _captured_ghs_9;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure2.builtin$cls = "_PullRequestStatus_render__closure2";
    if (!("name" in _PullRequestStatus_render__closure2))
      _PullRequestStatus_render__closure2.name = "_PullRequestStatus_render__closure2";
    $desc = $collectedClasses$._PullRequestStatus_render__closure2[1];
    _PullRequestStatus_render__closure2.prototype = $desc;
    _PullRequestStatus_render__closure2.$__fields__ = ["_captured_this_8", "_captured_ghs_9"];
    function _PullRequestStatus_render__closure3(_captured_this_10, _captured_ghs_11) {
      this._captured_this_10 = _captured_this_10;
      this._captured_ghs_11 = _captured_ghs_11;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure3.builtin$cls = "_PullRequestStatus_render__closure3";
    if (!("name" in _PullRequestStatus_render__closure3))
      _PullRequestStatus_render__closure3.name = "_PullRequestStatus_render__closure3";
    $desc = $collectedClasses$._PullRequestStatus_render__closure3[1];
    _PullRequestStatus_render__closure3.prototype = $desc;
    _PullRequestStatus_render__closure3.$__fields__ = ["_captured_this_10", "_captured_ghs_11"];
    function _PullRequestStatus_render__closure4(_captured_this_12, _captured_ghs_13) {
      this._captured_this_12 = _captured_this_12;
      this._captured_ghs_13 = _captured_ghs_13;
      this.$deferredAction();
    }
    _PullRequestStatus_render__closure4.builtin$cls = "_PullRequestStatus_render__closure4";
    if (!("name" in _PullRequestStatus_render__closure4))
      _PullRequestStatus_render__closure4.name = "_PullRequestStatus_render__closure4";
    $desc = $collectedClasses$._PullRequestStatus_render__closure4[1];
    _PullRequestStatus_render__closure4.prototype = $desc;
    _PullRequestStatus_render__closure4.$__fields__ = ["_captured_this_12", "_captured_ghs_13"];
    function AtMentionActions(displayAll) {
      this.displayAll = displayAll;
      this.$deferredAction();
    }
    AtMentionActions.builtin$cls = "AtMentionActions";
    if (!("name" in AtMentionActions))
      AtMentionActions.name = "AtMentionActions";
    $desc = $collectedClasses$.AtMentionActions[1];
    AtMentionActions.prototype = $desc;
    AtMentionActions.$__fields__ = ["displayAll"];
    function AuthActions(auth, authSuccessful) {
      this.auth = auth;
      this.authSuccessful = authSuccessful;
      this.$deferredAction();
    }
    AuthActions.builtin$cls = "AuthActions";
    if (!("name" in AuthActions))
      AuthActions.name = "AuthActions";
    $desc = $collectedClasses$.AuthActions[1];
    AuthActions.prototype = $desc;
    AuthActions.$__fields__ = ["auth", "authSuccessful"];
    function LocationActions(refreshView, changeViewPrevious, changeViewNext) {
      this.refreshView = refreshView;
      this.changeViewPrevious = changeViewPrevious;
      this.changeViewNext = changeViewNext;
      this.$deferredAction();
    }
    LocationActions.builtin$cls = "LocationActions";
    if (!("name" in LocationActions))
      LocationActions.name = "LocationActions";
    $desc = $collectedClasses$.LocationActions[1];
    LocationActions.prototype = $desc;
    LocationActions.$__fields__ = ["refreshView", "changeViewPrevious", "changeViewNext"];
    function PopoverProps(pageX, pageY, id, content) {
      this.pageX = pageX;
      this.pageY = pageY;
      this.id = id;
      this.content = content;
      this.$deferredAction();
    }
    PopoverProps.builtin$cls = "PopoverProps";
    if (!("name" in PopoverProps))
      PopoverProps.name = "PopoverProps";
    $desc = $collectedClasses$.PopoverProps[1];
    PopoverProps.prototype = $desc;
    PopoverProps.$__fields__ = ["pageX", "pageY", "id", "content"];
    PopoverProps.prototype.get$pageX = function(receiver) {
      return this.pageX;
    };
    PopoverProps.prototype.get$pageY = function(receiver) {
      return this.pageY;
    };
    PopoverProps.prototype.get$id = function(receiver) {
      return this.id;
    };
    PopoverProps.prototype.get$content = function(receiver) {
      return this.content;
    };
    function PopoverActions(showPopover, closePopover) {
      this.showPopover = showPopover;
      this.closePopover = closePopover;
      this.$deferredAction();
    }
    PopoverActions.builtin$cls = "PopoverActions";
    if (!("name" in PopoverActions))
      PopoverActions.name = "PopoverActions";
    $desc = $collectedClasses$.PopoverActions[1];
    PopoverActions.prototype = $desc;
    PopoverActions.$__fields__ = ["showPopover", "closePopover"];
    PopoverActions.prototype.get$showPopover = function() {
      return this.showPopover;
    };
    PopoverActions.prototype.get$closePopover = function() {
      return this.closePopover;
    };
    function ChaserActions(atMentionActions, authActions, locationActions, popoverActions) {
      this.atMentionActions = atMentionActions;
      this.authActions = authActions;
      this.locationActions = locationActions;
      this.popoverActions = popoverActions;
      this.$deferredAction();
    }
    ChaserActions.builtin$cls = "ChaserActions";
    if (!("name" in ChaserActions))
      ChaserActions.name = "ChaserActions";
    $desc = $collectedClasses$.ChaserActions[1];
    ChaserActions.prototype = $desc;
    ChaserActions.$__fields__ = ["atMentionActions", "authActions", "locationActions", "popoverActions"];
    ChaserActions.prototype.get$atMentionActions = function() {
      return this.atMentionActions;
    };
    ChaserActions.prototype.get$authActions = function() {
      return this.authActions;
    };
    ChaserActions.prototype.get$locationActions = function() {
      return this.locationActions;
    };
    ChaserActions.prototype.get$popoverActions = function() {
      return this.popoverActions;
    };
    function ChaserViews(index) {
      this.index = index;
      this.$deferredAction();
    }
    ChaserViews.builtin$cls = "ChaserViews";
    if (!("name" in ChaserViews))
      ChaserViews.name = "ChaserViews";
    $desc = $collectedClasses$.ChaserViews[1];
    ChaserViews.prototype = $desc;
    ChaserViews.$__fields__ = ["index"];
    function GitHubCommit(body, user, updatedAt) {
      this.body = body;
      this.user = user;
      this.updatedAt = updatedAt;
      this.$deferredAction();
    }
    GitHubCommit.builtin$cls = "GitHubCommit";
    if (!("name" in GitHubCommit))
      GitHubCommit.name = "GitHubCommit";
    $desc = $collectedClasses$.GitHubCommit[1];
    GitHubCommit.prototype = $desc;
    GitHubCommit.$__fields__ = ["body", "user", "updatedAt"];
    GitHubCommit.prototype.get$body = function(receiver) {
      return this.body;
    };
    GitHubCommit.prototype.get$user = function() {
      return this.user;
    };
    function GitHubComment(body, user, updatedAt) {
      this.body = body;
      this.user = user;
      this.updatedAt = updatedAt;
      this.$deferredAction();
    }
    GitHubComment.builtin$cls = "GitHubComment";
    if (!("name" in GitHubComment))
      GitHubComment.name = "GitHubComment";
    $desc = $collectedClasses$.GitHubComment[1];
    GitHubComment.prototype = $desc;
    GitHubComment.$__fields__ = ["body", "user", "updatedAt"];
    GitHubComment.prototype.get$body = function(receiver) {
      return this.body;
    };
    GitHubComment.prototype.get$user = function() {
      return this.user;
    };
    function GitHubLabel(name, color) {
      this.name = name;
      this.color = color;
      this.$deferredAction();
    }
    GitHubLabel.builtin$cls = "GitHubLabel";
    if (!("name" in GitHubLabel))
      GitHubLabel.name = "GitHubLabel";
    $desc = $collectedClasses$.GitHubLabel[1];
    GitHubLabel.prototype = $desc;
    GitHubLabel.$__fields__ = ["name", "color"];
    function GitHubPullRequest(actionNeeded, commentsUrl, commitsUrl, comments, fullName, githubUser, githubStatus, htmlUrl, id, url, merged, mergeable, state, statusesUrl, title, updatedAt, updatedAtPretty, repoFullName) {
      this.actionNeeded = actionNeeded;
      this.commentsUrl = commentsUrl;
      this.commitsUrl = commitsUrl;
      this.comments = comments;
      this.fullName = fullName;
      this.githubUser = githubUser;
      this.githubStatus = githubStatus;
      this.htmlUrl = htmlUrl;
      this.id = id;
      this.url = url;
      this.merged = merged;
      this.mergeable = mergeable;
      this.state = state;
      this.statusesUrl = statusesUrl;
      this.title = title;
      this.updatedAt = updatedAt;
      this.updatedAtPretty = updatedAtPretty;
      this.repoFullName = repoFullName;
      this.$deferredAction();
    }
    GitHubPullRequest.builtin$cls = "GitHubPullRequest";
    if (!("name" in GitHubPullRequest))
      GitHubPullRequest.name = "GitHubPullRequest";
    $desc = $collectedClasses$.GitHubPullRequest[1];
    GitHubPullRequest.prototype = $desc;
    GitHubPullRequest.$__fields__ = ["actionNeeded", "commentsUrl", "commitsUrl", "comments", "fullName", "githubUser", "githubStatus", "htmlUrl", "id", "url", "merged", "mergeable", "state", "statusesUrl", "title", "updatedAt", "updatedAtPretty", "repoFullName"];
    GitHubPullRequest.prototype.get$actionNeeded = function() {
      return this.actionNeeded;
    };
    GitHubPullRequest.prototype.set$actionNeeded = function(v) {
      return this.actionNeeded = v;
    };
    GitHubPullRequest.prototype.get$commentsUrl = function() {
      return this.commentsUrl;
    };
    GitHubPullRequest.prototype.get$commitsUrl = function() {
      return this.commitsUrl;
    };
    GitHubPullRequest.prototype.get$comments = function() {
      return this.comments;
    };
    GitHubPullRequest.prototype.get$githubUser = function() {
      return this.githubUser;
    };
    GitHubPullRequest.prototype.get$githubStatus = function() {
      return this.githubStatus;
    };
    GitHubPullRequest.prototype.get$htmlUrl = function() {
      return this.htmlUrl;
    };
    GitHubPullRequest.prototype.get$id = function(receiver) {
      return this.id;
    };
    GitHubPullRequest.prototype.get$mergeable = function() {
      return this.mergeable;
    };
    GitHubPullRequest.prototype.get$state = function(receiver) {
      return this.state;
    };
    GitHubPullRequest.prototype.get$statusesUrl = function() {
      return this.statusesUrl;
    };
    GitHubPullRequest.prototype.get$title = function(receiver) {
      return this.title;
    };
    GitHubPullRequest.prototype.get$updatedAtPretty = function() {
      return this.updatedAtPretty;
    };
    function GitHubSearchResult(commentsUrl, comments, fullName, githubUser, pullRequestUrl, githubLabels, htmlUrl, id, merged, state, statusesUrl, title, updatedAt, repoFullName, githubPullRequest, updatedAtPretty, actionNeeded) {
      this.commentsUrl = commentsUrl;
      this.comments = comments;
      this.fullName = fullName;
      this.githubUser = githubUser;
      this.pullRequestUrl = pullRequestUrl;
      this.githubLabels = githubLabels;
      this.htmlUrl = htmlUrl;
      this.id = id;
      this.merged = merged;
      this.state = state;
      this.statusesUrl = statusesUrl;
      this.title = title;
      this.updatedAt = updatedAt;
      this.repoFullName = repoFullName;
      this.githubPullRequest = githubPullRequest;
      this.updatedAtPretty = updatedAtPretty;
      this.actionNeeded = actionNeeded;
      this.$deferredAction();
    }
    GitHubSearchResult.builtin$cls = "GitHubSearchResult";
    if (!("name" in GitHubSearchResult))
      GitHubSearchResult.name = "GitHubSearchResult";
    $desc = $collectedClasses$.GitHubSearchResult[1];
    GitHubSearchResult.prototype = $desc;
    GitHubSearchResult.$__fields__ = ["commentsUrl", "comments", "fullName", "githubUser", "pullRequestUrl", "githubLabels", "htmlUrl", "id", "merged", "state", "statusesUrl", "title", "updatedAt", "repoFullName", "githubPullRequest", "updatedAtPretty", "actionNeeded"];
    GitHubSearchResult.prototype.get$commentsUrl = function() {
      return this.commentsUrl;
    };
    GitHubSearchResult.prototype.get$comments = function() {
      return this.comments;
    };
    GitHubSearchResult.prototype.get$githubUser = function() {
      return this.githubUser;
    };
    GitHubSearchResult.prototype.get$pullRequestUrl = function() {
      return this.pullRequestUrl;
    };
    GitHubSearchResult.prototype.get$htmlUrl = function() {
      return this.htmlUrl;
    };
    GitHubSearchResult.prototype.get$id = function(receiver) {
      return this.id;
    };
    GitHubSearchResult.prototype.get$state = function(receiver) {
      return this.state;
    };
    GitHubSearchResult.prototype.get$statusesUrl = function() {
      return this.statusesUrl;
    };
    GitHubSearchResult.prototype.get$title = function(receiver) {
      return this.title;
    };
    GitHubSearchResult.prototype.get$githubPullRequest = function() {
      return this.githubPullRequest;
    };
    GitHubSearchResult.prototype.set$githubPullRequest = function(v) {
      return this.githubPullRequest = v;
    };
    GitHubSearchResult.prototype.get$updatedAtPretty = function() {
      return this.updatedAtPretty;
    };
    GitHubSearchResult.prototype.get$actionNeeded = function() {
      return this.actionNeeded;
    };
    GitHubSearchResult.prototype.set$actionNeeded = function(v) {
      return this.actionNeeded = v;
    };
    function GitHubSearchResult_closure() {
      this.$deferredAction();
    }
    GitHubSearchResult_closure.builtin$cls = "GitHubSearchResult_closure";
    if (!("name" in GitHubSearchResult_closure))
      GitHubSearchResult_closure.name = "GitHubSearchResult_closure";
    $desc = $collectedClasses$.GitHubSearchResult_closure[1];
    GitHubSearchResult_closure.prototype = $desc;
    GitHubSearchResult_closure.$__fields__ = [];
    function GitHubStatus(updatedAt, createdAt, targetUrl, state, description, context) {
      this.updatedAt = updatedAt;
      this.createdAt = createdAt;
      this.targetUrl = targetUrl;
      this.state = state;
      this.description = description;
      this.context = context;
      this.$deferredAction();
    }
    GitHubStatus.builtin$cls = "GitHubStatus";
    if (!("name" in GitHubStatus))
      GitHubStatus.name = "GitHubStatus";
    $desc = $collectedClasses$.GitHubStatus[1];
    GitHubStatus.prototype = $desc;
    GitHubStatus.$__fields__ = ["updatedAt", "createdAt", "targetUrl", "state", "description", "context"];
    GitHubStatus.prototype.get$targetUrl = function() {
      return this.targetUrl;
    };
    GitHubStatus.prototype.get$state = function(receiver) {
      return this.state;
    };
    GitHubStatus.prototype.get$description = function(receiver) {
      return this.description;
    };
    GitHubStatus.prototype.get$context = function(receiver) {
      return this.context;
    };
    function GitHubUser(login, avatarUrl, userJson) {
      this.login = login;
      this.avatarUrl = avatarUrl;
      this.userJson = userJson;
      this.$deferredAction();
    }
    GitHubUser.builtin$cls = "GitHubUser";
    if (!("name" in GitHubUser))
      GitHubUser.name = "GitHubUser";
    $desc = $collectedClasses$.GitHubUser[1];
    GitHubUser.prototype = $desc;
    GitHubUser.$__fields__ = ["login", "avatarUrl", "userJson"];
    GitHubUser.prototype.get$login = function() {
      return this.login;
    };
    GitHubUser.prototype.get$avatarUrl = function(receiver) {
      return this.avatarUrl;
    };
    function StatusService(_authStream, _alertStream, updateStreams, auth, alerts, currentAlert, _authed) {
      this._authStream = _authStream;
      this._alertStream = _alertStream;
      this.updateStreams = updateStreams;
      this.auth = auth;
      this.alerts = alerts;
      this.currentAlert = currentAlert;
      this._authed = _authed;
      this.$deferredAction();
    }
    StatusService.builtin$cls = "StatusService";
    if (!("name" in StatusService))
      StatusService.name = "StatusService";
    $desc = $collectedClasses$.StatusService[1];
    StatusService.prototype = $desc;
    StatusService.$__fields__ = ["_authStream", "_alertStream", "updateStreams", "auth", "alerts", "currentAlert", "_authed"];
    StatusService.prototype.get$alerts = function() {
      return this.alerts;
    };
    function GitHubService(_accessToken, _statusService) {
      this._accessToken = _accessToken;
      this._statusService = _statusService;
      this.$deferredAction();
    }
    GitHubService.builtin$cls = "GitHubService";
    if (!("name" in GitHubService))
      GitHubService.name = "GitHubService";
    $desc = $collectedClasses$.GitHubService[1];
    GitHubService.prototype = $desc;
    GitHubService.$__fields__ = ["_accessToken", "_statusService"];
    function GitHubService_getPullRequestComments_closure() {
      this.$deferredAction();
    }
    GitHubService_getPullRequestComments_closure.builtin$cls = "GitHubService_getPullRequestComments_closure";
    if (!("name" in GitHubService_getPullRequestComments_closure))
      GitHubService_getPullRequestComments_closure.name = "GitHubService_getPullRequestComments_closure";
    $desc = $collectedClasses$.GitHubService_getPullRequestComments_closure[1];
    GitHubService_getPullRequestComments_closure.prototype = $desc;
    GitHubService_getPullRequestComments_closure.$__fields__ = [];
    function GitHubService_getPullRequestCommits_closure() {
      this.$deferredAction();
    }
    GitHubService_getPullRequestCommits_closure.builtin$cls = "GitHubService_getPullRequestCommits_closure";
    if (!("name" in GitHubService_getPullRequestCommits_closure))
      GitHubService_getPullRequestCommits_closure.name = "GitHubService_getPullRequestCommits_closure";
    $desc = $collectedClasses$.GitHubService_getPullRequestCommits_closure[1];
    GitHubService_getPullRequestCommits_closure.prototype = $desc;
    GitHubService_getPullRequestCommits_closure.$__fields__ = [];
    function GitHubService_searchForOpenPullRequests_closure() {
      this.$deferredAction();
    }
    GitHubService_searchForOpenPullRequests_closure.builtin$cls = "GitHubService_searchForOpenPullRequests_closure";
    if (!("name" in GitHubService_searchForOpenPullRequests_closure))
      GitHubService_searchForOpenPullRequests_closure.name = "GitHubService_searchForOpenPullRequests_closure";
    $desc = $collectedClasses$.GitHubService_searchForOpenPullRequests_closure[1];
    GitHubService_searchForOpenPullRequests_closure.prototype = $desc;
    GitHubService_searchForOpenPullRequests_closure.$__fields__ = [];
    function GitHubService_searchForAtMentions_closure() {
      this.$deferredAction();
    }
    GitHubService_searchForAtMentions_closure.builtin$cls = "GitHubService_searchForAtMentions_closure";
    if (!("name" in GitHubService_searchForAtMentions_closure))
      GitHubService_searchForAtMentions_closure.name = "GitHubService_searchForAtMentions_closure";
    $desc = $collectedClasses$.GitHubService_searchForAtMentions_closure[1];
    GitHubService_searchForAtMentions_closure.prototype = $desc;
    GitHubService_searchForAtMentions_closure.$__fields__ = [];
    function GitHubService_getPullRequestStatus_closure() {
      this.$deferredAction();
    }
    GitHubService_getPullRequestStatus_closure.builtin$cls = "GitHubService_getPullRequestStatus_closure";
    if (!("name" in GitHubService_getPullRequestStatus_closure))
      GitHubService_getPullRequestStatus_closure.name = "GitHubService_getPullRequestStatus_closure";
    $desc = $collectedClasses$.GitHubService_getPullRequestStatus_closure[1];
    GitHubService_getPullRequestStatus_closure.prototype = $desc;
    GitHubService_getPullRequestStatus_closure.$__fields__ = [];
    function LocationStorageService(localStorageStore, _atMentionPullRequests, atMentionsUpdated, _totalPrsChased) {
      this.localStorageStore = localStorageStore;
      this._atMentionPullRequests = _atMentionPullRequests;
      this.atMentionsUpdated = atMentionsUpdated;
      this._totalPrsChased = _totalPrsChased;
      this.$deferredAction();
    }
    LocationStorageService.builtin$cls = "LocationStorageService";
    if (!("name" in LocationStorageService))
      LocationStorageService.name = "LocationStorageService";
    $desc = $collectedClasses$.LocationStorageService[1];
    LocationStorageService.prototype = $desc;
    LocationStorageService.$__fields__ = ["localStorageStore", "_atMentionPullRequests", "atMentionsUpdated", "_totalPrsChased"];
    function LocationStorageService_atMentionPullRequests_closure() {
      this.$deferredAction();
    }
    LocationStorageService_atMentionPullRequests_closure.builtin$cls = "LocationStorageService_atMentionPullRequests_closure";
    if (!("name" in LocationStorageService_atMentionPullRequests_closure))
      LocationStorageService_atMentionPullRequests_closure.name = "LocationStorageService_atMentionPullRequests_closure";
    $desc = $collectedClasses$.LocationStorageService_atMentionPullRequests_closure[1];
    LocationStorageService_atMentionPullRequests_closure.prototype = $desc;
    LocationStorageService_atMentionPullRequests_closure.$__fields__ = [];
    function LocationStorageService_atMentionPullRequests_closure0() {
      this.$deferredAction();
    }
    LocationStorageService_atMentionPullRequests_closure0.builtin$cls = "LocationStorageService_atMentionPullRequests_closure0";
    if (!("name" in LocationStorageService_atMentionPullRequests_closure0))
      LocationStorageService_atMentionPullRequests_closure0.name = "LocationStorageService_atMentionPullRequests_closure0";
    $desc = $collectedClasses$.LocationStorageService_atMentionPullRequests_closure0[1];
    LocationStorageService_atMentionPullRequests_closure0.prototype = $desc;
    LocationStorageService_atMentionPullRequests_closure0.$__fields__ = [];
    function ChaserStore(displayPullRequests, updated, showAll, rowsHideable, loading) {
      this.displayPullRequests = displayPullRequests;
      this.updated = updated;
      this.showAll = showAll;
      this.rowsHideable = rowsHideable;
      this.loading = loading;
      this.$deferredAction();
    }
    ChaserStore.builtin$cls = "ChaserStore";
    if (!("name" in ChaserStore))
      ChaserStore.name = "ChaserStore";
    $desc = $collectedClasses$.ChaserStore[1];
    ChaserStore.prototype = $desc;
    ChaserStore.$__fields__ = ["displayPullRequests", "updated", "showAll", "rowsHideable", "loading"];
    ChaserStore.prototype.get$displayPullRequests = function() {
      return this.displayPullRequests;
    };
    ChaserStore.prototype.get$updated = function() {
      return this.updated;
    };
    ChaserStore.prototype.get$showAll = function() {
      return this.showAll;
    };
    ChaserStore.prototype.get$rowsHideable = function() {
      return this.rowsHideable;
    };
    ChaserStore.prototype.get$loading = function() {
      return this.loading;
    };
    function ChaserStore_closure(_chaser_store$_captured_this_0) {
      this._chaser_store$_captured_this_0 = _chaser_store$_captured_this_0;
      this.$deferredAction();
    }
    ChaserStore_closure.builtin$cls = "ChaserStore_closure";
    if (!("name" in ChaserStore_closure))
      ChaserStore_closure.name = "ChaserStore_closure";
    $desc = $collectedClasses$.ChaserStore_closure[1];
    ChaserStore_closure.prototype = $desc;
    ChaserStore_closure.$__fields__ = ["_chaser_store$_captured_this_0"];
    function ChaserStore_getPullRequestsStatus_closure(_captured_gsr_0) {
      this._captured_gsr_0 = _captured_gsr_0;
      this.$deferredAction();
    }
    ChaserStore_getPullRequestsStatus_closure.builtin$cls = "ChaserStore_getPullRequestsStatus_closure";
    if (!("name" in ChaserStore_getPullRequestsStatus_closure))
      ChaserStore_getPullRequestsStatus_closure.name = "ChaserStore_getPullRequestsStatus_closure";
    $desc = $collectedClasses$.ChaserStore_getPullRequestsStatus_closure[1];
    ChaserStore_getPullRequestsStatus_closure.prototype = $desc;
    ChaserStore_getPullRequestsStatus_closure.$__fields__ = ["_captured_gsr_0"];
    function ChaserStore_getPullRequestsStatus__closure(_captured_ghStatus_1) {
      this._captured_ghStatus_1 = _captured_ghStatus_1;
      this.$deferredAction();
    }
    ChaserStore_getPullRequestsStatus__closure.builtin$cls = "ChaserStore_getPullRequestsStatus__closure";
    if (!("name" in ChaserStore_getPullRequestsStatus__closure))
      ChaserStore_getPullRequestsStatus__closure.name = "ChaserStore_getPullRequestsStatus__closure";
    $desc = $collectedClasses$.ChaserStore_getPullRequestsStatus__closure[1];
    ChaserStore_getPullRequestsStatus__closure.prototype = $desc;
    ChaserStore_getPullRequestsStatus__closure.$__fields__ = ["_captured_ghStatus_1"];
    function AtMentionStore(alertsController, _userStore, _chaserActions, _locationStore, atMentionPullRequests, AtMentionStore_displayPullRequests, AtMentionStore_updated, AtMentionStore_showAll, AtMentionStore_rowsHideable, AtMentionStore_loading, displayPullRequests, localStorageService, updated, gitHubService, showAll, rowsHideable, loading, _chaser_store$_statusService, _streamController, _stream) {
      this.alertsController = alertsController;
      this._userStore = _userStore;
      this._chaserActions = _chaserActions;
      this._locationStore = _locationStore;
      this.atMentionPullRequests = atMentionPullRequests;
      this.AtMentionStore_displayPullRequests = AtMentionStore_displayPullRequests;
      this.AtMentionStore_updated = AtMentionStore_updated;
      this.AtMentionStore_showAll = AtMentionStore_showAll;
      this.AtMentionStore_rowsHideable = AtMentionStore_rowsHideable;
      this.AtMentionStore_loading = AtMentionStore_loading;
      this.displayPullRequests = displayPullRequests;
      this.localStorageService = localStorageService;
      this.updated = updated;
      this.gitHubService = gitHubService;
      this.showAll = showAll;
      this.rowsHideable = rowsHideable;
      this.loading = loading;
      this._chaser_store$_statusService = _chaser_store$_statusService;
      this._streamController = _streamController;
      this._stream = _stream;
      this.$deferredAction();
    }
    AtMentionStore.builtin$cls = "AtMentionStore";
    if (!("name" in AtMentionStore))
      AtMentionStore.name = "AtMentionStore";
    $desc = $collectedClasses$.AtMentionStore[1];
    AtMentionStore.prototype = $desc;
    AtMentionStore.$__fields__ = ["alertsController", "_userStore", "_chaserActions", "_locationStore", "atMentionPullRequests", "AtMentionStore_displayPullRequests", "AtMentionStore_updated", "AtMentionStore_showAll", "AtMentionStore_rowsHideable", "AtMentionStore_loading", "displayPullRequests", "localStorageService", "updated", "gitHubService", "showAll", "rowsHideable", "loading", "_chaser_store$_statusService", "_streamController", "_stream"];
    AtMentionStore.prototype.get$atMentionPullRequests = function() {
      return this.atMentionPullRequests;
    };
    AtMentionStore.prototype.get$displayPullRequests = function() {
      return this.AtMentionStore_displayPullRequests;
    };
    AtMentionStore.prototype.get$updated = function() {
      return this.AtMentionStore_updated;
    };
    AtMentionStore.prototype.get$showAll = function() {
      return this.AtMentionStore_showAll;
    };
    AtMentionStore.prototype.get$rowsHideable = function() {
      return this.AtMentionStore_rowsHideable;
    };
    AtMentionStore.prototype.get$loading = function() {
      return this.AtMentionStore_loading;
    };
    function AtMentionStore_closure(_chaser_stores$_captured_this_0) {
      this._chaser_stores$_captured_this_0 = _chaser_stores$_captured_this_0;
      this.$deferredAction();
    }
    AtMentionStore_closure.builtin$cls = "AtMentionStore_closure";
    if (!("name" in AtMentionStore_closure))
      AtMentionStore_closure.name = "AtMentionStore_closure";
    $desc = $collectedClasses$.AtMentionStore_closure[1];
    AtMentionStore_closure.prototype = $desc;
    AtMentionStore_closure.$__fields__ = ["_chaser_stores$_captured_this_0"];
    function AtMentionStore__displayAll_closure() {
      this.$deferredAction();
    }
    AtMentionStore__displayAll_closure.builtin$cls = "AtMentionStore__displayAll_closure";
    if (!("name" in AtMentionStore__displayAll_closure))
      AtMentionStore__displayAll_closure.name = "AtMentionStore__displayAll_closure";
    $desc = $collectedClasses$.AtMentionStore__displayAll_closure[1];
    AtMentionStore__displayAll_closure.prototype = $desc;
    AtMentionStore__displayAll_closure.$__fields__ = [];
    function AtMentionStore__getChaserAssetsFromGithub_closure() {
      this.$deferredAction();
    }
    AtMentionStore__getChaserAssetsFromGithub_closure.builtin$cls = "AtMentionStore__getChaserAssetsFromGithub_closure";
    if (!("name" in AtMentionStore__getChaserAssetsFromGithub_closure))
      AtMentionStore__getChaserAssetsFromGithub_closure.name = "AtMentionStore__getChaserAssetsFromGithub_closure";
    $desc = $collectedClasses$.AtMentionStore__getChaserAssetsFromGithub_closure[1];
    AtMentionStore__getChaserAssetsFromGithub_closure.prototype = $desc;
    AtMentionStore__getChaserAssetsFromGithub_closure.$__fields__ = [];
    function AtMentionStore_load_closure() {
      this.$deferredAction();
    }
    AtMentionStore_load_closure.builtin$cls = "AtMentionStore_load_closure";
    if (!("name" in AtMentionStore_load_closure))
      AtMentionStore_load_closure.name = "AtMentionStore_load_closure";
    $desc = $collectedClasses$.AtMentionStore_load_closure[1];
    AtMentionStore_load_closure.prototype = $desc;
    AtMentionStore_load_closure.$__fields__ = [];
    function ChaserStores(userStore, atMentionStore, locationStore, localStorageService, pullRequestsStore, updated, statusService) {
      this.userStore = userStore;
      this.atMentionStore = atMentionStore;
      this.locationStore = locationStore;
      this.localStorageService = localStorageService;
      this.pullRequestsStore = pullRequestsStore;
      this.updated = updated;
      this.statusService = statusService;
      this.$deferredAction();
    }
    ChaserStores.builtin$cls = "ChaserStores";
    if (!("name" in ChaserStores))
      ChaserStores.name = "ChaserStores";
    $desc = $collectedClasses$.ChaserStores[1];
    ChaserStores.prototype = $desc;
    ChaserStores.$__fields__ = ["userStore", "atMentionStore", "locationStore", "localStorageService", "pullRequestsStore", "updated", "statusService"];
    ChaserStores.prototype.get$userStore = function() {
      return this.userStore;
    };
    ChaserStores.prototype.get$atMentionStore = function() {
      return this.atMentionStore;
    };
    ChaserStores.prototype.get$locationStore = function() {
      return this.locationStore;
    };
    ChaserStores.prototype.get$pullRequestsStore = function() {
      return this.pullRequestsStore;
    };
    ChaserStores.prototype.get$updated = function() {
      return this.updated;
    };
    ChaserStores.prototype.get$statusService = function() {
      return this.statusService;
    };
    function LocationStore(currentView, _chaserActions, _streamController, _stream) {
      this.currentView = currentView;
      this._chaserActions = _chaserActions;
      this._streamController = _streamController;
      this._stream = _stream;
      this.$deferredAction();
    }
    LocationStore.builtin$cls = "LocationStore";
    if (!("name" in LocationStore))
      LocationStore.name = "LocationStore";
    $desc = $collectedClasses$.LocationStore[1];
    LocationStore.prototype = $desc;
    LocationStore.$__fields__ = ["currentView", "_chaserActions", "_streamController", "_stream"];
    LocationStore.prototype.get$currentView = function(receiver) {
      return this.currentView;
    };
    function LocationStore_closure(_chaser_stores$_captured_this_0) {
      this._chaser_stores$_captured_this_0 = _chaser_stores$_captured_this_0;
      this.$deferredAction();
    }
    LocationStore_closure.builtin$cls = "LocationStore_closure";
    if (!("name" in LocationStore_closure))
      LocationStore_closure.name = "LocationStore_closure";
    $desc = $collectedClasses$.LocationStore_closure[1];
    LocationStore_closure.prototype = $desc;
    LocationStore_closure.$__fields__ = ["_chaser_stores$_captured_this_0"];
    function LocationStore_closure0(_chaser_stores$_captured_this_1) {
      this._chaser_stores$_captured_this_1 = _chaser_stores$_captured_this_1;
      this.$deferredAction();
    }
    LocationStore_closure0.builtin$cls = "LocationStore_closure0";
    if (!("name" in LocationStore_closure0))
      LocationStore_closure0.name = "LocationStore_closure0";
    $desc = $collectedClasses$.LocationStore_closure0[1];
    LocationStore_closure0.prototype = $desc;
    LocationStore_closure0.$__fields__ = ["_chaser_stores$_captured_this_1"];
    function PullRequestsStore(_userStore, _locationStore, _chaserActions, PullRequestsStore_updated, PullRequestsStore_displayPullRequests, PullRequestsStore_showAll, PullRequestsStore_rowsHideable, PullRequestsStore_loading, displayPullRequests, localStorageService, updated, gitHubService, showAll, rowsHideable, loading, _chaser_store$_statusService, _streamController, _stream) {
      this._userStore = _userStore;
      this._locationStore = _locationStore;
      this._chaserActions = _chaserActions;
      this.PullRequestsStore_updated = PullRequestsStore_updated;
      this.PullRequestsStore_displayPullRequests = PullRequestsStore_displayPullRequests;
      this.PullRequestsStore_showAll = PullRequestsStore_showAll;
      this.PullRequestsStore_rowsHideable = PullRequestsStore_rowsHideable;
      this.PullRequestsStore_loading = PullRequestsStore_loading;
      this.displayPullRequests = displayPullRequests;
      this.localStorageService = localStorageService;
      this.updated = updated;
      this.gitHubService = gitHubService;
      this.showAll = showAll;
      this.rowsHideable = rowsHideable;
      this.loading = loading;
      this._chaser_store$_statusService = _chaser_store$_statusService;
      this._streamController = _streamController;
      this._stream = _stream;
      this.$deferredAction();
    }
    PullRequestsStore.builtin$cls = "PullRequestsStore";
    if (!("name" in PullRequestsStore))
      PullRequestsStore.name = "PullRequestsStore";
    $desc = $collectedClasses$.PullRequestsStore[1];
    PullRequestsStore.prototype = $desc;
    PullRequestsStore.$__fields__ = ["_userStore", "_locationStore", "_chaserActions", "PullRequestsStore_updated", "PullRequestsStore_displayPullRequests", "PullRequestsStore_showAll", "PullRequestsStore_rowsHideable", "PullRequestsStore_loading", "displayPullRequests", "localStorageService", "updated", "gitHubService", "showAll", "rowsHideable", "loading", "_chaser_store$_statusService", "_streamController", "_stream"];
    PullRequestsStore.prototype.get$updated = function() {
      return this.PullRequestsStore_updated;
    };
    PullRequestsStore.prototype.get$displayPullRequests = function() {
      return this.PullRequestsStore_displayPullRequests;
    };
    PullRequestsStore.prototype.get$showAll = function() {
      return this.PullRequestsStore_showAll;
    };
    PullRequestsStore.prototype.get$rowsHideable = function() {
      return this.PullRequestsStore_rowsHideable;
    };
    PullRequestsStore.prototype.get$loading = function() {
      return this.PullRequestsStore_loading;
    };
    function PullRequestsStore_closure(_chaser_stores$_captured_this_0) {
      this._chaser_stores$_captured_this_0 = _chaser_stores$_captured_this_0;
      this.$deferredAction();
    }
    PullRequestsStore_closure.builtin$cls = "PullRequestsStore_closure";
    if (!("name" in PullRequestsStore_closure))
      PullRequestsStore_closure.name = "PullRequestsStore_closure";
    $desc = $collectedClasses$.PullRequestsStore_closure[1];
    PullRequestsStore_closure.prototype = $desc;
    PullRequestsStore_closure.$__fields__ = ["_chaser_stores$_captured_this_0"];
    function PullRequestsStore_closure0(_chaser_stores$_captured_this_1) {
      this._chaser_stores$_captured_this_1 = _chaser_stores$_captured_this_1;
      this.$deferredAction();
    }
    PullRequestsStore_closure0.builtin$cls = "PullRequestsStore_closure0";
    if (!("name" in PullRequestsStore_closure0))
      PullRequestsStore_closure0.name = "PullRequestsStore_closure0";
    $desc = $collectedClasses$.PullRequestsStore_closure0[1];
    PullRequestsStore_closure0.prototype = $desc;
    PullRequestsStore_closure0.$__fields__ = ["_chaser_stores$_captured_this_1"];
    function UserStore(authed, githubUser, _ready, _gitHubService, _actions, _localStorageStore, _streamController, _stream) {
      this.authed = authed;
      this.githubUser = githubUser;
      this._ready = _ready;
      this._gitHubService = _gitHubService;
      this._actions = _actions;
      this._localStorageStore = _localStorageStore;
      this._streamController = _streamController;
      this._stream = _stream;
      this.$deferredAction();
    }
    UserStore.builtin$cls = "UserStore";
    if (!("name" in UserStore))
      UserStore.name = "UserStore";
    $desc = $collectedClasses$.UserStore[1];
    UserStore.prototype = $desc;
    UserStore.$__fields__ = ["authed", "githubUser", "_ready", "_gitHubService", "_actions", "_localStorageStore", "_streamController", "_stream"];
    UserStore.prototype.get$authed = function() {
      return this.authed;
    };
    UserStore.prototype.get$githubUser = function() {
      return this.githubUser;
    };
    function getPrettyDates_dateLabel() {
      this.$deferredAction();
    }
    getPrettyDates_dateLabel.builtin$cls = "getPrettyDates_dateLabel";
    if (!("name" in getPrettyDates_dateLabel))
      getPrettyDates_dateLabel.name = "getPrettyDates_dateLabel";
    $desc = $collectedClasses$.getPrettyDates_dateLabel[1];
    getPrettyDates_dateLabel.prototype = $desc;
    getPrettyDates_dateLabel.$__fields__ = [];
    function isPlusOneNeeded_closure(_utils$_box_0, _captured_userId_1) {
      this._utils$_box_0 = _utils$_box_0;
      this._captured_userId_1 = _captured_userId_1;
      this.$deferredAction();
    }
    isPlusOneNeeded_closure.builtin$cls = "isPlusOneNeeded_closure";
    if (!("name" in isPlusOneNeeded_closure))
      isPlusOneNeeded_closure.name = "isPlusOneNeeded_closure";
    $desc = $collectedClasses$.isPlusOneNeeded_closure[1];
    isPlusOneNeeded_closure.prototype = $desc;
    isPlusOneNeeded_closure.$__fields__ = ["_utils$_box_0", "_captured_userId_1"];
    function Action(_listeners) {
      this._listeners = _listeners;
      this.$deferredAction();
    }
    Action.builtin$cls = "Action";
    if (!("name" in Action))
      Action.name = "Action";
    $desc = $collectedClasses$.Action[1];
    Action.prototype = $desc;
    Action.$__fields__ = ["_listeners"];
    function Action_call_closure(_captured_payload_0) {
      this._captured_payload_0 = _captured_payload_0;
      this.$deferredAction();
    }
    Action_call_closure.builtin$cls = "Action_call_closure";
    if (!("name" in Action_call_closure))
      Action_call_closure.name = "Action_call_closure";
    $desc = $collectedClasses$.Action_call_closure[1];
    Action_call_closure.prototype = $desc;
    Action_call_closure.$__fields__ = ["_captured_payload_0"];
    function Action_call__closure(_captured_payload_1, _captured_l_2) {
      this._captured_payload_1 = _captured_payload_1;
      this._captured_l_2 = _captured_l_2;
      this.$deferredAction();
    }
    Action_call__closure.builtin$cls = "Action_call__closure";
    if (!("name" in Action_call__closure))
      Action_call__closure.name = "Action_call__closure";
    $desc = $collectedClasses$.Action_call__closure[1];
    Action_call__closure.prototype = $desc;
    Action_call__closure.$__fields__ = ["_captured_payload_1", "_captured_l_2"];
    function Action_listen_closure(_action$_captured_this_0, _captured_onData_1) {
      this._action$_captured_this_0 = _action$_captured_this_0;
      this._captured_onData_1 = _captured_onData_1;
      this.$deferredAction();
    }
    Action_listen_closure.builtin$cls = "Action_listen_closure";
    if (!("name" in Action_listen_closure))
      Action_listen_closure.name = "Action_listen_closure";
    $desc = $collectedClasses$.Action_listen_closure[1];
    Action_listen_closure.prototype = $desc;
    Action_listen_closure.$__fields__ = ["_action$_captured_this_0", "_captured_onData_1"];
    function ActionSubscription(_action$_onCancel) {
      this._action$_onCancel = _action$_onCancel;
      this.$deferredAction();
    }
    ActionSubscription.builtin$cls = "ActionSubscription";
    if (!("name" in ActionSubscription))
      ActionSubscription.name = "ActionSubscription";
    $desc = $collectedClasses$.ActionSubscription[1];
    ActionSubscription.prototype = $desc;
    ActionSubscription.$__fields__ = ["_action$_onCancel"];
    function _RedrawScheduler(_components) {
      this._components = _components;
      this.$deferredAction();
    }
    _RedrawScheduler.builtin$cls = "_RedrawScheduler";
    if (!("name" in _RedrawScheduler))
      _RedrawScheduler.name = "_RedrawScheduler";
    $desc = $collectedClasses$._RedrawScheduler[1];
    _RedrawScheduler.prototype = $desc;
    _RedrawScheduler.$__fields__ = ["_components"];
    function _RedrawScheduler__tick_closure() {
      this.$deferredAction();
    }
    _RedrawScheduler__tick_closure.builtin$cls = "_RedrawScheduler__tick_closure";
    if (!("name" in _RedrawScheduler__tick_closure))
      _RedrawScheduler__tick_closure.name = "_RedrawScheduler__tick_closure";
    $desc = $collectedClasses$._RedrawScheduler__tick_closure[1];
    _RedrawScheduler__tick_closure.prototype = $desc;
    _RedrawScheduler__tick_closure.$__fields__ = [];
    function BatchedRedraws() {
      this.$deferredAction();
    }
    BatchedRedraws.builtin$cls = "BatchedRedraws";
    if (!("name" in BatchedRedraws))
      BatchedRedraws.name = "BatchedRedraws";
    $desc = $collectedClasses$.BatchedRedraws[1];
    BatchedRedraws.prototype = $desc;
    BatchedRedraws.$__fields__ = [];
    function FluxComponent() {
      this.$deferredAction();
    }
    FluxComponent.builtin$cls = "FluxComponent";
    if (!("name" in FluxComponent))
      FluxComponent.name = "FluxComponent";
    $desc = $collectedClasses$.FluxComponent[1];
    FluxComponent.prototype = $desc;
    FluxComponent.$__fields__ = [];
    function FluxComponentCommon_BatchedRedraws() {
      this.$deferredAction();
    }
    FluxComponentCommon_BatchedRedraws.builtin$cls = "FluxComponentCommon_BatchedRedraws";
    if (!("name" in FluxComponentCommon_BatchedRedraws))
      FluxComponentCommon_BatchedRedraws.name = "FluxComponentCommon_BatchedRedraws";
    $desc = $collectedClasses$.FluxComponentCommon_BatchedRedraws[1];
    FluxComponentCommon_BatchedRedraws.prototype = $desc;
    FluxComponentCommon_BatchedRedraws.$__fields__ = [];
    function FluxComponentCommon() {
      this.$deferredAction();
    }
    FluxComponentCommon.builtin$cls = "FluxComponentCommon";
    if (!("name" in FluxComponentCommon))
      FluxComponentCommon.name = "FluxComponentCommon";
    $desc = $collectedClasses$.FluxComponentCommon[1];
    FluxComponentCommon.prototype = $desc;
    FluxComponentCommon.$__fields__ = [];
    function FluxComponentCommon_componentWillMount_closure(_component_common$_captured_this_0) {
      this._component_common$_captured_this_0 = _component_common$_captured_this_0;
      this.$deferredAction();
    }
    FluxComponentCommon_componentWillMount_closure.builtin$cls = "FluxComponentCommon_componentWillMount_closure";
    if (!("name" in FluxComponentCommon_componentWillMount_closure))
      FluxComponentCommon_componentWillMount_closure.name = "FluxComponentCommon_componentWillMount_closure";
    $desc = $collectedClasses$.FluxComponentCommon_componentWillMount_closure[1];
    FluxComponentCommon_componentWillMount_closure.prototype = $desc;
    FluxComponentCommon_componentWillMount_closure.$__fields__ = ["_component_common$_captured_this_0"];
    function FluxComponentCommon_componentWillMount__closure(_component_common$_captured_this_1) {
      this._component_common$_captured_this_1 = _component_common$_captured_this_1;
      this.$deferredAction();
    }
    FluxComponentCommon_componentWillMount__closure.builtin$cls = "FluxComponentCommon_componentWillMount__closure";
    if (!("name" in FluxComponentCommon_componentWillMount__closure))
      FluxComponentCommon_componentWillMount__closure.name = "FluxComponentCommon_componentWillMount__closure";
    $desc = $collectedClasses$.FluxComponentCommon_componentWillMount__closure[1];
    FluxComponentCommon_componentWillMount__closure.prototype = $desc;
    FluxComponentCommon_componentWillMount__closure.$__fields__ = ["_component_common$_captured_this_1"];
    function FluxComponentCommon_componentWillMount_closure0(_component_common$_captured_this_2) {
      this._component_common$_captured_this_2 = _component_common$_captured_this_2;
      this.$deferredAction();
    }
    FluxComponentCommon_componentWillMount_closure0.builtin$cls = "FluxComponentCommon_componentWillMount_closure0";
    if (!("name" in FluxComponentCommon_componentWillMount_closure0))
      FluxComponentCommon_componentWillMount_closure0.name = "FluxComponentCommon_componentWillMount_closure0";
    $desc = $collectedClasses$.FluxComponentCommon_componentWillMount_closure0[1];
    FluxComponentCommon_componentWillMount_closure0.prototype = $desc;
    FluxComponentCommon_componentWillMount_closure0.$__fields__ = ["_component_common$_captured_this_2"];
    function FluxComponentCommon_componentWillUnmount_closure() {
      this.$deferredAction();
    }
    FluxComponentCommon_componentWillUnmount_closure.builtin$cls = "FluxComponentCommon_componentWillUnmount_closure";
    if (!("name" in FluxComponentCommon_componentWillUnmount_closure))
      FluxComponentCommon_componentWillUnmount_closure.name = "FluxComponentCommon_componentWillUnmount_closure";
    $desc = $collectedClasses$.FluxComponentCommon_componentWillUnmount_closure[1];
    FluxComponentCommon_componentWillUnmount_closure.prototype = $desc;
    FluxComponentCommon_componentWillUnmount_closure.$__fields__ = [];
    function Store(_streamController, _stream) {
      this._streamController = _streamController;
      this._stream = _stream;
      this.$deferredAction();
    }
    Store.builtin$cls = "Store";
    if (!("name" in Store))
      Store.name = "Store";
    $desc = $collectedClasses$.Store[1];
    Store.prototype = $desc;
    Store.$__fields__ = ["_streamController", "_stream"];
    function Store_triggerOnAction_closure(_store$_captured_this_0, _captured_onAction_1) {
      this._store$_captured_this_0 = _store$_captured_this_0;
      this._captured_onAction_1 = _captured_onAction_1;
      this.$deferredAction();
    }
    Store_triggerOnAction_closure.builtin$cls = "Store_triggerOnAction_closure";
    if (!("name" in Store_triggerOnAction_closure))
      Store_triggerOnAction_closure.name = "Store_triggerOnAction_closure";
    $desc = $collectedClasses$.Store_triggerOnAction_closure[1];
    Store_triggerOnAction_closure.prototype = $desc;
    Store_triggerOnAction_closure.$__fields__ = ["_store$_captured_this_0", "_captured_onAction_1"];
    return [JS_CONST, Interceptor, JSBool, JSNull, JavaScriptObject, PlainJavaScriptObject, UnknownJavaScriptObject, JavaScriptFunction, JSArray, JSUnmodifiableArray, ArrayIterator, JSNumber, JSInt, JSDouble, JSString, startRootIsolate_closure, startRootIsolate_closure0, _Manager, _IsolateContext, _IsolateContext_handlePing_respond, _EventLoop, _EventLoop__runHelper_next, _IsolateEvent, _MainManagerStub, IsolateNatives__processWorkerMessage_closure, IsolateNatives__startIsolate_runStartFunction, _BaseSendPort, _NativeJsSendPort, _NativeJsSendPort_send_closure, _WorkerSendPort, RawReceivePortImpl, TimerImpl, TimerImpl_internalCallback, TimerImpl_internalCallback0, CapabilityImpl, _Serializer, _Deserializer, ConstantMapView, ConstantMap, ConstantStringMap, ConstantProtoMap, _ConstantMapKeyIterable, GeneralConstantMap, JSInvocationMirror, ReflectionInfo, Primitives_functionNoSuchMethod_closure, TypeErrorDecoder, NullError, JsNoSuchMethodError, UnknownJsTypeError, ExceptionAndStackTrace, unwrapException_saveStackTrace, _StackTrace, invokeClosure_closure, invokeClosure_closure0, invokeClosure_closure1, invokeClosure_closure2, invokeClosure_closure3, Closure, TearOffClosure, StaticClosure, BoundClosure, CastErrorImplementation, RuntimeError, RuntimeType, RuntimeFunctionType, DynamicRuntimeType, TypeImpl, JsLinkedHashMap, JsLinkedHashMap_values_closure, JsLinkedHashMap_addAll_closure, LinkedHashMapCell, LinkedHashMapKeyIterable, LinkedHashMapKeyIterator, initHooks_closure, initHooks_closure0, initHooks_closure1, JSSyntaxRegExp, _MatchImplementation, StringMatch, _StringAllMatchesIterable, _StringAllMatchesIterator, ChromeBrowserAction, ChromeBrowserAction$__closure, BrowserActionSetBadgeTextParams, ChromeStreamController, ChromeStreamController$oneArg_closure, ChromeObject, ChromeApi, Tab, ListIterable, SubListIterable, ListIterator, MappedIterable, EfficientLengthMappedIterable, MappedIterator, MappedListIterable, WhereIterable, WhereIterator, FixedLengthListMixin, ReversedListIterable, Symbol, _LazyMangledNamesMap, _LazyMangledInstanceNamesMap, _AsyncRun__initializeScheduleImmediate_internalCallback, _AsyncRun__initializeScheduleImmediate_closure, _AsyncRun__scheduleImmediateJsOverride_internalCallback, _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, _awaitOnObject_closure, _awaitOnObject_closure0, _wrapJsFunctionForAsync_closure, _asyncStarHelper_closure, _asyncStarHelper_closure0, _AsyncStarStreamController, _AsyncStarStreamController__resumeBody, _AsyncStarStreamController__resumeBody_closure, _AsyncStarStreamController_closure0, _AsyncStarStreamController_closure1, _AsyncStarStreamController_closure, _AsyncStarStreamController__closure, _IterationMarker, _BroadcastStream, _BroadcastSubscription, _BroadcastStreamController, _SyncBroadcastStreamController, _SyncBroadcastStreamController__sendData_closure, _SyncBroadcastStreamController__sendError_closure, _SyncBroadcastStreamController__sendDone_closure, _AsyncBroadcastStreamController, _AsBroadcastStreamController, Future, Future_Future$microtask_closure, Future_wait_handleError, Future_wait_closure, _Completer, _AsyncCompleter, _SyncCompleter, _FutureListener, _Future, _Future__addListener_closure, _Future__chainForeignFuture_closure, _Future__chainForeignFuture_closure0, _Future__chainForeignFuture_closure1, _Future__asyncComplete_closure, _Future__asyncComplete_closure0, _Future__asyncCompleteError_closure, _Future__propagateToListeners_handleValueCallback, _Future__propagateToListeners_handleError, _Future__propagateToListeners_handleWhenCompleteCallback, _Future__propagateToListeners_handleWhenCompleteCallback_closure, _Future__propagateToListeners_handleWhenCompleteCallback_closure0, _AsyncCallbackEntry, Stream, Stream_contains_closure, Stream_contains__closure, Stream_contains__closure0, Stream_contains_closure0, Stream_forEach_closure, Stream_forEach__closure, Stream_forEach__closure0, Stream_forEach_closure0, Stream_length_closure, Stream_length_closure0, Stream_isEmpty_closure, Stream_isEmpty_closure0, Stream_toList_closure, Stream_toList_closure0, Stream_last_closure, Stream_last_closure0, StreamSubscription, _StreamController, _StreamController__subscribe_closure, _StreamController__recordCancel_complete, _SyncStreamControllerDispatch, _AsyncStreamControllerDispatch, _AsyncStreamController, _SyncStreamController, _ControllerStream, _ControllerSubscription, _AddStreamState, _AddStreamState_makeErrorHandler_closure, _AddStreamState_cancel_closure, _StreamControllerAddStreamState, _EventSink, _BufferingStreamSubscription, _BufferingStreamSubscription__sendError_sendError, _BufferingStreamSubscription__sendDone_sendDone, _StreamImpl, _DelayedEvent, _DelayedData, _DelayedError, _DelayedDone, _PendingEvents, _PendingEvents_schedule_closure, _StreamImplEvents, _DoneStreamSubscription, _AsBroadcastStream, _BroadcastSubscriptionWrapper, _StreamIteratorImpl, _cancelAndError_closure, _cancelAndErrorClosure_closure, _cancelAndValue_closure, _ForwardingStream, _ForwardingStreamSubscription, _WhereStream, _MapStream, AsyncError, _ZoneFunction, ZoneDelegate, Zone, _Zone, _rootHandleUncaughtError_closure, _RootZone, _RootZone_bindCallback_closure, _RootZone_bindCallback_closure0, _RootZone_bindUnaryCallback_closure, _HashMap, _IdentityHashMap, HashMapKeyIterable, HashMapKeyIterator, _LinkedIdentityHashMap, _LinkedHashSet, LinkedHashSetCell, LinkedHashSetIterator, _HashSetBase, LinkedHashMap_LinkedHashMap$from_closure, ListMixin, _UnmodifiableMapMixin, MapView, UnmodifiableMapView, Maps_mapToString_closure, ListQueue, _ListQueueIterator, SetMixin, SetBase, _JsonMap, _JsonMapKeyIterable, Codec, Converter, Encoding, JsonUnsupportedObjectError, JsonCyclicError, JsonCodec, JsonEncoder, JsonDecoder, _JsonStringifier, _JsonStringifier_writeMap_closure, _JsonStringStringifier, Utf8Codec, Utf8Encoder, _Utf8Encoder, NoSuchMethodError_toString_closure, bool, Comparable, DateTime, DateTime_parse_parseIntOrZero, DateTime_parse_parseMilliseconds, $double, Duration, Duration_toString_sixDigits, Duration_toString_twoDigits, Error, NullThrownError, ArgumentError, RangeError, IndexError, NoSuchMethodError, UnsupportedError, UnimplementedError, StateError, ConcurrentModificationError, OutOfMemoryError, StackOverflowError, CyclicInitializationError, _Exception, FormatException, IntegerDivisionByZeroException, Expando, Function, $int, Iterable, Iterator, List, Map, Null, num, Object, Match, StackTrace, String, Runes, RuneIterator, StringBuffer, Symbol0, Uri, Uri_parse_parseAuth, Uri__makePath_closure, Uri__makeQuery_closure, Uri_hashCode_combine, Uri_parseIPv4Address_error, Uri_parseIPv4Address_closure, Uri_parseIPv6Address_error, Uri_parseIPv6Address_parseHex, Uri__uriEncode_byteToHex, HtmlElement, _EntryArray, AnchorElement, AnimationPlayer, AreaElement, AudioTrack, AudioTrackList, BaseElement, Blob, BodyElement, ButtonElement, CacheStorage, CanvasElement, CanvasRenderingContext2D, CharacterData, Credential, CryptoKey, CssRule, CssStyleDeclaration, Interceptor_CssStyleDeclarationBase, CssStyleDeclarationBase, CustomEvent, DataTransfer, DataTransferItem, DataTransferItemList, DeviceLightEvent, Document, DocumentFragment, DomException, DomIterator, DomRectReadOnly, DomSettableTokenList, DomStringList, Interceptor_ListMixin, Interceptor_ListMixin_ImmutableListMixin, DomTokenList, Element, EmbedElement, Entry, ErrorEvent, Event, EventSource, EventTarget, FieldSetElement, File, FileList, Interceptor_ListMixin0, Interceptor_ListMixin_ImmutableListMixin0, FileReader, FileStream, FileWriter, FocusEvent, FontFace, FontFaceSet, FormElement, Gamepad, GamepadButton, GeofencingRegion, Headers, History, HtmlCollection, Interceptor_ListMixin1, Interceptor_ListMixin_ImmutableListMixin1, HtmlDocument, HttpRequest, HttpRequest_request_closure, HttpRequest_request_closure0, HttpRequestEventTarget, IFrameElement, ImageData, ImageElement, InputElement, InputMethodContext, KeyboardEvent, KeygenElement, LIElement, LinkElement, Location, MapElement, MediaController, MediaElement, MediaKeySession, MediaList, MediaStream, MediaStreamEvent, MediaStreamTrack, MenuElement, MenuItemElement, MessagePort, MetaElement, MeterElement, MidiInputMap, MidiOutput, MidiOutputMap, MidiPort, MimeType, MimeTypeArray, Interceptor_ListMixin2, Interceptor_ListMixin_ImmutableListMixin2, MouseEvent, MutationRecord, Navigator, NetworkInformation, Node, NodeList, Interceptor_ListMixin3, Interceptor_ListMixin_ImmutableListMixin3, Notification, OListElement, ObjectElement, OptionElement, OutputElement, ParamElement, Path2D, PerformanceNavigation, Plugin, PluginArray, Interceptor_ListMixin4, Interceptor_ListMixin_ImmutableListMixin4, PopStateEvent, ProcessingInstruction, ProgressElement, ReadableStream, RelatedEvent, RtcDataChannel, RtcPeerConnection, RtcSessionDescription, RtcStatsReport, RtcStatsResponse, ScreenOrientation, ScriptElement, SelectElement, Selection, ServiceWorkerClient, SharedWorker, SourceBuffer, SourceBufferList, EventTarget_ListMixin, EventTarget_ListMixin_ImmutableListMixin, SourceElement, SourceInfo, SpeechGrammar, SpeechGrammarList, Interceptor_ListMixin5, Interceptor_ListMixin_ImmutableListMixin5, SpeechRecognitionError, SpeechRecognitionResult, SpeechSynthesis, Storage, Storage_keys_closure, StorageEvent, StyleElement, StyleMedia, StyleSheet, TemplateElement, TextAreaElement, TextTrack, TextTrackCue, TextTrackCueList, Interceptor_ListMixin6, Interceptor_ListMixin_ImmutableListMixin6, TextTrackList, EventTarget_ListMixin0, EventTarget_ListMixin_ImmutableListMixin0, TimeRanges, Touch, TouchEvent, TouchList, Interceptor_ListMixin7, Interceptor_ListMixin_ImmutableListMixin7, UIEvent, Url, VideoElement, VideoTrack, VideoTrackList, VttRegion, VttRegionList, WebSocket, WheelEvent, Window, Window_animationFrame_closure, Worker, WorkerGlobalScope, _Attr, _CSSValue, _ClientRect, _ClientRectList, Interceptor_ListMixin8, Interceptor_ListMixin_ImmutableListMixin8, _CssRuleList, Interceptor_ListMixin9, Interceptor_ListMixin_ImmutableListMixin9, _CssValueList, _CSSValue_ListMixin, _CSSValue_ListMixin_ImmutableListMixin, _DocumentType, _DomRect, _GamepadList, Interceptor_ListMixin10, Interceptor_ListMixin_ImmutableListMixin10, _HTMLFrameSetElement, _NamedNodeMap, Interceptor_ListMixin11, Interceptor_ListMixin_ImmutableListMixin11, _ServiceWorker, _SpeechRecognitionResultList, Interceptor_ListMixin12, Interceptor_ListMixin_ImmutableListMixin12, _StyleSheetList, Interceptor_ListMixin13, Interceptor_ListMixin_ImmutableListMixin13, _WorkerLocation, _WorkerNavigator, _AttributeMap, _ElementAttributeMap, _EventStream, _EventStreamSubscription, ImmutableListMixin, FixedSizeListIterator, _DOMWindowCrossFrame, _LocationCrossFrame, Cursor, CursorWithValue, Database, _completeRequest_closure, Index, KeyRange, ObjectStore, Request, Transaction, AElement, AltGlyphElement, Angle, AnimationElement, FEBlendElement, FEColorMatrixElement, FEComponentTransferElement, FECompositeElement, FEConvolveMatrixElement, FEDiffuseLightingElement, FEDisplacementMapElement, FEFloodElement, FEGaussianBlurElement, FEImageElement, FEMergeElement, FEMorphologyElement, FEOffsetElement, FESpecularLightingElement, FETileElement, FETurbulenceElement, FilterElement, GraphicsElement, ImageElement0, Length, LengthList, Interceptor_ListMixin14, Interceptor_ListMixin_ImmutableListMixin14, MarkerElement, MaskElement, Number, NumberList, Interceptor_ListMixin15, Interceptor_ListMixin_ImmutableListMixin15, PathSeg, PathSegList, Interceptor_ListMixin16, Interceptor_ListMixin_ImmutableListMixin16, PatternElement, PointList, ScriptElement0, StringList, Interceptor_ListMixin17, Interceptor_ListMixin_ImmutableListMixin17, StyleElement0, SvgElement, SvgSvgElement, SymbolElement, TextContentElement, TextPathElement, TextPositioningElement, Transform, TransformList, Interceptor_ListMixin18, Interceptor_ListMixin_ImmutableListMixin18, UseElement, ViewElement, ViewSpec, _GradientElement, _SVGCursorElement, _SVGFEDropShadowElement, _SVGGlyphRefElement, _SVGMPathElement, AudioBuffer, AudioNode, AudioParam, AudioSourceNode, BiquadFilterNode, MediaStreamAudioDestinationNode, OscillatorNode, ActiveInfo, RenderingContext, SqlResultSetRowList, Interceptor_ListMixin19, Interceptor_ListMixin_ImmutableListMixin19, Capability, JsObject, JsObject__convertDataTree__convert, JsFunction, JsArray, JsObject_ListMixin, _convertToJS_closure, _convertToJS_closure0, _wrapToDart_closure, _wrapToDart_closure0, _wrapToDart_closure1, _RectangleBase, Rectangle, NativeByteBuffer, NativeTypedData, NativeByteData, NativeTypedArray, NativeTypedArrayOfDouble, NativeTypedArray_ListMixin, NativeTypedArray_ListMixin_FixedLengthListMixin, NativeTypedArrayOfInt, NativeTypedArray_ListMixin0, NativeTypedArray_ListMixin_FixedLengthListMixin0, NativeFloat32List, NativeFloat64List, NativeInt16List, NativeInt32List, NativeInt8List, NativeUint16List, NativeUint32List, NativeUint8ClampedList, NativeUint8List, DateSymbols, Fluri, FluriMixin, _StructuredClone, _StructuredClone_walk_closure, _AcceptStructuredClone, _AcceptStructuredClone_walk_closure, _StructuredCloneDart2Js, _AcceptStructuredCloneDart2Js, convertNativePromiseToDartFuture_closure, convertNativePromiseToDartFuture_closure0, DateFormat, DateFormat_format_closure, DateFormat__fieldConstructors_closure, DateFormat__fieldConstructors_closure0, DateFormat__fieldConstructors_closure1, _DateFormatField, _DateFormatLiteralField, _DateFormatQuotedField, _DateFormatPatternField, UninitializedLocaleData, LocaleDataException, closure10, _Label, Store0, _MapStore, LocalStorageStore, Component, SyntheticEvent, SyntheticClipboardEvent, SyntheticKeyboardEvent, SyntheticFocusEvent, SyntheticFormEvent, SyntheticDataTransfer, SyntheticMouseEvent, SyntheticTouchEvent, SyntheticUIEvent, SyntheticWheelEvent, closure1, closure0, ReactComponentFactoryProxy, ReactDartComponentFactoryProxy, ReactDartComponentFactoryProxy_generateExtendedJsProps_closure, _registerComponent_closure, _registerComponent__closure8, _registerComponent_closure0, _registerComponent__closure7, _registerComponent___closure, _registerComponent___closure0, _registerComponent___closure1, _registerComponent_closure1, _registerComponent__closure6, _registerComponent_closure2, _registerComponent__closure5, _registerComponent__getNextProps, _registerComponent__afterPropsChange, _registerComponent_closure3, _registerComponent__closure4, _registerComponent_closure4, _registerComponent__closure3, _registerComponent_closure5, _registerComponent__closure2, _registerComponent_closure6, _registerComponent__closure1, _registerComponent_closure7, _registerComponent__closure0, _registerComponent_closure8, _registerComponent__closure, ReactDomComponentFactoryProxy, _convertBoundValues_closure, _convertEventHandlers_closure, _convertEventHandlers__closure, _convertEventHandlers___closure, syntheticClipboardEventFactory_closure, syntheticClipboardEventFactory_closure0, syntheticKeyboardEventFactory_closure, syntheticKeyboardEventFactory_closure0, syntheticFocusEventFactory_closure, syntheticFocusEventFactory_closure0, syntheticFormEventFactory_closure, syntheticFormEventFactory_closure0, syntheticMouseEventFactory_closure, syntheticMouseEventFactory_closure0, syntheticTouchEventFactory_closure, syntheticTouchEventFactory_closure0, syntheticUIEventFactory_closure, syntheticUIEventFactory_closure0, syntheticWheelEventFactory_closure, syntheticWheelEventFactory_closure0, _MissingJsMemberError, closure14, closure3, EmptyObject, jsify_closure, React, ReactDom, ReactDomServer, ReactClass, ReactClassConfig, ReactElementStore, ReactElement, ReactComponent, InteropProps, ReactDartComponentInternal, markChildrenValidated_closure, SyntheticEvent0, SyntheticClipboardEvent0, SyntheticKeyboardEvent0, SyntheticFocusEvent0, SyntheticFormEvent0, SyntheticDataTransfer0, SyntheticMouseEvent0, SyntheticTouchEvent0, SyntheticUIEvent0, SyntheticWheelEvent0, closure2, closure13, _Alert, _Alert_componentDidMount_closure, closure, _ChaserApp, _ChaserApp_componentDidMount_closure, closure7, _ChaserGrid, _ChaserGrid_render_closure, _ChaserGrid_render_closure0, closure9, _ChaserRow, closure6, _Footer, closure5, _Header, closure12, _Loading, closure4, _Login, closure8, _PopOver, _PopOver_componentDidMount_closure, closure11, _PullRequestStatus, _PullRequestStatus_render_closure, _PullRequestStatus_render__closure, _PullRequestStatus_render__closure0, _PullRequestStatus_render__closure1, _PullRequestStatus_render__closure2, _PullRequestStatus_render__closure3, _PullRequestStatus_render__closure4, AtMentionActions, AuthActions, LocationActions, PopoverProps, PopoverActions, ChaserActions, ChaserViews, GitHubCommit, GitHubComment, GitHubLabel, GitHubPullRequest, GitHubSearchResult, GitHubSearchResult_closure, GitHubStatus, GitHubUser, StatusService, GitHubService, GitHubService_getPullRequestComments_closure, GitHubService_getPullRequestCommits_closure, GitHubService_searchForOpenPullRequests_closure, GitHubService_searchForAtMentions_closure, GitHubService_getPullRequestStatus_closure, LocationStorageService, LocationStorageService_atMentionPullRequests_closure, LocationStorageService_atMentionPullRequests_closure0, ChaserStore, ChaserStore_closure, ChaserStore_getPullRequestsStatus_closure, ChaserStore_getPullRequestsStatus__closure, AtMentionStore, AtMentionStore_closure, AtMentionStore__displayAll_closure, AtMentionStore__getChaserAssetsFromGithub_closure, AtMentionStore_load_closure, ChaserStores, LocationStore, LocationStore_closure, LocationStore_closure0, PullRequestsStore, PullRequestsStore_closure, PullRequestsStore_closure0, UserStore, getPrettyDates_dateLabel, isPlusOneNeeded_closure, Action, Action_call_closure, Action_call__closure, Action_listen_closure, ActionSubscription, _RedrawScheduler, _RedrawScheduler__tick_closure, BatchedRedraws, FluxComponent, FluxComponentCommon_BatchedRedraws, FluxComponentCommon, FluxComponentCommon_componentWillMount_closure, FluxComponentCommon_componentWillMount__closure, FluxComponentCommon_componentWillMount_closure0, FluxComponentCommon_componentWillUnmount_closure, Store, Store_triggerOnAction_closure];
  };
  function setupProgram(programData, typesOffset) {
    "use strict";
    function generateAccessor(fieldDescriptor, accessors, cls) {
      var fieldInformation = fieldDescriptor.split("-");
      var field = fieldInformation[0];
      var len = field.length;
      var code = field.charCodeAt(len - 1);
      var reflectable;
      if (fieldInformation.length > 1)
        reflectable = true;
      else
        reflectable = false;
      code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
      if (code) {
        var getterCode = code & 3;
        var setterCode = code >> 2;
        var accessorName = field = field.substring(0, len - 1);
        var divider = field.indexOf(":");
        if (divider > 0) {
          accessorName = field.substring(0, divider);
          field = field.substring(divider + 1);
        }
        if (getterCode) {
          var args = getterCode & 2 ? "receiver" : "";
          var receiver = getterCode & 1 ? "this" : "receiver";
          var body = "return " + receiver + "." + field;
          var property = cls + ".prototype.get$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
        if (setterCode) {
          var args = setterCode & 2 ? "receiver, value" : "value";
          var receiver = setterCode & 1 ? "this" : "receiver";
          var body = receiver + "." + field + " = value";
          var property = cls + ".prototype.set$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
      }
      return field;
    }
    function defineClass(name, fields) {
      var accessors = [];
      var str = "function " + name + "(";
      var body = "";
      var fieldNames = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], accessors, name);
        fieldNames += "'" + field + "',";
        var parameter = "p_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      if (supportsDirectProtoAccess)
        body += "this." + "$deferredAction" + "();";
      str += ") {\n" + body + "}\n";
      str += name + ".builtin$cls=\"" + name + "\";\n";
      str += "$desc=$collectedClasses." + name + "[1];\n";
      str += name + ".prototype = $desc;\n";
      if (typeof defineClass.name != "string")
        str += name + ".name=\"" + name + "\";\n";
      str += name + "." + "$__fields__" + "=[" + fieldNames + "];\n";
      str += accessors.join("");
      return str;
    }
    init.createNewIsolate = function() {
      return new Isolate();
    };
    init.classIdExtractor = function(o) {
      return o.constructor.name;
    };
    init.classFieldsExtractor = function(o) {
      var fieldNames = o.constructor.$__fields__;
      if (!fieldNames)
        return [];
      var result = [];
      result.length = fieldNames.length;
      for (var i = 0; i < fieldNames.length; i++)
        result[i] = o[fieldNames[i]];
      return result;
    };
    init.instanceFromClassId = function(name) {
      return new init.allClasses[name]();
    };
    init.initializeEmptyInstance = function(name, o, fields) {
      init.allClasses[name].apply(o, fields);
      return o;
    };
    var inheritFrom = supportsDirectProtoAccess ? function(constructor, superConstructor) {
      var prototype = constructor.prototype;
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
      prototype["$is" + constructor.name] = constructor;
      return convertToFastObject(prototype);
    } : function() {
      function tmp() {
      }
      return function(constructor, superConstructor) {
        tmp.prototype = superConstructor.prototype;
        var object = new tmp();
        convertToSlowObject(object);
        var properties = constructor.prototype;
        var members = Object.keys(properties);
        for (var i = 0; i < members.length; i++) {
          var member = members[i];
          object[member] = properties[member];
        }
        object["$is" + constructor.name] = constructor;
        object.constructor = constructor;
        constructor.prototype = object;
        return object;
      };
    }();
    function finishClasses(processedClasses) {
      var allClasses = init.allClasses;
      var constructors = init.precompiled(processedClasses.collected);
      for (var i = 0; i < constructors.length; i++) {
        var constructor = constructors[i];
        var cls = constructor.name;
        var desc = processedClasses.collected[cls];
        var globalObject = desc[0];
        desc = desc[1];
        allClasses[cls] = constructor;
        globalObject[cls] = constructor;
      }
      constructors = null;
      var finishedClasses = init.finishedClasses;
      function finishClass(cls) {
        if (finishedClasses[cls])
          return;
        finishedClasses[cls] = true;
        var superclass = processedClasses.pending[cls];
        if (superclass && superclass.indexOf("+") > 0) {
          var s = superclass.split("+");
          superclass = s[0];
          var mixinClass = s[1];
          finishClass(mixinClass);
          var mixin = allClasses[mixinClass];
          var mixinPrototype = mixin.prototype;
          var clsPrototype = allClasses[cls].prototype;
          var properties = Object.keys(mixinPrototype);
          for (var i = 0; i < properties.length; i++) {
            var d = properties[i];
            if (!hasOwnProperty.call(clsPrototype, d))
              clsPrototype[d] = mixinPrototype[d];
          }
        }
        if (!superclass || typeof superclass != "string") {
          var constructor = allClasses[cls];
          var prototype = constructor.prototype;
          prototype.constructor = constructor;
          prototype.$isObject = constructor;
          prototype.$deferredAction = function() {
          };
          return;
        }
        finishClass(superclass);
        var superConstructor = allClasses[superclass];
        if (!superConstructor)
          superConstructor = existingIsolateProperties[superclass];
        var constructor = allClasses[cls];
        var prototype = inheritFrom(constructor, superConstructor);
        if (mixinPrototype)
          prototype.$deferredAction = mixinDeferredActionHelper(mixinPrototype, prototype);
        if (Object.prototype.hasOwnProperty.call(prototype, "%")) {
          var nativeSpec = prototype["%"].split(";");
          if (nativeSpec[0]) {
            var tags = nativeSpec[0].split("|");
            for (var i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = true;
            }
          }
          if (nativeSpec[1]) {
            tags = nativeSpec[1].split("|");
            if (nativeSpec[2]) {
              var subclasses = nativeSpec[2].split("|");
              for (var i = 0; i < subclasses.length; i++) {
                var subclass = allClasses[subclasses[i]];
                subclass.$nativeSuperclassTag = tags[0];
              }
            }
            for (i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = false;
            }
          }
          prototype.$deferredAction();
        }
        if (prototype.$isInterceptor)
          prototype.$deferredAction();
      }
      var objectClassObject = processedClasses.collected.Object, shortNames = "set$dartDefaultProps,set$isMounted,set$key,set$next,set$props,set$ref,set$validated,get$$char,get$altKey,get$attributes,get$avatarUrl,get$body,get$bubbles,get$button,get$buttons,get$cancelable,get$changedTouches,get$charCode,get$checked,get$clientX,get$clientY,get$clipboardData,get$content,get$context,get$ctrlKey,get$currentTarget,get$currentView,get$dartDefaultProps,get$dataTransfer,get$defaultPrevented,get$deltaMode,get$deltaX,get$deltaY,get$deltaZ,get$description,get$detail,get$displayName,get$dropEffect,get$effectAllowed,get$error,get$eventPhase,get$files,get$id,get$internal,get$isEmpty,get$isMounted,get$isNotEmpty,get$isTrusted,get$iterator,get$key,get$keyCode,get$keys,get$last,get$length,get$locale,get$location,get$metaKey,get$name,get$nativeEvent,get$next,get$pageX,get$pageY,get$props,get$refs,get$relatedTarget,get$repeat,get$response,get$result,get$runes,get$screenX,get$screenY,get$shiftKey,get$state,get$stream,get$target,get$targetTouches,get$timeStamp,get$title,get$touches,get$type,get$types,get$value,get$view,$add,$and,$ge,$gt,$index,$indexSet,$le,$lt,$mul,$not,$or,$shl,$shr,$sub,$tdiv,$xor,__isolate_helper$_add$1,_async$_add$1,add$1,addStream$1,allMatches$1,cancel$0,close$0,codeUnitAt$1,compareTo$1,complete$0,complete$1,contains$1,containsKey$1,forEach$1,format$1,map$1,matchAsPrefix$2,pause$0,preventDefault$0,putIfAbsent$2,remove$1,render$0,replaceAll$2,resume$0,save$2,send$1,setState$1,sort$1,startsWith$1,stopPropagation$0,sublist$1,substring$1,substring$2,toList$0,toLowerCase$0,toUpperCase$0,where$1,set$_async$_next,set$_async$_previous,set$_collection$_next,set$_collection$_previous,set$_contents,set$_eventState,set$_isChained,set$_next,set$_nextListener,set$_previous,set$actionNeeded,set$component,set$githubPullRequest,set$hashMapCellValue,set$initialized,set$isSuspended,set$nextProps,set$varData,get$AMPMS,get$ERANAMES,get$ERAS,get$MONTHS,get$NARROWMONTHS,get$QUARTERS,get$SHORTMONTHS,get$SHORTQUARTERS,get$SHORTWEEKDAYS,get$STANDALONEMONTHS,get$STANDALONENARROWMONTHS,get$STANDALONENARROWWEEKDAYS,get$STANDALONESHORTMONTHS,get$STANDALONESHORTWEEKDAYS,get$STANDALONEWEEKDAYS,get$WEEKDAYS,get$__internal$_name,get$_async$_next,get$_async$_previous,get$_collection$_element,get$_collection$_next,get$_collection$_previous,get$_contents,get$_duration,get$_error,get$_errorTest,get$_eventState,get$_hasError,get$_id,get$_isClosed,get$_isFiring,get$_isInputPaused,get$_next,get$_nextListener,get$_onError,get$_onValue,get$_previous,get$_removeAfterFiring,get$_scheduleMicrotask,get$_value,get$_whenCompleteAction,get$_zone,get$actionNeeded,get$alerts,get$atMentionActions,get$atMentionPullRequests,get$atMentionStore,get$authActions,get$authed,get$cancelationCompleter,get$closePopover,get$comments,get$commentsUrl,get$commitsUrl,get$component,get$controlPort,get$current,get$delayedEvents,get$displayPullRequests,get$errorZone,get$future,get$githubPullRequest,get$githubStatus,get$githubUser,get$handlesComplete,get$handlesValue,get$hasErrorTest,get$hashMapCellKey,get$hashMapCellValue,get$htmlUrl,get$inMilliseconds,get$isCanceled,get$isClosed,get$isMethod,get$isPaused,get$isReady,get$isolateStatics,get$loading,get$locationActions,get$locationStore,get$login,get$memberName,get$mergeable,get$millisecondsSinceEpoch,get$namedArguments,get$nextProps,get$nextState,get$popoverActions,get$positionalArguments,get$prevState,get$pullRequestUrl,get$pullRequestsStore,get$rowsHideable,get$showAll,get$showPopover,get$stackTrace,get$statusService,get$statusesUrl,get$targetUrl,get$updated,get$updatedAtPretty,get$user,get$userStore,get$varData,get$zone,__isolate_helper$_close$0,_addError$2,_addPending$1,_close$0,_complete$1,_completeError$2,_completeWithValue$1,_expectsEvent$1,_removeListeners$0,_setErrorObject$1,_setRemoveAfterFiring$0,_setValue$1,_toggleEventId$0,_updateGlobalState$0,addError$2,auth$1,callMethod$2,callback$0,cancelSchedule$0,changeViewNext$0,changeViewPrevious$0,completeError$2,componentDidMount$0,componentDidUpdate$2,componentWillMount$0,componentWillReceiveProps$1,componentWillUnmount$0,componentWillUpdate$2,createTimer$2,displayAll$1,errorCallback$2,eval$1,fullPattern$0,getByKey$1,getDefaultProps$0,handleControlMessage$1,handleUncaughtError$2,inSameErrorZone$1,initComponentInternal$5,initStateInternal$0,listen$1,lookup$1,moveNext$0,perform$1,process$0,refreshView$0,registerBinaryCallback$1,registerCallback$1,registerUnaryCallback$1,run$1,runBinary$3,runBinaryGuarded$3,runGuarded$1,runUnary$2,runUnaryGuarded$2,schedule$1,scheduleMicrotask$1,shouldComponentUpdate$2,showPopover$1,then$1,toJson$0,toMap$0,toRti$0,transferComponentState$0,whenComplete$1".split(",");
      var longNames = "dartDefaultProps=,isMounted=,key=,next=,props=,ref=,validated=,char,altKey,attributes,avatarUrl,body,bubbles,button,buttons,cancelable,changedTouches,charCode,checked,clientX,clientY,clipboardData,content,context,ctrlKey,currentTarget,currentView,dartDefaultProps,dataTransfer,defaultPrevented,deltaMode,deltaX,deltaY,deltaZ,description,detail,displayName,dropEffect,effectAllowed,error,eventPhase,files,id,internal,isEmpty,isMounted,isNotEmpty,isTrusted,iterator,key,keyCode,keys,last,length,locale,location,metaKey,name,nativeEvent,next,pageX,pageY,props,refs,relatedTarget,repeat,response,result,runes,screenX,screenY,shiftKey,state,stream,target,targetTouches,timeStamp,title,touches,type,types,value,view,+,&,>=,>,[],[]=,<=,<,*,~,|,<<,>>,-,~/,^,_add,_add,add,addStream,allMatches,cancel,close,codeUnitAt,compareTo,complete,complete,contains,containsKey,forEach,format,map,matchAsPrefix,pause,preventDefault,putIfAbsent,remove,render,replaceAll,resume,save,send,setState,sort,startsWith,stopPropagation,sublist,substring,substring,toList,toLowerCase,toUpperCase,where,_next=,_previous=,_next=,_previous=,_contents=,_eventState=,_isChained=,_next=,_nextListener=,_previous=,actionNeeded=,component=,githubPullRequest=,hashMapCellValue=,initialized=,isSuspended=,nextProps=,varData=,AMPMS,ERANAMES,ERAS,MONTHS,NARROWMONTHS,QUARTERS,SHORTMONTHS,SHORTQUARTERS,SHORTWEEKDAYS,STANDALONEMONTHS,STANDALONENARROWMONTHS,STANDALONENARROWWEEKDAYS,STANDALONESHORTMONTHS,STANDALONESHORTWEEKDAYS,STANDALONEWEEKDAYS,WEEKDAYS,_name,_next,_previous,_element,_next,_previous,_contents,_duration,_error,_errorTest,_eventState,_hasError,_id,_isClosed,_isFiring,_isInputPaused,_next,_nextListener,_onError,_onValue,_previous,_removeAfterFiring,_scheduleMicrotask,_value,_whenCompleteAction,_zone,actionNeeded,alerts,atMentionActions,atMentionPullRequests,atMentionStore,authActions,authed,cancelationCompleter,closePopover,comments,commentsUrl,commitsUrl,component,controlPort,current,delayedEvents,displayPullRequests,errorZone,future,githubPullRequest,githubStatus,githubUser,handlesComplete,handlesValue,hasErrorTest,hashMapCellKey,hashMapCellValue,htmlUrl,inMilliseconds,isCanceled,isClosed,isMethod,isPaused,isReady,isolateStatics,loading,locationActions,locationStore,login,memberName,mergeable,millisecondsSinceEpoch,namedArguments,nextProps,nextState,popoverActions,positionalArguments,prevState,pullRequestUrl,pullRequestsStore,rowsHideable,showAll,showPopover,stackTrace,statusService,statusesUrl,targetUrl,updated,updatedAtPretty,user,userStore,varData,zone,_close,_addError,_addPending,_close,_complete,_completeError,_completeWithValue,_expectsEvent,_removeListeners,_setErrorObject,_setRemoveAfterFiring,_setValue,_toggleEventId,_updateGlobalState,addError,auth,callMethod,callback,cancelSchedule,changeViewNext,changeViewPrevious,completeError,componentDidMount,componentDidUpdate,componentWillMount,componentWillReceiveProps,componentWillUnmount,componentWillUpdate,createTimer,displayAll,errorCallback,eval,fullPattern,getByKey,getDefaultProps,handleControlMessage,handleUncaughtError,inSameErrorZone,initComponentInternal,initStateInternal,listen,lookup,moveNext,perform,process,refreshView,registerBinaryCallback,registerCallback,registerUnaryCallback,run,runBinary,runBinaryGuarded,runGuarded,runUnary,runUnaryGuarded,schedule,scheduleMicrotask,shouldComponentUpdate,showPopover,then,toJson,toMap,toRti,transferComponentState,whenComplete".split(",");
      if (objectClassObject instanceof Array)
        objectClassObject = objectClassObject[1];
      if (objectClassObject)
        for (var j = 0; j < shortNames.length; j++) {
          var type = 0;
          var shortName = shortNames[j];
          if (shortName.indexOf("get$") == 0)
            type = 1;
          if (shortName.indexOf("set$") == 0)
            type = 2;
          if (j < 136)
            objectClassObject[shortName] = function(name, shortName, type) {
              return function(receiver) {
                return this.noSuchMethod$1(receiver, H.createInvocationMirror(name, shortName, type, Array.prototype.slice.call(arguments, 1), []));
              };
            }(longNames[j], shortName, type);
          else
            objectClassObject[shortName] = function(name, shortName, type) {
              return function() {
                return this.noSuchMethod$1(this, H.createInvocationMirror(name, shortName, type, Array.prototype.slice.call(arguments, 0), []));
              };
            }(longNames[j], shortName, type);
        }
      var properties = Object.keys(processedClasses.pending);
      for (var i = 0; i < properties.length; i++)
        finishClass(properties[i]);
    }
    function finishAddStubsHelper() {
      var prototype = this;
      while (!prototype.hasOwnProperty("$deferredAction"))
        prototype = prototype.__proto__;
      delete prototype.$deferredAction;
      var properties = Object.keys(prototype);
      for (var index = 0; index < properties.length; index++) {
        var property = properties[index];
        var firstChar = property.charCodeAt(0);
        var elem;
        if (property !== "^" && property !== "$reflectable" && firstChar !== 43 && firstChar !== 42 && (elem = prototype[property]) != null && elem.constructor === Array && property !== "<>")
          addStubs(prototype, elem, property, false, []);
      }
      convertToFastObject(prototype);
      prototype = prototype.__proto__;
      prototype.$deferredAction();
    }
    function mixinDeferredActionHelper(mixinPrototype, targetPrototype) {
      var chain;
      if (targetPrototype.hasOwnProperty("$deferredAction"))
        chain = targetPrototype.$deferredAction;
      return function foo() {
        var prototype = this;
        while (!prototype.hasOwnProperty("$deferredAction"))
          prototype = prototype.__proto__;
        if (chain)
          prototype.$deferredAction = chain;
        else {
          delete prototype.$deferredAction;
          convertToFastObject(prototype);
        }
        mixinPrototype.$deferredAction();
        prototype.$deferredAction();
      };
    }
    function processClassData(cls, descriptor, processedClasses) {
      descriptor = convertToSlowObject(descriptor);
      var previousProperty;
      var properties = Object.keys(descriptor);
      var hasDeferredWork = false;
      var shouldDeferWork = supportsDirectProtoAccess && cls != "Object";
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        var firstChar = property.charCodeAt(0);
        if (property === "static") {
          processStatics(init.statics[cls] = descriptor.static, processedClasses);
          delete descriptor.static;
        } else if (firstChar === 43) {
          mangledNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
        } else if (firstChar === 42) {
          descriptor[previousProperty].$defaultValues = descriptor[property];
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else {
          var elem = descriptor[property];
          if (property !== "^" && elem != null && elem.constructor === Array && property !== "<>")
            if (shouldDeferWork)
              hasDeferredWork = true;
            else
              addStubs(descriptor, elem, property, false, []);
          else
            previousProperty = property;
        }
      }
      if (hasDeferredWork)
        descriptor.$deferredAction = finishAddStubsHelper;
      var classData = descriptor["^"], split, supr, fields = classData;
      var s = fields.split(";");
      fields = s[1] ? s[1].split(",") : [];
      supr = s[0];
      split = supr.split(":");
      if (split.length == 2) {
        supr = split[0];
        var functionSignature = split[1];
        if (functionSignature)
          descriptor.$signature = function(s) {
            return function() {
              return init.types[s];
            };
          }(functionSignature);
      }
      if (supr)
        processedClasses.pending[cls] = supr;
      processedClasses.collected[cls] = [globalObject, descriptor];
      classes.push(cls);
    }
    function processStatics(descriptor, processedClasses) {
      var properties = Object.keys(descriptor);
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        if (property === "^")
          continue;
        var element = descriptor[property];
        var firstChar = property.charCodeAt(0);
        var previousProperty;
        if (firstChar === 43) {
          mangledGlobalNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
          if (element && element.length)
            init.typeInformation[previousProperty] = element;
        } else if (firstChar === 42) {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array)
          addStubs(globalObject, element, property, true, functions);
        else {
          previousProperty = property;
          processClassData(property, element, processedClasses);
        }
      }
    }
    function addStubs(prototype, array, name, isStatic, functions) {
      var index = 0, alias = array[index], f;
      if (typeof alias == "string")
        f = array[++index];
      else {
        f = alias;
        alias = name;
      }
      var funcs = [prototype[name] = prototype[alias] = f];
      f.$stubName = name;
      functions.push(name);
      for (index++; index < array.length; index++) {
        f = array[index];
        if (typeof f != "function")
          break;
        if (!isStatic)
          f.$stubName = array[++index];
        funcs.push(f);
        if (f.$stubName) {
          prototype[f.$stubName] = f;
          functions.push(f.$stubName);
        }
      }
      for (var i = 0; i < funcs.length; index++, i++)
        funcs[i].$callName = array[index];
      var getterStubName = array[index];
      array = array.slice(++index);
      var requiredParameterInfo = array[0];
      var requiredParameterCount = requiredParameterInfo >> 1;
      var isAccessor = (requiredParameterInfo & 1) === 1;
      var isSetter = requiredParameterInfo === 3;
      var isGetter = requiredParameterInfo === 1;
      var optionalParameterInfo = array[1];
      var optionalParameterCount = optionalParameterInfo >> 1;
      var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
      var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
      var functionTypeIndex = array[2];
      if (typeof functionTypeIndex == "number")
        array[2] = functionTypeIndex + typesOffset;
      var unmangledNameIndex = 2 * optionalParameterCount + requiredParameterCount + 3;
      if (getterStubName) {
        f = tearOff(funcs, array, isStatic, name, isIntercepted);
        prototype[name].$getter = f;
        f.$getterStub = true;
        if (isStatic) {
          init.globalFunctions[name] = f;
          functions.push(getterStubName);
        }
        prototype[getterStubName] = f;
        funcs.push(f);
        f.$stubName = getterStubName;
        f.$callName = null;
      }
      var isReflectable = array.length > unmangledNameIndex;
      if (isReflectable) {
        funcs[0].$reflectable = 1;
        funcs[0].$reflectionInfo = array;
        for (var i = 1; i < funcs.length; i++) {
          funcs[i].$reflectable = 2;
          funcs[i].$reflectionInfo = array;
        }
        var mangledNames = isStatic ? init.mangledGlobalNames : init.mangledNames;
        var unmangledName = array[unmangledNameIndex];
        var reflectionName = unmangledName;
        if (getterStubName)
          mangledNames[getterStubName] = reflectionName;
        if (isSetter)
          reflectionName += "=";
        else if (!isGetter)
          reflectionName += ":" + (requiredParameterCount + optionalParameterCount);
        mangledNames[name] = reflectionName;
        funcs[0].$reflectionName = reflectionName;
        funcs[0].$metadataIndex = unmangledNameIndex + 1;
        if (optionalParameterCount)
          prototype[unmangledName + "*"] = funcs[0];
      }
    }
    Function.prototype.call$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$0 = function() {
      return this();
    };
    Function.prototype.call$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$3 = function(a, b, c) {
      return this(a, b, c);
    };
    Function.prototype.call$5 = function(a, b, c, d, e) {
      return this(a, b, c, d, e);
    };
    function tearOffGetter(funcs, reflectionInfo, name, isIntercepted) {
      var cache = null;
      return isIntercepted ? function(x) {
        if (cache === null)
          cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [x], name);
        return new cache(this, funcs[0], x, name);
      } : function() {
        if (cache === null)
          cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [], name);
        return new cache(this, funcs[0], null, name);
      };
    }
    function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
      var cache;
      return isStatic ? function() {
        if (cache === void 0)
          cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
        return cache;
      } : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
    }
    var functionCounter = 0;
    if (!init.libraries)
      init.libraries = [];
    if (!init.mangledNames)
      init.mangledNames = map();
    if (!init.mangledGlobalNames)
      init.mangledGlobalNames = map();
    if (!init.statics)
      init.statics = map();
    if (!init.typeInformation)
      init.typeInformation = map();
    if (!init.globalFunctions)
      init.globalFunctions = map();
    var libraries = init.libraries;
    var mangledNames = init.mangledNames;
    var mangledGlobalNames = init.mangledGlobalNames;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var length = programData.length;
    var processedClasses = map();
    processedClasses.collected = map();
    processedClasses.pending = map();
    for (var i = 0; i < length; i++) {
      var data = programData[i];
      var name = data[0];
      var uri = data[1];
      var metadata = data[2];
      var globalObject = data[3];
      var descriptor = data[4];
      var isRoot = !!data[5];
      var fields = descriptor && descriptor["^"];
      if (fields instanceof Array)
        fields = fields[0];
      var classes = [];
      var functions = [];
      processStatics(descriptor, processedClasses);
      libraries.push([name, uri, classes, functions, metadata, fields, isRoot, globalObject]);
    }
    finishClasses(processedClasses);
  }
  Isolate.functionThatReturnsNull = function() {
  };
  var dart = [["_foreign_helper", "dart:_foreign_helper",, H, {
    "^": "",
    JS_CONST: {
      "^": "Object;code"
    }
  }], ["_interceptors", "dart:_interceptors",, J, {
    "^": "",
    getInterceptor: function(object) {
      return void 0;
    },
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var record, proto, objectProto, interceptor;
      record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(new P.UnimplementedError("Return interceptor for " + H.S(proto(object, record))));
      }
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor == null) {
        if (typeof object == "function")
          return C.JavaScriptFunction_methods;
        proto = Object.getPrototypeOf(object);
        if (proto == null || proto === Object.prototype)
          return C.PlainJavaScriptObject_methods;
        else
          return C.UnknownJavaScriptObject_methods;
      }
      return interceptor;
    },
    Interceptor: {
      "^": "Object;",
      $eq: function(receiver, other) {
        return receiver === other;
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      toString$0: ["super$Interceptor$toString", function(receiver) {
        return H.Primitives_objectToHumanReadableString(receiver);
      }],
      noSuchMethod$1: ["super$Interceptor$noSuchMethod", function(receiver, invocation) {
        throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, null, "get$noSuchMethod", 2, 0, null, 10],
      $isReactElement: 1,
      $asReactElement: null,
      $isObject: 1,
      $isReactComponent: 1,
      $isObject: 1,
      $isInteropProps: 1,
      $isObject: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticClipboardEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticKeyboardEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticFocusEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticFormEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticMouseEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticTouchEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticUIEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      $isSyntheticWheelEvent0: 1,
      $isSyntheticEvent0: 1,
      $isObject: 1,
      "%": "ANGLEInstancedArrays|Animation|AnimationEffect|AnimationNode|AnimationTimeline|AudioListener|BarProp|Body|CSS|Cache|Canvas2DContextAttributes|CanvasGradient|CanvasPattern|ConsoleBase|Coordinates|Counter|CredentialsContainer|Crypto|DOMError|DOMFileSystem|DOMFileSystemSync|DOMImplementation|DOMMatrix|DOMMatrixReadOnly|DOMParser|DOMPoint|DOMPointReadOnly|Database|DeprecatedStorageInfo|DeprecatedStorageQuota|DeviceAcceleration|DeviceRotationRate|DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|EXTBlendMinMax|EXTFragDepth|EXTShaderTextureLOD|EXTTextureFilterAnisotropic|EntrySync|FileEntrySync|FileError|FileReaderSync|FileWriterSync|FormData|Geofencing|Geolocation|Geoposition|HTMLAllCollection|IDBFactory|ImageBitmap|InjectedScriptHost|MediaDeviceInfo|MediaError|MediaKeyError|MediaKeys|MemoryInfo|MessageChannel|Metadata|MutationObserver|NavigatorUserMediaError|NodeFilter|NodeIterator|OESElementIndexUint|OESStandardDerivatives|OESTextureFloat|OESTextureFloatLinear|OESTextureHalfFloat|OESTextureHalfFloatLinear|OESVertexArrayObject|PagePopupController|PerformanceEntry|PerformanceMark|PerformanceMeasure|PerformanceResourceTiming|PerformanceTiming|PeriodicWave|PositionError|PushManager|PushRegistration|RGBColor|RTCIceCandidate|Range|Rect|Request|Response|SQLError|SQLResultSet|SQLTransaction|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPreserveAspectRatio|SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGMatrix|SVGPoint|SVGPreserveAspectRatio|SVGRect|SVGRenderingIntent|SVGUnitTypes|Screen|ServiceWorkerClients|ServiceWorkerContainer|SpeechRecognitionAlternative|SpeechSynthesisVoice|StorageInfo|StorageQuota|SubtleCrypto|TextMetrics|Timing|TreeWalker|ValidityState|VideoPlaybackQuality|WebGLBuffer|WebGLCompressedTextureATC|WebGLCompressedTextureETC1|WebGLCompressedTexturePVRTC|WebGLCompressedTextureS3TC|WebGLContextAttributes|WebGLDebugRendererInfo|WebGLDebugShaders|WebGLDepthTexture|WebGLDrawBuffers|WebGLExtensionLoseContext|WebGLFramebuffer|WebGLLoseContext|WebGLProgram|WebGLRenderbuffer|WebGLShader|WebGLShaderPrecisionFormat|WebGLTexture|WebGLUniformLocation|WebGLVertexArrayObjectOES|WebKitCSSMatrix|WebKitMutationObserver|WorkerConsole|WorkerPerformance|XMLSerializer|XPathEvaluator|XPathExpression|XPathNSResolver|XPathResult|XSLTProcessor|mozRTCIceCandidate"
    },
    JSBool: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      get$hashCode: function(receiver) {
        return receiver ? 519018 : 218159;
      },
      $isbool: 1
    },
    JSNull: {
      "^": "Interceptor;",
      $eq: function(receiver, other) {
        return null == other;
      },
      toString$0: function(receiver) {
        return "null";
      },
      get$hashCode: function(receiver) {
        return 0;
      },
      noSuchMethod$1: [function(receiver, invocation) {
        return this.super$Interceptor$noSuchMethod(receiver, invocation);
      }, null, "get$noSuchMethod", 2, 0, null, 10]
    },
    JavaScriptObject: {
      "^": "Interceptor;",
      get$hashCode: function(receiver) {
        return 0;
      },
      toString$0: ["super$JavaScriptObject$toString", function(receiver) {
        return String(receiver);
      }],
      get$displayName: function(obj) {
        return obj.displayName;
      },
      get$dartDefaultProps: function(obj) {
        return obj.dartDefaultProps;
      },
      set$dartDefaultProps: function(obj, v) {
        return obj.dartDefaultProps = v;
      },
      set$validated: function(obj, v) {
        return obj.validated = v;
      },
      get$_store: function(obj) {
        return obj._store;
      },
      get$type: function(obj) {
        return obj.type;
      },
      get$props: function(obj) {
        return obj.props;
      },
      get$key: function(obj) {
        return obj.key;
      },
      ref$1: function(receiver, p0) {
        return receiver.ref(p0);
      },
      get$refs: function(obj) {
        return obj.refs;
      },
      setState$1: function(receiver, p0) {
        return receiver.setState(p0);
      },
      get$isMounted: function(obj) {
        return obj.isMounted;
      },
      get$internal: function(obj) {
        return obj.internal;
      },
      set$key: function(obj, v) {
        return obj.key = v;
      },
      set$ref: function(obj, v) {
        return obj.ref = v;
      },
      get$bubbles: function(obj) {
        return obj.bubbles;
      },
      get$cancelable: function(obj) {
        return obj.cancelable;
      },
      get$currentTarget: function(obj) {
        return obj.currentTarget;
      },
      get$defaultPrevented: function(obj) {
        return obj.defaultPrevented;
      },
      get$eventPhase: function(obj) {
        return obj.eventPhase;
      },
      get$isTrusted: function(obj) {
        return obj.isTrusted;
      },
      get$nativeEvent: function(obj) {
        return obj.nativeEvent;
      },
      get$target: function(obj) {
        return obj.target;
      },
      get$timeStamp: function(obj) {
        return obj.timeStamp;
      },
      stopPropagation$0: function(receiver) {
        return receiver.stopPropagation();
      },
      preventDefault$0: function(receiver) {
        return receiver.preventDefault();
      },
      get$clipboardData: function(obj) {
        return obj.clipboardData;
      },
      get$altKey: function(obj) {
        return obj.altKey;
      },
      get$$char: function(obj) {
        return obj.char;
      },
      get$ctrlKey: function(obj) {
        return obj.ctrlKey;
      },
      get$locale: function(obj) {
        return obj.locale;
      },
      get$location: function(obj) {
        return obj.location;
      },
      get$metaKey: function(obj) {
        return obj.metaKey;
      },
      get$repeat: function(obj) {
        return obj.repeat;
      },
      get$shiftKey: function(obj) {
        return obj.shiftKey;
      },
      get$keyCode: function(obj) {
        return obj.keyCode;
      },
      get$charCode: function(obj) {
        return obj.charCode;
      },
      get$relatedTarget: function(obj) {
        return obj.relatedTarget;
      },
      get$dropEffect: function(obj) {
        return obj.dropEffect;
      },
      get$effectAllowed: function(obj) {
        return obj.effectAllowed;
      },
      get$files: function(obj) {
        return obj.files;
      },
      get$types: function(obj) {
        return obj.types;
      },
      get$button: function(obj) {
        return obj.button;
      },
      get$buttons: function(obj) {
        return obj.buttons;
      },
      get$clientX: function(obj) {
        return obj.clientX;
      },
      get$clientY: function(obj) {
        return obj.clientY;
      },
      get$dataTransfer: function(obj) {
        return obj.dataTransfer;
      },
      get$pageX: function(obj) {
        return obj.pageX;
      },
      get$pageY: function(obj) {
        return obj.pageY;
      },
      get$screenX: function(obj) {
        return obj.screenX;
      },
      get$screenY: function(obj) {
        return obj.screenY;
      },
      get$changedTouches: function(obj) {
        return obj.changedTouches;
      },
      get$targetTouches: function(obj) {
        return obj.targetTouches;
      },
      get$touches: function(obj) {
        return obj.touches;
      },
      get$detail: function(obj) {
        return obj.detail;
      },
      get$view: function(obj) {
        return obj.view;
      },
      get$deltaX: function(obj) {
        return obj.deltaX;
      },
      get$deltaMode: function(obj) {
        return obj.deltaMode;
      },
      get$deltaY: function(obj) {
        return obj.deltaY;
      },
      get$deltaZ: function(obj) {
        return obj.deltaZ;
      },
      $isJSObject: 1
    },
    PlainJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    UnknownJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    JavaScriptFunction: {
      "^": "JavaScriptObject;",
      toString$0: function(receiver) {
        var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
        return dartClosure == null ? this.super$JavaScriptObject$toString(receiver) : J.toString$0$(dartClosure);
      },
      $isFunction: 1
    },
    JSArray: {
      "^": "Interceptor;",
      checkMutable$1: function(receiver, reason) {
        if (!!receiver.immutable$list)
          throw H.wrapException(new P.UnsupportedError(reason));
      },
      checkGrowable$1: function(receiver, reason) {
        if (!!receiver.fixed$length)
          throw H.wrapException(new P.UnsupportedError(reason));
      },
      add$1: function(receiver, value) {
        this.checkGrowable$1(receiver, "add");
        receiver.push(value);
      },
      remove$1: function(receiver, element) {
        var i;
        this.checkGrowable$1(receiver, "remove");
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element)) {
            receiver.splice(i, 1);
            return true;
          }
        return false;
      },
      where$1: function(receiver, f) {
        return H.setRuntimeTypeInfo(new H.WhereIterable(receiver, f), [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      addAll$1: function(receiver, collection) {
        var t1;
        this.checkGrowable$1(receiver, "addAll");
        for (t1 = J.get$iterator$ax(collection); t1.moveNext$0() === true;)
          receiver.push(t1.get$current());
      },
      forEach$1: function(receiver, f) {
        var end, i;
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          f.call$1(receiver[i]);
          if (receiver.length !== end)
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
      },
      map$1: function(receiver, f) {
        return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
      },
      join$1: function(receiver, separator) {
        var t1, list, i, t2;
        t1 = receiver.length;
        list = new Array(t1);
        list.fixed$length = Array;
        for (i = 0; i < receiver.length; ++i) {
          t2 = H.S(receiver[i]);
          if (i >= t1)
            return H.ioore(list, i);
          list[i] = t2;
        }
        return list.join(separator);
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
        if (end == null)
          end = receiver.length;
        else if (end < start || end > receiver.length)
          throw H.wrapException(P.RangeError$range(end, start, receiver.length, "end", null));
        if (start === end)
          return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
        return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$last: function(receiver) {
        var t1 = receiver.length;
        if (t1 > 0)
          return receiver[t1 - 1];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        var $length, i, t1;
        this.checkMutable$1(receiver, "set range");
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        $length = end - start;
        if ($length === 0)
          return;
        if (skipCount < 0)
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        if (skipCount + $length > iterable.length)
          throw H.wrapException(H.IterableElementError_tooFew());
        if (skipCount < start)
          for (i = $length - 1; i >= 0; --i) {
            t1 = skipCount + i;
            if (t1 < 0 || t1 >= iterable.length)
              return H.ioore(iterable, t1);
            receiver[start + i] = iterable[t1];
          }
        else
          for (i = 0; i < $length; ++i) {
            t1 = skipCount + i;
            if (t1 < 0 || t1 >= iterable.length)
              return H.ioore(iterable, t1);
            receiver[start + i] = iterable[t1];
          }
      },
      sort$1: function(receiver, compare) {
        var t1;
        this.checkMutable$1(receiver, "sort");
        t1 = compare == null ? P.core_Comparable_compare$closure() : compare;
        H.Sort__doSort(receiver, 0, receiver.length - 1, t1);
      },
      indexOf$2: function(receiver, element, start) {
        var i;
        if (start >= receiver.length)
          return -1;
        for (i = start; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element))
            return i;
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      contains$1: function(receiver, other) {
        var i;
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], other))
            return true;
        return false;
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      toList$1$growable: function(receiver, growable) {
        var t1;
        if (growable)
          t1 = H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
        else {
          t1 = H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
          t1.fixed$length = Array;
          t1 = t1;
        }
        return t1;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$iterator: function(receiver) {
        return H.setRuntimeTypeInfo(new J.ArrayIterator(receiver, receiver.length, 0, null), [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      set$length: function(receiver, newLength) {
        this.checkGrowable$1(receiver, "set length");
        if (newLength < 0)
          throw H.wrapException(P.RangeError$range(newLength, 0, null, "newLength", null));
        receiver.length = newLength;
      },
      $index: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        this.checkMutable$1(receiver, "indexed set");
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        receiver[index] = value;
      },
      $isJSIndexable: 1,
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    JSUnmodifiableArray: {
      "^": "JSArray;"
    },
    ArrayIterator: {
      "^": "Object;_iterable,__interceptors$_length,_index,__interceptors$_current",
      get$current: function() {
        return this.__interceptors$_current;
      },
      moveNext$0: function() {
        var t1, $length, t2;
        t1 = this._iterable;
        $length = t1.length;
        if (this.__interceptors$_length !== $length)
          throw H.wrapException(H.throwConcurrentModificationError(t1));
        t2 = this._index;
        if (t2 >= $length) {
          this.__interceptors$_current = null;
          return false;
        }
        this.__interceptors$_current = t1[t2];
        this._index = t2 + 1;
        return true;
      }
    },
    JSNumber: {
      "^": "Interceptor;",
      compareTo$1: function(receiver, b) {
        var bIsNegative;
        if (typeof b !== "number")
          throw H.wrapException(H.argumentErrorValue(b));
        if (receiver < b)
          return -1;
        else if (receiver > b)
          return 1;
        else if (receiver === b) {
          if (receiver === 0) {
            bIsNegative = this.get$isNegative(b);
            if (this.get$isNegative(receiver) === bIsNegative)
              return 0;
            if (this.get$isNegative(receiver))
              return -1;
            return 1;
          }
          return 0;
        } else if (isNaN(receiver)) {
          if (this.get$isNaN(b))
            return 0;
          return 1;
        } else
          return -1;
      },
      get$isNegative: function(receiver) {
        return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
      },
      get$isNaN: function(receiver) {
        return isNaN(receiver);
      },
      get$isFinite: function(receiver) {
        return isFinite(receiver);
      },
      remainder$1: function(receiver, b) {
        return receiver % b;
      },
      toInt$0: function(receiver) {
        var t1;
        if (receiver >= -2147483648 && receiver <= 2147483647)
          return receiver | 0;
        if (isFinite(receiver)) {
          t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
          return t1 + 0;
        }
        throw H.wrapException(new P.UnsupportedError("" + receiver));
      },
      round$0: function(receiver) {
        if (receiver > 0) {
          if (receiver !== 1 / 0)
            return Math.round(receiver);
        } else if (receiver > -1 / 0)
          return 0 - Math.round(0 - receiver);
        throw H.wrapException(new P.UnsupportedError("" + receiver));
      },
      toString$0: function(receiver) {
        if (receiver === 0 && 1 / receiver < 0)
          return "-0.0";
        else
          return "" + receiver;
      },
      get$hashCode: function(receiver) {
        return receiver & 0x1FFFFFFF;
      },
      $add: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver + other;
      },
      $sub: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver - other;
      },
      $mul: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver * other;
      },
      $mod: function(receiver, other) {
        var result = receiver % other;
        if (result === 0)
          return 0;
        if (result > 0)
          return result;
        if (other < 0)
          return result - other;
        else
          return result + other;
      },
      $tdiv: function(receiver, other) {
        if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
          return receiver / other | 0;
        else
          return this.toInt$0(receiver / other);
      },
      _tdivFast$1: function(receiver, other) {
        return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
      },
      $shl: function(receiver, other) {
        if (other < 0)
          throw H.wrapException(H.argumentErrorValue(other));
        return other > 31 ? 0 : receiver << other >>> 0;
      },
      _shlPositive$1: function(receiver, other) {
        return other > 31 ? 0 : receiver << other >>> 0;
      },
      $shr: function(receiver, other) {
        var t1;
        if (other < 0)
          throw H.wrapException(H.argumentErrorValue(other));
        if (receiver > 0)
          t1 = other > 31 ? 0 : receiver >>> other;
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrOtherPositive$1: function(receiver, other) {
        var t1;
        if (receiver > 0)
          t1 = other > 31 ? 0 : receiver >>> other;
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrReceiverPositive$1: function(receiver, other) {
        if (other < 0)
          throw H.wrapException(H.argumentErrorValue(other));
        return other > 31 ? 0 : receiver >>> other;
      },
      $and: function(receiver, other) {
        return (receiver & other) >>> 0;
      },
      $or: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver | other) >>> 0;
      },
      $xor: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver ^ other) >>> 0;
      },
      $lt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver < other;
      },
      $gt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver > other;
      },
      $le: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver <= other;
      },
      $ge: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver >= other;
      },
      $isnum: 1
    },
    JSInt: {
      "^": "JSNumber;",
      $not: function(receiver) {
        return ~receiver >>> 0;
      },
      $isnum: 1,
      $is$int: 1
    },
    JSDouble: {
      "^": "JSNumber;",
      $isnum: 1
    },
    JSString: {
      "^": "Interceptor;",
      codeUnitAt$1: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver.charCodeAt(index);
      },
      allMatches$2: function(receiver, string, start) {
        H.checkString(string);
        H.checkInt(start);
        if (start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._StringAllMatchesIterable(string, receiver, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      matchAsPrefix$2: function(receiver, string, start) {
        var t1, i;
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        t1 = receiver.length;
        if (start + t1 > string.length)
          return;
        for (i = 0; i < t1; ++i)
          if (this.codeUnitAt$1(string, start + i) !== this.codeUnitAt$1(receiver, i))
            return;
        return new H.StringMatch(start, string, receiver);
      },
      $add: function(receiver, other) {
        if (typeof other !== "string")
          throw H.wrapException(P.ArgumentError$value(other, null, null));
        return receiver + other;
      },
      replaceAll$2: function(receiver, from, to) {
        H.checkString(to);
        return H.stringReplaceAllUnchecked(receiver, from, to);
      },
      startsWith$2: function(receiver, pattern, index) {
        var endIndex;
        H.checkInt(index);
        if (index > receiver.length)
          throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
        if (typeof pattern === "string") {
          endIndex = index + pattern.length;
          if (endIndex > receiver.length)
            return false;
          return pattern === receiver.substring(index, endIndex);
        }
        return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
      },
      startsWith$1: function($receiver, pattern) {
        return this.startsWith$2($receiver, pattern, 0);
      },
      substring$2: function(receiver, startIndex, endIndex) {
        var t1;
        if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
          H.throwExpression(H.argumentErrorValue(startIndex));
        if (endIndex == null)
          endIndex = receiver.length;
        if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
          H.throwExpression(H.argumentErrorValue(endIndex));
        t1 = J.getInterceptor$n(startIndex);
        if (t1.$lt(startIndex, 0) === true)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (t1.$gt(startIndex, endIndex) === true)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (J.$gt$n(endIndex, receiver.length) === true)
          throw H.wrapException(P.RangeError$value(endIndex, null, null));
        return receiver.substring(startIndex, endIndex);
      },
      substring$1: function($receiver, startIndex) {
        return this.substring$2($receiver, startIndex, null);
      },
      toLowerCase$0: function(receiver) {
        return receiver.toLowerCase();
      },
      toUpperCase$0: function(receiver) {
        return receiver.toUpperCase();
      },
      $mul: function(receiver, times) {
        var s, result;
        if (0 >= times)
          return "";
        if (times === 1 || receiver.length === 0)
          return receiver;
        if (times !== times >>> 0)
          throw H.wrapException(C.C_OutOfMemoryError);
        for (s = receiver, result = ""; true;) {
          if ((times & 1) === 1)
            result = s + result;
          times = times >>> 1;
          if (times === 0)
            break;
          s += s;
        }
        return result;
      },
      get$runes: function(receiver) {
        return new P.Runes(receiver);
      },
      indexOf$2: function(receiver, pattern, start) {
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        return receiver.indexOf(pattern, start);
      },
      indexOf$1: function($receiver, pattern) {
        return this.indexOf$2($receiver, pattern, 0);
      },
      contains$2: function(receiver, other, startIndex) {
        if (startIndex > receiver.length)
          throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length, null, null));
        return H.stringContainsUnchecked(receiver, other, startIndex);
      },
      contains$1: function($receiver, other) {
        return this.contains$2($receiver, other, 0);
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      compareTo$1: function(receiver, other) {
        var t1;
        if (typeof other !== "string")
          throw H.wrapException(H.argumentErrorValue(other));
        if (receiver === other)
          t1 = 0;
        else
          t1 = receiver < other ? -1 : 1;
        return t1;
      },
      toString$0: function(receiver) {
        return receiver;
      },
      get$hashCode: function(receiver) {
        var t1, hash, i;
        for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
          hash = 536870911 & hash + receiver.charCodeAt(i);
          hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
          hash ^= hash >> 6;
        }
        hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
        hash ^= hash >> 11;
        return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $isJSIndexable: 1,
      $isString: 1
    }
  }], ["_isolate_helper", "dart:_isolate_helper",, H, {
    "^": "",
    _callInIsolate: function(isolate, $function) {
      var result = isolate.eval$1($function);
      if (!init.globalState.currentContext._isExecutingEvent)
        init.globalState.topEventLoop.run$0();
      return result;
    },
    startRootIsolate: function(entry, args) {
      var t1, t2, t3, t4, t5, rootContext;
      t1 = {};
      t1._captured_args_0 = args;
      if (args == null) {
        args = [];
        t1._captured_args_0 = args;
        t2 = args;
      } else
        t2 = args;
      if (!J.getInterceptor(t2).$isList)
        throw H.wrapException(P.ArgumentError$("Arguments to main must be a List: " + H.S(t2)));
      init.globalState = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
      t2 = init.globalState;
      t3 = self.window == null;
      t4 = self.Worker;
      t5 = t3 && !!self.postMessage;
      t2.isWorker = t5;
      t5 = !t5;
      if (t5)
        t4 = t4 != null && $.$get$IsolateNatives_thisScript() != null;
      else
        t4 = true;
      t2.supportsWorkers = t4;
      t2.fromCommandLine = t3 && t5;
      t2.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
      t2.isolates = H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [P.$int, H._IsolateContext]);
      t2.managers = H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [P.$int, null]);
      if (t2.isWorker === true) {
        t3 = new H._MainManagerStub();
        t2.mainManager = t3;
        self.onmessage = function(f, a) {
          return function(e) {
            f(a, e);
          };
        }(H.IsolateNatives__processWorkerMessage, t3);
        self.dartPrint = self.dartPrint || function(serialize) {
          return function(object) {
            if (self.console && self.console.log)
              self.console.log(object);
            else
              self.postMessage(serialize(object));
          };
        }(H._Manager__serializePrintMessage);
      }
      if (init.globalState.isWorker === true)
        return;
      t2 = init.globalState.nextIsolateId++;
      t3 = H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [P.$int, H.RawReceivePortImpl]);
      t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, P.$int);
      t5 = new H.RawReceivePortImpl(0, null, false);
      rootContext = new H._IsolateContext(t2, t3, t4, init.createNewIsolate(), t5, new H.CapabilityImpl(H.random64()), new H.CapabilityImpl(H.random64()), false, false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, null, false, true, P.LinkedHashSet_LinkedHashSet(null, null, null, null));
      t4.add$1(0, 0);
      rootContext._addRegistration$2(0, t5);
      init.globalState.rootContext = rootContext;
      init.globalState.currentContext = rootContext;
      t2 = H.getDynamicRuntimeType();
      t3 = H.buildFunctionType(t2, [t2])._isTest$1(entry);
      if (t3)
        rootContext.eval$1(new H.startRootIsolate_closure(t1, entry));
      else {
        t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(entry);
        if (t2)
          rootContext.eval$1(new H.startRootIsolate_closure0(t1, entry));
        else
          rootContext.eval$1(entry);
      }
      init.globalState.topEventLoop.run$0();
    },
    IsolateNatives_computeThisScript: function() {
      var currentScript = init.currentScript;
      if (currentScript != null)
        return String(currentScript.src);
      if (init.globalState.isWorker === true)
        return H.IsolateNatives_computeThisScriptFromTrace();
      return;
    },
    IsolateNatives_computeThisScriptFromTrace: function() {
      var stack, matches;
      stack = new Error().stack;
      if (stack == null) {
        stack = function() {
          try {
            throw new Error();
          } catch (e) {
            return e.stack;
          }
        }();
        if (stack == null)
          throw H.wrapException(new P.UnsupportedError("No stack trace"));
      }
      matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
      if (matches != null)
        return matches[1];
      matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
      if (matches != null)
        return matches[1];
      throw H.wrapException(new P.UnsupportedError("Cannot extract URI from \"" + H.S(stack) + "\""));
    },
    IsolateNatives__processWorkerMessage: [function(sender, e) {
      var msg, t1, functionName, entryPoint, args, message, isSpawnUri, startPaused, replyTo, t2, t3, t4, context;
      msg = new H._Deserializer(true, []).deserialize$1(e.data);
      t1 = J.getInterceptor$asx(msg);
      switch (t1.$index(msg, "command")) {
        case "start":
          init.globalState.currentManagerId = t1.$index(msg, "id");
          functionName = t1.$index(msg, "functionName");
          entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
          args = t1.$index(msg, "args");
          message = new H._Deserializer(true, []).deserialize$1(t1.$index(msg, "msg"));
          isSpawnUri = t1.$index(msg, "isSpawnUri");
          startPaused = t1.$index(msg, "startPaused");
          replyTo = new H._Deserializer(true, []).deserialize$1(t1.$index(msg, "replyTo"));
          t1 = init.globalState.nextIsolateId++;
          t2 = H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [P.$int, H.RawReceivePortImpl]);
          t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, P.$int);
          t4 = new H.RawReceivePortImpl(0, null, false);
          context = new H._IsolateContext(t1, t2, t3, init.createNewIsolate(), t4, new H.CapabilityImpl(H.random64()), new H.CapabilityImpl(H.random64()), false, false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, null, false, true, P.LinkedHashSet_LinkedHashSet(null, null, null, null));
          t3.add$1(0, 0);
          context._addRegistration$2(0, t4);
          init.globalState.topEventLoop.events._add$1(0, new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, startPaused, replyTo), "worker-start"));
          init.globalState.currentContext = context;
          init.globalState.topEventLoop.run$0();
          break;
        case "spawn-worker":
          break;
        case "message":
          if (t1.$index(msg, "port") != null)
            J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
          init.globalState.topEventLoop.run$0();
          break;
        case "close":
          init.globalState.managers.remove$1(0, $.$get$IsolateNatives_workerIds().$index(0, sender));
          sender.terminate();
          init.globalState.topEventLoop.run$0();
          break;
        case "log":
          H.IsolateNatives__log(t1.$index(msg, "msg"));
          break;
        case "print":
          if (init.globalState.isWorker === true) {
            t1 = init.globalState.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "print", "msg", msg]);
            t2 = new H._Serializer(true, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          } else
            P.print(t1.$index(msg, "msg"));
          break;
        case "error":
          throw H.wrapException(t1.$index(msg, "msg"));
      }
    }, null, null, 4, 0, null, 33, 1],
    IsolateNatives__log: function(msg) {
      var trace, t1, t2, exception;
      if (init.globalState.isWorker === true) {
        t1 = init.globalState.mainManager;
        t2 = P.LinkedHashMap__makeLiteral(["command", "log", "msg", msg]);
        t2 = new H._Serializer(true, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(t2);
        t1.toString;
        self.postMessage(t2);
      } else
        try {
          self.console.log(msg);
        } catch (exception) {
          H.unwrapException(exception);
          trace = H.getTraceFromException(exception);
          throw H.wrapException(P.Exception_Exception(trace));
        }
    },
    IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, startPaused, replyTo) {
      var context, t1, t2;
      context = init.globalState.currentContext;
      t1 = context.id;
      $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t1);
      $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t1);
      t1 = context.controlPort.get$sendPort();
      t2 = context.pauseCapability;
      J.send$1$x(replyTo, ["spawned", t1, t2, context.terminateCapability]);
      t1 = new H.IsolateNatives__startIsolate_runStartFunction(topLevel, args, message, isSpawnUri, context);
      if (startPaused === true) {
        context.addPause$2(t2, t2);
        init.globalState.topEventLoop.events._add$1(0, new H._IsolateEvent(context, t1, "start isolate"));
      } else
        t1.call$0();
    },
    _clone: function(message) {
      return new H._Deserializer(true, []).deserialize$1(new H._Serializer(false, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(message));
    },
    startRootIsolate_closure: {
      "^": "Closure:0;__isolate_helper$_box_0,_captured_entry_1",
      call$0: function() {
        this._captured_entry_1.call$1(this.__isolate_helper$_box_0._captured_args_0);
      }
    },
    startRootIsolate_closure0: {
      "^": "Closure:0;__isolate_helper$_box_0,_captured_entry_2",
      call$0: function() {
        this._captured_entry_2.call$2(this.__isolate_helper$_box_0._captured_args_0, null);
      }
    },
    _Manager: {
      "^": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
      static: {_Manager__serializePrintMessage: [function(object) {
          var t1 = P.LinkedHashMap__makeLiteral(["command", "print", "msg", object]);
          return new H._Serializer(true, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(t1);
        }, null, null, 2, 0, null, 25]}
    },
    _IsolateContext: {
      "^": "Object;id>,ports,weakPorts,isolateStatics<,controlPort<,pauseCapability,terminateCapability,initialized?,isPaused<,delayedEvents<,pauseTokens,doneHandlers,_scheduledControlEvents,_isExecutingEvent,errorsAreFatal,errorPorts",
      addPause$2: function(authentification, resume) {
        if (!this.pauseCapability.$eq(0, authentification))
          return;
        if (this.pauseTokens.add$1(0, resume) && !this.isPaused)
          this.isPaused = true;
        this._updateGlobalState$0();
      },
      removePause$1: function(resume) {
        var t1, t2, $event, t3, t4, t5;
        if (!this.isPaused)
          return;
        t1 = this.pauseTokens;
        t1.remove$1(0, resume);
        if (t1._collection$_length === 0) {
          for (t1 = this.delayedEvents; t2 = t1.length, t2 !== 0;) {
            if (0 >= t2)
              return H.ioore(t1, -1);
            $event = t1.pop();
            t2 = init.globalState.topEventLoop.events;
            t3 = t2._head;
            t4 = t2._table;
            t5 = t4.length;
            t3 = (t3 - 1 & t5 - 1) >>> 0;
            t2._head = t3;
            if (t3 < 0 || t3 >= t5)
              return H.ioore(t4, t3);
            t4[t3] = $event;
            if (t3 === t2._tail)
              t2._grow$0();
            ++t2._modificationCount;
          }
          this.isPaused = false;
        }
        this._updateGlobalState$0();
      },
      addDoneListener$2: function(responsePort, response) {
        var t1, i, t2;
        if (this.doneHandlers == null)
          this.doneHandlers = [];
        for (t1 = J.getInterceptor(responsePort), i = 0; t2 = this.doneHandlers, i < t2.length; i += 2)
          if (t1.$eq(responsePort, t2[i])) {
            t1 = this.doneHandlers;
            t2 = i + 1;
            if (t2 >= t1.length)
              return H.ioore(t1, t2);
            t1[t2] = response;
            return;
          }
        t2.push(responsePort);
        this.doneHandlers.push(response);
      },
      removeDoneListener$1: function(responsePort) {
        var t1, i, t2;
        if (this.doneHandlers == null)
          return;
        for (t1 = J.getInterceptor(responsePort), i = 0; t2 = this.doneHandlers, i < t2.length; i += 2)
          if (t1.$eq(responsePort, t2[i])) {
            t1 = this.doneHandlers;
            t2 = i + 2;
            t1.toString;
            if (typeof t1 !== "object" || t1 === null || !!t1.fixed$length)
              H.throwExpression(new P.UnsupportedError("removeRange"));
            P.RangeError_checkValidRange(i, t2, t1.length, null, null, null);
            t1.splice(i, t2 - i);
            return;
          }
      },
      setErrorsFatal$2: function(authentification, errorsAreFatal) {
        if (!this.terminateCapability.$eq(0, authentification))
          return;
        this.errorsAreFatal = errorsAreFatal;
      },
      handlePing$3: function(responsePort, pingType, response) {
        var t1 = J.getInterceptor(pingType);
        if (!t1.$eq(pingType, 0))
          t1 = t1.$eq(pingType, 1) && !this._isExecutingEvent;
        else
          t1 = true;
        if (t1) {
          J.send$1$x(responsePort, response);
          return;
        }
        t1 = this._scheduledControlEvents;
        if (t1 == null) {
          t1 = P.ListQueue$(null, null);
          this._scheduledControlEvents = t1;
        }
        t1._add$1(0, new H._IsolateContext_handlePing_respond(responsePort, response));
      },
      handleKill$2: function(authentification, priority) {
        var t1;
        if (!this.terminateCapability.$eq(0, authentification))
          return;
        t1 = J.getInterceptor(priority);
        if (!t1.$eq(priority, 0))
          t1 = t1.$eq(priority, 1) && !this._isExecutingEvent;
        else
          t1 = true;
        if (t1) {
          this.kill$0();
          return;
        }
        t1 = this._scheduledControlEvents;
        if (t1 == null) {
          t1 = P.ListQueue$(null, null);
          this._scheduledControlEvents = t1;
        }
        t1._add$1(0, this.get$kill());
      },
      handleUncaughtError$2: function(error, stackTrace) {
        var t1, message;
        t1 = this.errorPorts;
        if (t1._collection$_length === 0) {
          if (this.errorsAreFatal === true && this === init.globalState.rootContext)
            return;
          if (self.console && self.console.error)
            self.console.error(error, stackTrace);
          else {
            P.print(error);
            if (stackTrace != null)
              P.print(stackTrace);
          }
          return;
        }
        message = new Array(2);
        message.fixed$length = Array;
        message[0] = J.toString$0$(error);
        message[1] = stackTrace == null ? null : J.toString$0$(stackTrace);
        for (t1 = H.setRuntimeTypeInfo(new P.LinkedHashSetIterator(t1, t1._collection$_modifications, null, null), [null]), t1._collection$_cell = t1._set._collection$_first; t1.moveNext$0();)
          J.send$1$x(t1._collection$_current, message);
      },
      eval$1: function(code) {
        var old, result, oldIsExecutingEvent, e, s, exception, t1;
        old = init.globalState.currentContext;
        init.globalState.currentContext = this;
        $ = this.isolateStatics;
        result = null;
        oldIsExecutingEvent = this._isExecutingEvent;
        this._isExecutingEvent = true;
        try {
          result = code.call$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
          if (this.errorsAreFatal === true) {
            this.kill$0();
            if (this === init.globalState.rootContext)
              throw exception;
          }
        } finally {
          this._isExecutingEvent = oldIsExecutingEvent;
          init.globalState.currentContext = old;
          if (old != null)
            $ = old.get$isolateStatics();
          if (this._scheduledControlEvents != null)
            for (; t1 = this._scheduledControlEvents, !t1.get$isEmpty(t1);)
              this._scheduledControlEvents.removeFirst$0().call$0();
        }
        return result;
      },
      handleControlMessage$1: function(message) {
        var t1 = J.getInterceptor$asx(message);
        switch (t1.$index(message, 0)) {
          case "pause":
            this.addPause$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "resume":
            this.removePause$1(t1.$index(message, 1));
            break;
          case "add-ondone":
            this.addDoneListener$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "remove-ondone":
            this.removeDoneListener$1(t1.$index(message, 1));
            break;
          case "set-errors-fatal":
            this.setErrorsFatal$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "ping":
            this.handlePing$3(t1.$index(message, 1), t1.$index(message, 2), t1.$index(message, 3));
            break;
          case "kill":
            this.handleKill$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "getErrors":
            this.errorPorts.add$1(0, t1.$index(message, 1));
            break;
          case "stopErrors":
            this.errorPorts.remove$1(0, t1.$index(message, 1));
            break;
        }
      },
      lookup$1: function(portId) {
        return this.ports.$index(0, portId);
      },
      _addRegistration$2: function(portId, port) {
        var t1 = this.ports;
        if (t1.containsKey$1(0, portId))
          throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
        t1.$indexSet(0, portId, port);
      },
      _updateGlobalState$0: function() {
        var t1 = this.ports;
        if (t1.get$length(t1) - this.weakPorts._collection$_length > 0 || this.isPaused || !this.initialized)
          init.globalState.isolates.$indexSet(0, this.id, this);
        else
          this.kill$0();
      },
      kill$0: [function() {
        var t1, t2, i, responsePort, t3;
        t1 = this._scheduledControlEvents;
        if (t1 != null)
          t1.clear$0(0);
        for (t1 = this.ports, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();)
          t2.get$current().__isolate_helper$_close$0();
        t1.clear$0(0);
        this.weakPorts.clear$0(0);
        init.globalState.isolates.remove$1(0, this.id);
        this.errorPorts.clear$0(0);
        if (this.doneHandlers != null) {
          for (i = 0; t1 = this.doneHandlers, t2 = t1.length, i < t2; i += 2) {
            responsePort = t1[i];
            t3 = i + 1;
            if (t3 >= t2)
              return H.ioore(t1, t3);
            J.send$1$x(responsePort, t1[t3]);
          }
          this.doneHandlers = null;
        }
      }, "call$0", "get$kill", 0, 0, 2]
    },
    _IsolateContext_handlePing_respond: {
      "^": "Closure:2;_captured_responsePort_0,_captured_response_1",
      call$0: [function() {
        J.send$1$x(this._captured_responsePort_0, this._captured_response_1);
      }, null, null, 0, 0, null, "call"]
    },
    _EventLoop: {
      "^": "Object;events,_activeJsAsyncCount",
      dequeue$0: function() {
        var t1 = this.events;
        if (t1._head === t1._tail)
          return;
        return t1.removeFirst$0();
      },
      runIteration$0: function() {
        var $event, t1, t2;
        $event = this.dequeue$0();
        if ($event == null) {
          if (init.globalState.rootContext != null)
            if (init.globalState.isolates.containsKey$1(0, init.globalState.rootContext.id))
              if (init.globalState.fromCommandLine === true) {
                t1 = init.globalState.rootContext.ports;
                t1 = t1.get$isEmpty(t1);
              } else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
          t1 = init.globalState;
          if (t1.isWorker === true) {
            t2 = t1.isolates;
            t2 = t2.get$isEmpty(t2) && t1.topEventLoop._activeJsAsyncCount === 0;
          } else
            t2 = false;
          if (t2) {
            t1 = t1.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "close"]);
            t2 = new H._Serializer(true, H.setRuntimeTypeInfo(new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0), [null, P.$int])).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          }
          return false;
        }
        $event.process$0();
        return true;
      },
      _runHelper$0: function() {
        if (self.window != null)
          new H._EventLoop__runHelper_next(this).call$0();
        else
          for (; this.runIteration$0();)
            ;
      },
      run$0: function() {
        var e, trace, exception, t1, t2;
        if (init.globalState.isWorker !== true)
          this._runHelper$0();
        else
          try {
            this._runHelper$0();
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            trace = H.getTraceFromException(exception);
            t1 = init.globalState.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)]);
            t2 = new H._Serializer(true, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          }
      }
    },
    _EventLoop__runHelper_next: {
      "^": "Closure:2;__isolate_helper$_captured_this_0",
      call$0: [function() {
        if (!this.__isolate_helper$_captured_this_0.runIteration$0())
          return;
        P.Timer_Timer(C.Duration_0, this);
      }, null, null, 0, 0, null, "call"]
    },
    _IsolateEvent: {
      "^": "Object;isolate,fn,message",
      process$0: function() {
        var t1 = this.isolate;
        if (t1.get$isPaused() === true) {
          J.add$1$ax(t1.get$delayedEvents(), this);
          return;
        }
        t1.eval$1(this.fn);
      }
    },
    _MainManagerStub: {
      "^": "Object;"
    },
    IsolateNatives__processWorkerMessage_closure: {
      "^": "Closure:0;_captured_entryPoint_0,_captured_args_1,_captured_message_2,_captured_isSpawnUri_3,_captured_startPaused_4,_captured_replyTo_5",
      call$0: [function() {
        H.IsolateNatives__startIsolate(this._captured_entryPoint_0, this._captured_args_1, this._captured_message_2, this._captured_isSpawnUri_3, this._captured_startPaused_4, this._captured_replyTo_5);
      }, null, null, 0, 0, null, "call"]
    },
    IsolateNatives__startIsolate_runStartFunction: {
      "^": "Closure:2;_captured_topLevel_0,_captured_args_1,_captured_message_2,_captured_isSpawnUri_3,_captured_context_4",
      call$0: [function() {
        var t1, t2, t3, t4;
        t1 = this._captured_context_4;
        t1.set$initialized(true);
        if (this._captured_isSpawnUri_3 !== true)
          this._captured_topLevel_0.call$1(this._captured_message_2);
        else {
          t2 = this._captured_topLevel_0;
          t3 = H.getDynamicRuntimeType();
          t4 = H.buildFunctionType(t3, [t3, t3])._isTest$1(t2);
          if (t4)
            t2.call$2(this._captured_args_1, this._captured_message_2);
          else {
            t3 = H.buildFunctionType(t3, [t3])._isTest$1(t2);
            if (t3)
              t2.call$1(this._captured_args_1);
            else
              t2.call$0();
          }
        }
        t1._updateGlobalState$0();
      }, null, null, 0, 0, null, "call"]
    },
    _BaseSendPort: {
      "^": "Object;"
    },
    _NativeJsSendPort: {
      "^": "_BaseSendPort;_receivePort,_isolateId",
      send$1: function(_, message) {
        var isolate, t1, msg, t2;
        isolate = init.globalState.isolates.$index(0, this._isolateId);
        if (isolate == null)
          return;
        t1 = this._receivePort;
        if (t1.get$_isClosed() === true)
          return;
        msg = H._clone(message);
        if (J.$eq$(isolate.get$controlPort(), t1)) {
          isolate.handleControlMessage$1(msg);
          return;
        }
        t1 = init.globalState.topEventLoop;
        t2 = "receive " + H.S(message);
        t1.events._add$1(0, new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(this, msg), t2));
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H._NativeJsSendPort && J.$eq$(this._receivePort, other._receivePort);
      },
      get$hashCode: function(_) {
        return this._receivePort.get$_id();
      }
    },
    _NativeJsSendPort_send_closure: {
      "^": "Closure:0;__isolate_helper$_captured_this_0,_captured_msg_1",
      call$0: [function() {
        var t1 = this.__isolate_helper$_captured_this_0._receivePort;
        if (t1.get$_isClosed() !== true)
          J.__isolate_helper$_add$1$x(t1, this._captured_msg_1);
      }, null, null, 0, 0, null, "call"]
    },
    _WorkerSendPort: {
      "^": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
      send$1: function(_, message) {
        var t1, workerMessage, manager;
        t1 = P.LinkedHashMap__makeLiteral(["command", "message", "port", this, "msg", message]);
        workerMessage = new H._Serializer(true, P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, P.$int)).serialize$1(t1);
        if (init.globalState.isWorker === true) {
          init.globalState.mainManager.toString;
          self.postMessage(workerMessage);
        } else {
          manager = init.globalState.managers.$index(0, this._workerId);
          if (manager != null)
            manager.postMessage(workerMessage);
        }
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H._WorkerSendPort && J.$eq$(this._workerId, other._workerId) && J.$eq$(this._isolateId, other._isolateId) && J.$eq$(this._receivePortId, other._receivePortId);
      },
      get$hashCode: function(_) {
        return J.$xor$n(J.$xor$n(J.$shl$n(this._workerId, 16), J.$shl$n(this._isolateId, 8)), this._receivePortId);
      }
    },
    RawReceivePortImpl: {
      "^": "Object;_id<,_handler,_isClosed<",
      __isolate_helper$_close$0: function() {
        this._isClosed = true;
        this._handler = null;
      },
      close$0: function(_) {
        var t1, t2;
        if (this._isClosed)
          return;
        this._isClosed = true;
        this._handler = null;
        t1 = init.globalState.currentContext;
        t2 = this._id;
        t1.ports.remove$1(0, t2);
        t1.weakPorts.remove$1(0, t2);
        t1._updateGlobalState$0();
      },
      __isolate_helper$_add$1: function(_, dataEvent) {
        if (this._isClosed)
          return;
        this._handler$1(dataEvent);
      },
      get$sendPort: function() {
        return new H._NativeJsSendPort(this, init.globalState.currentContext.id);
      },
      _handler$1: function(arg0) {
        return this._handler.call$1(arg0);
      },
      $isRawReceivePort: 1
    },
    TimerImpl: {
      "^": "Object;_once,_inEventLoop,_handle",
      cancel$0: function(_) {
        var t1;
        if (self.setTimeout != null) {
          if (this._inEventLoop)
            throw H.wrapException(new P.UnsupportedError("Timer in event loop cannot be canceled."));
          t1 = this._handle;
          if (t1 == null)
            return;
          --init.globalState.topEventLoop._activeJsAsyncCount;
          self.clearTimeout(t1);
          this._handle = null;
        } else
          throw H.wrapException(new P.UnsupportedError("Canceling a timer."));
      },
      TimerImpl$2: function(milliseconds, callback) {
        var t1, t2;
        if (milliseconds === 0)
          t1 = self.setTimeout == null || init.globalState.isWorker === true;
        else
          t1 = false;
        if (t1) {
          this._handle = 1;
          t1 = init.globalState.topEventLoop;
          t2 = init.globalState.currentContext;
          t1.events._add$1(0, new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
          this._inEventLoop = true;
        } else if (self.setTimeout != null) {
          ++init.globalState.topEventLoop._activeJsAsyncCount;
          this._handle = self.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(new P.UnsupportedError("Timer greater than 0."));
      },
      static: {TimerImpl$: function(milliseconds, callback) {
          var t1 = new H.TimerImpl(true, false, null);
          t1.TimerImpl$2(milliseconds, callback);
          return t1;
        }}
    },
    TimerImpl_internalCallback: {
      "^": "Closure:2;__isolate_helper$_captured_this_0,_captured_callback_1",
      call$0: [function() {
        this.__isolate_helper$_captured_this_0._handle = null;
        this._captured_callback_1.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    TimerImpl_internalCallback0: {
      "^": "Closure:2;__isolate_helper$_captured_this_2,_captured_callback_3",
      call$0: [function() {
        this.__isolate_helper$_captured_this_2._handle = null;
        --init.globalState.topEventLoop._activeJsAsyncCount;
        this._captured_callback_3.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    CapabilityImpl: {
      "^": "Object;_id<",
      get$hashCode: function(_) {
        var hash, t1;
        hash = this._id;
        t1 = J.getInterceptor$n(hash);
        hash = J.$xor$n(t1.$shr(hash, 0), t1.$tdiv(hash, 4294967296));
        t1 = J.getInterceptor$i(hash);
        hash = J.$and$n(J.$add$ns(t1.$not(hash), t1.$shl(hash, 15)), 4294967295);
        t1 = J.getInterceptor$n(hash);
        hash = J.$and$n(J.$mul$ns(t1.$xor(hash, t1.$shr(hash, 12)), 5), 4294967295);
        t1 = J.getInterceptor$n(hash);
        hash = J.$and$n(J.$mul$ns(t1.$xor(hash, t1.$shr(hash, 4)), 2057), 4294967295);
        t1 = J.getInterceptor$n(hash);
        return t1.$xor(hash, t1.$shr(hash, 16));
      },
      $eq: function(_, other) {
        var t1, t2;
        if (other == null)
          return false;
        if (other === this)
          return true;
        if (other instanceof H.CapabilityImpl) {
          t1 = this._id;
          t2 = other._id;
          return t1 == null ? t2 == null : t1 === t2;
        }
        return false;
      }
    },
    _Serializer: {
      "^": "Object;_serializeSendPorts,serializedObjectIds",
      serialize$1: [function(x) {
        var t1, serializationId, serializeTearOff, t2, $name;
        if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
          return x;
        t1 = this.serializedObjectIds;
        serializationId = t1.$index(0, x);
        if (serializationId != null)
          return ["ref", serializationId];
        t1.$indexSet(0, x, t1.get$length(t1));
        t1 = J.getInterceptor(x);
        if (!!t1.$isNativeByteBuffer)
          return ["buffer", x];
        if (!!t1.$isNativeTypedData)
          return ["typed", x];
        if (!!t1.$isJSIndexable)
          return this.serializeJSIndexable$1(x);
        if (!!t1.$isInternalMap) {
          serializeTearOff = this.get$serialize();
          t2 = t1.get$keys(x);
          t2 = H.MappedIterable_MappedIterable(t2, serializeTearOff, H.getRuntimeTypeArgument(t2, "Iterable", 0), null);
          t2 = P.List_List$from(t2, true, H.getRuntimeTypeArgument(t2, "Iterable", 0));
          t1 = t1.get$values(x);
          t1 = H.MappedIterable_MappedIterable(t1, serializeTearOff, H.getRuntimeTypeArgument(t1, "Iterable", 0), null);
          return ["map", t2, P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0))];
        }
        if (!!t1.$isJSObject)
          return this.serializeJSObject$1(x);
        if (!!t1.$isInterceptor)
          this.unsupported$1(x);
        if (!!t1.$isRawReceivePort)
          this.unsupported$2(x, "RawReceivePorts can't be transmitted:");
        if (!!t1.$is_NativeJsSendPort)
          return this.serializeJsSendPort$1(x);
        if (!!t1.$is_WorkerSendPort)
          return this.serializeWorkerSendPort$1(x);
        if (!!t1.$isClosure) {
          $name = x.$static_name;
          if ($name == null)
            this.unsupported$2(x, "Closures can't be transmitted:");
          return ["function", $name];
        }
        if (!!t1.$isCapabilityImpl)
          return ["capability", x._id];
        if (!(x instanceof P.Object))
          this.unsupported$1(x);
        return ["dart", init.classIdExtractor(x), this.serializeArrayInPlace$1(init.classFieldsExtractor(x))];
      }, "call$1", "get$serialize", 2, 0, 1, 32],
      unsupported$2: function(x, message) {
        throw H.wrapException(new P.UnsupportedError(H.S(message == null ? "Can't transmit:" : message) + " " + H.S(x)));
      },
      unsupported$1: function(x) {
        return this.unsupported$2(x, null);
      },
      serializeJSIndexable$1: function(indexable) {
        var serialized = this.serializeArray$1(indexable);
        if (!!indexable.fixed$length)
          return ["fixed", serialized];
        if (!indexable.fixed$length)
          return ["extendable", serialized];
        if (!indexable.immutable$list)
          return ["mutable", serialized];
        if (indexable.constructor === Array)
          return ["const", serialized];
        this.unsupported$2(indexable, "Can't serialize indexable: ");
      },
      serializeArray$1: function(x) {
        var serialized, i, t1;
        serialized = [];
        C.JSArray_methods.set$length(serialized, x.length);
        for (i = 0; i < x.length; ++i) {
          t1 = this.serialize$1(x[i]);
          if (i >= serialized.length)
            return H.ioore(serialized, i);
          serialized[i] = t1;
        }
        return serialized;
      },
      serializeArrayInPlace$1: function(x) {
        var i;
        for (i = 0; i < x.length; ++i)
          C.JSArray_methods.$indexSet(x, i, this.serialize$1(x[i]));
        return x;
      },
      serializeJSObject$1: function(x) {
        var keys, values, i, t1;
        if (!!x.constructor && x.constructor !== Object)
          this.unsupported$2(x, "Only plain JS Objects are supported:");
        keys = Object.keys(x);
        values = [];
        C.JSArray_methods.set$length(values, keys.length);
        for (i = 0; i < keys.length; ++i) {
          t1 = this.serialize$1(x[keys[i]]);
          if (i >= values.length)
            return H.ioore(values, i);
          values[i] = t1;
        }
        return ["js-object", keys, values];
      },
      serializeWorkerSendPort$1: function(x) {
        if (this._serializeSendPorts)
          return ["sendport", x._workerId, x._isolateId, x._receivePortId];
        return ["raw sendport", x];
      },
      serializeJsSendPort$1: function(x) {
        if (this._serializeSendPorts)
          return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
        return ["raw sendport", x];
      }
    },
    _Deserializer: {
      "^": "Object;_adjustSendPorts,deserializedObjects",
      deserialize$1: [function(x) {
        var serializationId, t1, result, classId, fields, emptyInstance;
        if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
          return x;
        if (typeof x !== "object" || x === null || x.constructor !== Array)
          throw H.wrapException(P.ArgumentError$("Bad serialized message: " + H.S(x)));
        switch (C.JSArray_methods.get$first(x)) {
          case "ref":
            if (1 >= x.length)
              return H.ioore(x, 1);
            serializationId = x[1];
            t1 = this.deserializedObjects;
            if (serializationId >>> 0 !== serializationId || serializationId >= t1.length)
              return H.ioore(t1, serializationId);
            return t1[serializationId];
          case "buffer":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "typed":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "fixed":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            t1 = H.setRuntimeTypeInfo(this.deserializeArrayInPlace$1(result), [null]);
            t1.fixed$length = Array;
            return t1;
          case "extendable":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return H.setRuntimeTypeInfo(this.deserializeArrayInPlace$1(result), [null]);
          case "mutable":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return this.deserializeArrayInPlace$1(result);
          case "const":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            t1 = H.setRuntimeTypeInfo(this.deserializeArrayInPlace$1(result), [null]);
            t1.fixed$length = Array;
            return t1;
          case "map":
            return this.deserializeMap$1(x);
          case "sendport":
            return this.deserializeSendPort$1(x);
          case "raw sendport":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "js-object":
            return this.deserializeJSObject$1(x);
          case "function":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = init.globalFunctions[x[1]]();
            this.deserializedObjects.push(result);
            return result;
          case "capability":
            if (1 >= x.length)
              return H.ioore(x, 1);
            return new H.CapabilityImpl(x[1]);
          case "dart":
            t1 = x.length;
            if (1 >= t1)
              return H.ioore(x, 1);
            classId = x[1];
            if (2 >= t1)
              return H.ioore(x, 2);
            fields = x[2];
            emptyInstance = init.instanceFromClassId(classId);
            this.deserializedObjects.push(emptyInstance);
            this.deserializeArrayInPlace$1(fields);
            return init.initializeEmptyInstance(classId, emptyInstance, fields);
          default:
            throw H.wrapException("couldn't deserialize: " + H.S(x));
        }
      }, "call$1", "get$deserialize", 2, 0, 1, 32],
      deserializeArrayInPlace$1: function(x) {
        var t1, i, t2;
        t1 = J.getInterceptor$asx(x);
        i = 0;
        while (true) {
          t2 = t1.get$length(x);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t1.$indexSet(x, i, this.deserialize$1(t1.$index(x, i)));
          ++i;
        }
        return x;
      },
      deserializeMap$1: function(x) {
        var t1, keys, values, result, t2, i, t3;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        keys = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        values = x[2];
        result = P.LinkedHashMap__makeEmpty();
        this.deserializedObjects.push(result);
        keys = J.toList$0$ax(J.map$1$ax(keys, this.get$deserialize()));
        t1 = J.getInterceptor$asx(keys);
        t2 = J.getInterceptor$asx(values);
        i = 0;
        while (true) {
          t3 = t1.get$length(keys);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          result.$indexSet(0, t1.$index(keys, i), this.deserialize$1(t2.$index(values, i)));
          ++i;
        }
        return result;
      },
      deserializeSendPort$1: function(x) {
        var t1, managerId, isolateId, receivePortId, isolate, receivePort, result;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        managerId = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        isolateId = x[2];
        if (3 >= t1)
          return H.ioore(x, 3);
        receivePortId = x[3];
        if (J.$eq$(managerId, init.globalState.currentManagerId)) {
          isolate = init.globalState.isolates.$index(0, isolateId);
          if (isolate == null)
            return;
          receivePort = isolate.lookup$1(receivePortId);
          if (receivePort == null)
            return;
          result = new H._NativeJsSendPort(receivePort, isolateId);
        } else
          result = new H._WorkerSendPort(managerId, receivePortId, isolateId);
        this.deserializedObjects.push(result);
        return result;
      },
      deserializeJSObject$1: function(x) {
        var t1, keys, values, o, t2, i, t3;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        keys = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        values = x[2];
        o = {};
        this.deserializedObjects.push(o);
        t1 = J.getInterceptor$asx(keys);
        t2 = J.getInterceptor$asx(values);
        i = 0;
        while (true) {
          t3 = t1.get$length(keys);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          o[t1.$index(keys, i)] = this.deserialize$1(t2.$index(values, i));
          ++i;
        }
        return o;
      }
    }
  }], ["_js_helper", "dart:_js_helper",, H, {
    "^": "",
    ConstantMap_ConstantMap$from: function(other, $K, $V) {
      var t1, keys, allStrings, t2, t3, k, object, containsProto, protoValue, $length, v;
      t1 = J.getInterceptor$x(other);
      keys = J.toList$0$ax(t1.get$keys(other));
      t2 = J.getInterceptor$ax(keys);
      t3 = t2.get$iterator(keys);
      while (true) {
        if (!(t3.moveNext$0() === true)) {
          allStrings = true;
          break;
        }
        k = t3.get$current();
        if (typeof k !== "string") {
          allStrings = false;
          break;
        }
      }
      if (allStrings) {
        object = {};
        for (t2 = t2.get$iterator(keys), containsProto = false, protoValue = null, $length = 0; t2.moveNext$0() === true;) {
          k = t2.get$current();
          v = t1.$index(other, k);
          if (!J.$eq$(k, "__proto__")) {
            if (!object.hasOwnProperty(k))
              ++$length;
            object[k] = v;
          } else {
            protoValue = v;
            containsProto = true;
          }
        }
        if (containsProto)
          return H.setRuntimeTypeInfo(new H.ConstantProtoMap(protoValue, $length + 1, object, keys), [$K, $V]);
        return H.setRuntimeTypeInfo(new H.ConstantStringMap($length, object, keys), [$K, $V]);
      }
      return H.setRuntimeTypeInfo(new H.ConstantMapView(P.LinkedHashMap_LinkedHashMap$from(other, null, null)), [$K, $V]);
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable Map"));
    },
    getType: function(index) {
      return init.types[index];
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return !!J.getInterceptor(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    createInvocationMirror: function($name, internalName, kind, $arguments, argumentNames) {
      return new H.JSInvocationMirror($name, internalName, kind, $arguments, argumentNames, null);
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives__parseIntError: function(source, handleError) {
      throw H.wrapException(new P.FormatException(source, null, null));
    },
    Primitives_parseInt: function(source, radix, handleError) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i;
      H.checkString(source);
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return H.Primitives__parseIntError(source, handleError);
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return H.Primitives__parseIntError(source, handleError);
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods.codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return H.Primitives__parseIntError(source, handleError);
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName: function(object) {
      var interceptor, interceptorConstructor, interceptorConstructorName, $name, dispatchName, objectConstructor, decompiledName;
      interceptor = J.getInterceptor(object);
      interceptorConstructor = interceptor.constructor;
      if (typeof interceptorConstructor == "function") {
        interceptorConstructorName = interceptorConstructor.name;
        $name = typeof interceptorConstructorName === "string" ? interceptorConstructorName : null;
      } else
        $name = null;
      if ($name == null || interceptor === C.Interceptor_methods || !!J.getInterceptor(object).$isUnknownJavaScriptObject) {
        dispatchName = C.JS_CONST_8ZY(object);
        if (dispatchName === "Object") {
          objectConstructor = object.constructor;
          if (typeof objectConstructor == "function") {
            decompiledName = String(objectConstructor).match(/^\s*function\s*([\w$]*)\s*\(/)[1];
            if (typeof decompiledName === "string" && /^\w+$/.test(decompiledName))
              $name = decompiledName;
          }
          if ($name == null)
            $name = dispatchName;
        } else
          $name = dispatchName;
      }
      $name = $name;
      if ($name.length > 1 && C.JSString_methods.codeUnitAt$1($name, 0) === 36)
        $name = C.JSString_methods.substring$1($name, 1);
      return ($name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null)).replace(/[^<,> ]+/g, function(m) {
        return init.mangledGlobalNames[m] || m;
      });
    },
    Primitives_objectToHumanReadableString: function(object) {
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    Primitives__fromCharCodeApply: function(array) {
      var end, result, i, i0, chunkEnd;
      end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var a, t1, _i, i;
      a = H.setRuntimeTypeInfo([], [P.$int]);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, t2, i;
      for (t1 = charCodes.length, _i = 0; t2 = charCodes.length, _i < t2; t2 === t1 || (0, H.throwConcurrentModificationError)(charCodes), ++_i) {
        i = charCodes[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (typeof charCode !== "number")
        return H.iae(charCode);
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSNumber_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_valueFromDecomposedDate: function(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var jsMonth, value, t1, date;
      H.checkInt(years);
      H.checkInt(month);
      H.checkInt(day);
      H.checkInt(hours);
      H.checkInt(minutes);
      H.checkInt(seconds);
      H.checkInt(milliseconds);
      jsMonth = J.$sub$n(month, 1);
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return;
      t1 = J.getInterceptor$n(years);
      if (t1.$le(years, 0) === true || t1.$lt(years, 100) === true) {
        date = new Date(value);
        if (isUtc)
          date.setUTCFullYear(years);
        else
          date.setFullYear(years);
        return date.valueOf();
      }
      return value;
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver.millisecondsSinceEpoch);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getWeekday: function(receiver) {
      return C.JSInt_methods.$mod((receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDay() + 0 : H.Primitives_lazyAsJsDate(receiver).getDay() + 0) + 6, 7) + 1;
    },
    Primitives_getProperty: function(object, key) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, namedArgumentList, t2;
      t1 = {};
      t1._captured_argumentCount_0 = 0;
      $arguments = [];
      namedArgumentList = [];
      if (positionalArguments != null) {
        t2 = J.get$length$asx(positionalArguments);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t1._captured_argumentCount_0 = 0 + t2;
        C.JSArray_methods.addAll$1($arguments, positionalArguments);
      }
      t1._captured_names_1 = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, $arguments, namedArgumentList));
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, "call" + "$" + H.S(t1._captured_argumentCount_0) + t1._captured_names_1, 0, $arguments, namedArgumentList, null));
    },
    Primitives_applyFunctionWithPositionalArguments: function($function, positionalArguments) {
      var $arguments, t1;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      else
        $arguments = [];
      t1 = $arguments.length;
      if (t1 === 0) {
        if (!!$function.call$0)
          return $function.call$0();
      } else if (t1 === 1) {
        if (!!$function.call$1)
          return $function.call$1($arguments[0]);
      } else if (t1 === 2) {
        if (!!$function.call$2)
          return $function.call$2($arguments[0], $arguments[1]);
      } else if (t1 === 3)
        if (!!$function.call$3)
          return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
      return H.Primitives__genericApplyFunctionWithPositionalArguments($function, $arguments);
    },
    Primitives__genericApplyFunctionWithPositionalArguments: function($function, $arguments) {
      var argumentCount, jsFunction, info, requiredArgumentCount, maxArgumentCount, pos;
      argumentCount = $arguments.length;
      jsFunction = $function["call" + "$" + argumentCount];
      if (jsFunction == null) {
        jsFunction = J.getInterceptor($function)["call*"];
        if (jsFunction == null)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        requiredArgumentCount = info.requiredParameterCount;
        maxArgumentCount = requiredArgumentCount + info.optionalParameterCount;
        if (info.areOptionalParametersNamed || requiredArgumentCount > argumentCount || maxArgumentCount < argumentCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        $arguments = P.List_List$from($arguments, true, null);
        for (pos = argumentCount; pos < maxArgumentCount; ++pos)
          C.JSArray_methods.add$1($arguments, init.metadata[info.defaultValue$1(0, pos)]);
      }
      return jsFunction.apply($function, $arguments);
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1;
      if (typeof index !== "number" || Math.floor(index) !== index)
        return new P.ArgumentError(true, index, "index", null);
      $length = J.get$length$asx(indexable);
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, "index", null, $length);
      return P.RangeError$value(index, "index", null);
    },
    diagnoseRangeError: function(start, end, $length) {
      if (start > $length)
        return new P.RangeError(0, $length, true, start, "start", "Invalid value");
      if (end != null)
        if (end < start || end > $length)
          return new P.RangeError(start, $length, true, end, "end", "Invalid value");
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkInt: function(value) {
      if (typeof value !== "number" || Math.floor(value) !== value)
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    checkString: function(value) {
      if (typeof value !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: [function() {
      return J.toString$0$(this.dartException);
    }, null, null, 0, 0, null],
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(new P.ConcurrentModificationError(collection));
    },
    unwrapException: function(ex) {
      var t1, message, number, ieErrorCode, t2, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              t2 = H.S(message) + " (Error " + ieErrorCode + ")";
              return t1.call$1(new H.NullError(t2, null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(message, match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(new H.NullError(message, match == null ? null : match.method));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, null, null, typeof message === "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception, null);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception, null);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var $length, index, index0, index1;
      $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: [function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
      var t1 = J.getInterceptor(numberOfArguments);
      if (t1.$eq(numberOfArguments, 0))
        return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
      else if (t1.$eq(numberOfArguments, 1))
        return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
      else if (t1.$eq(numberOfArguments, 2))
        return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
      else if (t1.$eq(numberOfArguments, 3))
        return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
      else if (t1.$eq(numberOfArguments, 4))
        return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
      else
        throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    }, null, null, 14, 0, null, 66, 37, 35, 19, 39, 47, 70],
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, context, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, context, arity, a1, a2, a3, a4);
        };
      }(closure, arity, init.globalState.currentContext, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
      var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
      $function = functions[0];
      callName = $function.$callName;
      if (!!J.getInterceptor(reflectionInfo).$isList) {
        $function.$reflectionInfo = reflectionInfo;
        functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
      } else
        functionType = reflectionInfo;
      $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function() {
          this.$initialize();
        };
      else
        $constructor = function(a, b, c, d) {
          this.$initialize(a, b, c, d);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      t1 = !isStatic;
      if (t1) {
        isIntercepted = jsArguments.length == 1 && true;
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
        isIntercepted = false;
      }
      if (typeof functionType == "number")
        signatureFunction = function(t) {
          return function() {
            return H.getType(t);
          };
        }(functionType);
      else if (t1 && typeof functionType == "function") {
        getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
        signatureFunction = function(f, r) {
          return function() {
            return f.apply({$receiver: r(this)}, arguments);
          };
        }(functionType, getReceiver);
      } else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (t1 = functions.length, i = 1; i < t1; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          t2 = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = t2;
        }
      }
      $prototype["call*"] = trampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf, getReceiver;
      getSelf = H.BoundClosure_selfOf;
      getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(new H.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t1, stubName, arity, lookedUpFunction;
      H.BoundClosure_selfFieldName();
      t1 = $.BoundClosure_receiverFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("receiver");
        $.BoundClosure_receiverFieldNameCache = t1;
      }
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      return H.Closure_cspForwardInterceptedCall(arity, !t1, stubName, $function);
    },
    closureFromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
      var t1;
      functions.fixed$length = Array;
      if (!!J.getInterceptor(reflectionInfo).$isList) {
        reflectionInfo.fixed$length = Array;
        t1 = reflectionInfo;
      } else
        t1 = reflectionInfo;
      return H.Closure_fromTearOff(receiver, functions, t1, !!isStatic, jsArguments, $name);
    },
    propertyTypeCastError: function(value, property) {
      var t1 = J.getInterceptor$asx(property);
      throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = (typeof value === "object" || typeof value === "function") && J.getInterceptor(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError("Cyclic initialization for static " + H.S(staticName)));
    },
    buildFunctionType: function(returnType, parameterTypes, optionalParameterTypes) {
      return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
    },
    getDynamicRuntimeType: function() {
      return C.C_DynamicRuntimeType;
    },
    random64: function() {
      return (Math.random() * 0x100000000 >>> 0) + (Math.random() * 0x100000000 >>> 0) * 4294967296;
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target.$builtinTypeInfo = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$builtinTypeInfo;
    },
    getRuntimeTypeArguments: function(target, substitutionName) {
      return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
      return $arguments == null ? null : $arguments[index];
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : rti[index];
    },
    runtimeTypeToString: function(rti, onTypeVariable) {
      if (rti == null)
        return "dynamic";
      else if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return rti[0].builtin$cls + H.joinArguments(rti, 1, onTypeVariable);
      else if (typeof rti == "function")
        return rti.builtin$cls;
      else if (typeof rti === "number" && Math.floor(rti) === rti)
        return C.JSInt_methods.toString$0(rti);
      else
        return;
    },
    joinArguments: function(types, startIndex, onTypeVariable) {
      var buffer, index, firstArgument, allDynamic, t1, argument;
      if (types == null)
        return "";
      buffer = new P.StringBuffer("");
      for (index = startIndex, firstArgument = true, allDynamic = true, t1 = ""; index < types.length; ++index) {
        if (firstArgument)
          firstArgument = false;
        else
          buffer._contents = t1 + ", ";
        argument = types[index];
        if (argument != null)
          allDynamic = false;
        t1 = buffer._contents += H.S(H.runtimeTypeToString(argument, onTypeVariable));
      }
      return allDynamic ? "" : "<" + H.S(buffer) + ">";
    },
    getRuntimeTypeString: function(object) {
      var className = J.getInterceptor(object).constructor.builtin$cls;
      if (object == null)
        return className;
      return className + H.joinArguments(object.$builtinTypeInfo, 0, null);
    },
    substitute: function(substitution, $arguments) {
      if (typeof substitution == "function") {
        substitution = substitution.apply(null, $arguments);
        if (substitution == null)
          return substitution;
        if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
          return substitution;
        if (typeof substitution == "function")
          return substitution.apply(null, $arguments);
      }
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor(object);
      if (interceptor[isField] == null)
        return false;
      return H.areSubtypes(H.substitute(interceptor[asField], $arguments), checks);
    },
    subtypeCast: function(object, isField, checks, asField) {
      if (object != null && !H.checkSubtype(object, isField, checks, asField))
        throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(object), (isField.substring(3) + H.joinArguments(checks, 0, null)).replace(/[^<,> ]+/g, function(m) {
          return init.mangledGlobalNames[m] || m;
        })));
      return object;
    },
    areSubtypes: function(s, t) {
      var len, i;
      if (s == null || t == null)
        return true;
      len = s.length;
      for (i = 0; i < len; ++i)
        if (!H.isSubtype(s[i], t[i]))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.getRuntimeTypeArguments(context, contextName));
    },
    checkSubtypeOfRuntimeType: function(o, t) {
      var rti, type, targetSignatureFunction;
      if (o == null)
        return t == null || t.builtin$cls === "Object" || t.builtin$cls === "Null";
      if (t == null)
        return true;
      rti = H.getRuntimeTypeInfo(o);
      o = J.getInterceptor(o);
      type = o.constructor;
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      if ('func' in t) {
        targetSignatureFunction = o.$signature;
        if (targetSignatureFunction == null)
          return false;
        return H.isFunctionSubtype(targetSignatureFunction.apply(o, null), t);
      }
      return H.isSubtype(type, t);
    },
    subtypeOfRuntimeTypeCast: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(object), H.runtimeTypeToString(type, null)));
      return object;
    },
    isSubtype: function(s, t) {
      var t1, typeOfS, t2, typeOfT, substitution;
      if (s === t)
        return true;
      if (s == null || t == null)
        return true;
      if ('func' in t)
        return H.isFunctionSubtype(s, t);
      if ('func' in s)
        return t.builtin$cls === "Function";
      t1 = typeof s === "object" && s !== null && s.constructor === Array;
      typeOfS = t1 ? s[0] : s;
      t2 = typeof t === "object" && t !== null && t.constructor === Array;
      typeOfT = t2 ? t[0] : t;
      if (typeOfT !== typeOfS) {
        if (!('$is' + H.runtimeTypeToString(typeOfT, null) in typeOfS.prototype))
          return false;
        substitution = typeOfS.prototype["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
      } else
        substitution = null;
      if (!t1 && substitution == null || !t2)
        return true;
      t1 = t1 ? s.slice(1) : null;
      t2 = t2 ? t.slice(1) : null;
      return H.areSubtypes(H.substitute(substitution, t1), t2);
    },
    areAssignable: function(s, t, allowShorter) {
      var t1, sLength, tLength, i, t2;
      t1 = t == null;
      if (t1 && s == null)
        return true;
      if (t1)
        return allowShorter;
      if (s == null)
        return false;
      sLength = s.length;
      tLength = t.length;
      if (allowShorter) {
        if (sLength < tLength)
          return false;
      } else if (sLength !== tLength)
        return false;
      for (i = 0; i < tLength; ++i) {
        t1 = s[i];
        t2 = t[i];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      return true;
    },
    areAssignableMaps: function(s, t) {
      var t1, names, i, $name, tType, sType;
      if (t == null)
        return true;
      if (s == null)
        return false;
      t1 = Object.getOwnPropertyNames(t);
      t1.fixed$length = Array;
      names = t1;
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        tType = t[$name];
        sType = s[$name];
        if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
          return false;
      }
      return true;
    },
    isFunctionSubtype: function(s, t) {
      var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
      if (!('func' in s))
        return false;
      if ("v" in s) {
        if (!("v" in t) && "ret" in t)
          return false;
      } else if (!("v" in t)) {
        sReturnType = s.ret;
        tReturnType = t.ret;
        if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
          return false;
      }
      sParameterTypes = s.args;
      tParameterTypes = t.args;
      sOptionalParameterTypes = s.opt;
      tOptionalParameterTypes = t.opt;
      sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
      tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
      if (sParametersLen > tParametersLen)
        return false;
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      if (sParametersLen === tParametersLen) {
        if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
          return false;
        if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
          return false;
      } else {
        for (pos = 0; pos < sParametersLen; ++pos) {
          t1 = sParameterTypes[pos];
          t2 = tParameterTypes[pos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
        for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
          t1 = sOptionalParameterTypes[sPos];
          t2 = tParameterTypes[tPos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
        for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
          t1 = sOptionalParameterTypes[sPos];
          t2 = tOptionalParameterTypes[tPos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
      }
      return H.areAssignableMaps(s.named, t.named);
    },
    toStringForNativeObject: function(obj) {
      var t1 = $.getTagFunction;
      return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
    },
    hashCodeForNativeObject: function(object) {
      return H.Primitives_objectHashCode(object);
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var tag, record, interceptor, interceptorClass, mark, t1;
      tag = $.getTagFunction.call$1(obj);
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = $.alternateTagFunction.call$2(obj, tag);
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(new P.UnimplementedError(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
      hooks = C.JS_CONST_gkc();
      hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc0, H.applyHooksTransformer(C.JS_CONST_4hp, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_8ZY), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1;
      if (typeof other === "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else {
        t1 = J.allMatches$1$s(other, C.JSString_methods.substring$1(receiver, startIndex));
        return !t1.get$isEmpty(t1);
      }
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var $length, t1, i, nativeRegexp;
      H.checkString(replacement);
      if (typeof pattern === "string")
        if (pattern === "")
          if (receiver === "")
            return replacement;
          else {
            $length = receiver.length;
            for (t1 = replacement, i = 0; i < $length; ++i)
              t1 = t1 + receiver[i] + replacement;
            return t1.charCodeAt(0) == 0 ? t1 : t1;
          }
        else
          return receiver.replace(new RegExp(pattern.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), replacement.replace(/\$/g, "$$$$"));
      else if (pattern instanceof H.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, replacement.replace(/\$/g, "$$$$"));
      } else
        throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
    },
    ConstantMapView: {
      "^": "UnmodifiableMapView;_map",
      $asUnmodifiableMapView: Isolate.functionThatReturnsNull,
      $asMapView: Isolate.functionThatReturnsNull,
      $asMap: Isolate.functionThatReturnsNull,
      $isMap: 1
    },
    ConstantMap: {
      "^": "Object;",
      get$isEmpty: function(_) {
        return J.$eq$(this.get$length(this), 0);
      },
      get$isNotEmpty: function(_) {
        return !J.$eq$(this.get$length(this), 0);
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      $indexSet: function(_, key, val) {
        return H.ConstantMap__throwUnmodifiable();
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        return H.ConstantMap__throwUnmodifiable();
      },
      remove$1: function(_, key) {
        return H.ConstantMap__throwUnmodifiable();
      },
      $isMap: 1,
      $asMap: null
    },
    ConstantStringMap: {
      "^": "ConstantMap;length>,__js_helper$_jsObject,__js_helper$_keys",
      containsKey$1: function(_, key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return false;
        return this.__js_helper$_jsObject.hasOwnProperty(key);
      },
      $index: function(_, key) {
        if (!this.containsKey$1(0, key))
          return;
        return this._fetch$1(0, key);
      },
      _fetch$1: function(_, key) {
        return this.__js_helper$_jsObject[key];
      },
      forEach$1: function(_, f) {
        var keys, i, key;
        keys = this.__js_helper$_keys;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          f.call$2(key, this._fetch$1(0, key));
        }
      },
      get$keys: function(_) {
        return H.setRuntimeTypeInfo(new H._ConstantMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
      }
    },
    ConstantProtoMap: {
      "^": "ConstantStringMap;_protoValue,length,__js_helper$_jsObject,__js_helper$_keys",
      containsKey$1: function(_, key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return true;
        return this.__js_helper$_jsObject.hasOwnProperty(key);
      },
      _fetch$1: function(_, key) {
        return "__proto__" === key ? this._protoValue : this.__js_helper$_jsObject[key];
      }
    },
    _ConstantMapKeyIterable: {
      "^": "Iterable;__js_helper$_map",
      get$iterator: function(_) {
        return J.get$iterator$ax(this.__js_helper$_map.__js_helper$_keys);
      },
      get$length: function(_) {
        return J.get$length$asx(this.__js_helper$_map.__js_helper$_keys);
      }
    },
    GeneralConstantMap: {
      "^": "ConstantMap;_jsData",
      _getMap$0: function() {
        var backingMap = this.$map;
        if (backingMap == null) {
          backingMap = new H.JsLinkedHashMap(0, null, null, null, null, null, 0);
          backingMap.$builtinTypeInfo = this.$builtinTypeInfo;
          H.fillLiteralMap(this._jsData, backingMap);
          this.$map = backingMap;
        }
        return backingMap;
      },
      containsKey$1: function(_, key) {
        return this._getMap$0().containsKey$1(0, key);
      },
      $index: function(_, key) {
        return this._getMap$0().$index(0, key);
      },
      forEach$1: function(_, f) {
        this._getMap$0().forEach$1(0, f);
      },
      get$keys: function(_) {
        var t1 = this._getMap$0();
        return t1.get$keys(t1);
      },
      get$length: function(_) {
        var t1 = this._getMap$0();
        return t1.get$length(t1);
      }
    },
    JSInvocationMirror: {
      "^": "Object;_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_namedIndices",
      get$memberName: function() {
        var $name, t1, unmangledName;
        $name = this._memberName;
        if (!!J.getInterceptor($name).$isSymbol0)
          return $name;
        t1 = $.$get$mangledNames();
        unmangledName = t1.$index(0, $name);
        if (unmangledName != null) {
          t1 = unmangledName.split(":");
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          $name = t1[0];
        } else if (t1.$index(0, this._internalName) == null)
          P.print("Warning: '" + H.S($name) + "' is used reflectively but not in MirrorsUsed. This will break minified code.");
        t1 = new H.Symbol($name);
        this._memberName = t1;
        return t1;
      },
      get$isMethod: function() {
        return J.$eq$(this._kind, 0);
      },
      get$positionalArguments: function() {
        var t1, t2, argumentCount, list, index;
        if (J.$eq$(this._kind, 1))
          return C.List_empty;
        t1 = this._arguments;
        t2 = J.getInterceptor$asx(t1);
        argumentCount = J.$sub$n(t2.get$length(t1), J.get$length$asx(this._namedArgumentNames));
        if (J.$eq$(argumentCount, 0))
          return C.List_empty;
        list = [];
        if (typeof argumentCount !== "number")
          return H.iae(argumentCount);
        index = 0;
        for (; index < argumentCount; ++index)
          list.push(t2.$index(t1, index));
        list.fixed$length = Array;
        list.immutable$list = Array;
        return list;
      },
      get$namedArguments: function() {
        var t1, t2, namedArgumentCount, t3, t4, namedArgumentsStartIndex, map, t5, i;
        if (!J.$eq$(this._kind, 0))
          return C.Map_empty;
        t1 = this._namedArgumentNames;
        t2 = J.getInterceptor$asx(t1);
        namedArgumentCount = t2.get$length(t1);
        t3 = this._arguments;
        t4 = J.getInterceptor$asx(t3);
        namedArgumentsStartIndex = J.$sub$n(t4.get$length(t3), namedArgumentCount);
        if (J.$eq$(namedArgumentCount, 0))
          return C.Map_empty;
        map = H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [P.Symbol0, null]);
        if (typeof namedArgumentCount !== "number")
          return H.iae(namedArgumentCount);
        t5 = J.getInterceptor$ns(namedArgumentsStartIndex);
        i = 0;
        for (; i < namedArgumentCount; ++i)
          map.$indexSet(0, new H.Symbol(t2.$index(t1, i)), t4.$index(t3, t5.$add(namedArgumentsStartIndex, i)));
        return H.setRuntimeTypeInfo(new H.ConstantMapView(map), [P.Symbol0, null]);
      }
    },
    ReflectionInfo: {
      "^": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType,cachedSortedIndices",
      defaultValue$1: function(_, parameter) {
        var t1 = this.requiredParameterCount;
        if (typeof parameter !== "number")
          return parameter.$lt();
        if (parameter < t1)
          return;
        return this.data[3 + parameter - t1];
      },
      static: {ReflectionInfo_ReflectionInfo: function(jsFunction) {
          var data, requiredParametersInfo, optionalParametersInfo;
          data = jsFunction.$reflectionInfo;
          if (data == null)
            return;
          data.fixed$length = Array;
          data = data;
          requiredParametersInfo = data[0];
          optionalParametersInfo = data[1];
          return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParametersInfo >> 1, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2], null);
        }}
    },
    Primitives_functionNoSuchMethod_closure: {
      "^": "Closure:42;__js_helper$_box_0,_captured_arguments_1,_captured_namedArgumentList_2",
      call$2: function($name, argument) {
        var t1 = this.__js_helper$_box_0;
        t1._captured_names_1 = t1._captured_names_1 + "$" + H.S($name);
        this._captured_namedArgumentList_2.push($name);
        this._captured_arguments_1.push(argument);
        ++t1._captured_argumentCount_0;
      }
    },
    TypeErrorDecoder: {
      "^": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
      matchTypeError$1: function(message) {
        var match, result, t1;
        match = new RegExp(this._pattern).exec(message);
        if (match == null)
          return;
        result = Object.create(null);
        t1 = this._arguments;
        if (t1 !== -1)
          result.arguments = match[t1 + 1];
        t1 = this._argumentsExpr;
        if (t1 !== -1)
          result.argumentsExpr = match[t1 + 1];
        t1 = this._expr;
        if (t1 !== -1)
          result.expr = match[t1 + 1];
        t1 = this._method;
        if (t1 !== -1)
          result.method = match[t1 + 1];
        t1 = this._receiver;
        if (t1 !== -1)
          result.receiver = match[t1 + 1];
        return result;
      },
      static: {TypeErrorDecoder_extractPattern: function(message) {
          var match, $arguments, argumentsExpr, expr, method, receiver;
          message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
          match = message.match(/\\\$[a-zA-Z]+\\\$/g);
          if (match == null)
            match = [];
          $arguments = match.indexOf("\\$arguments\\$");
          argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
          expr = match.indexOf("\\$expr\\$");
          method = match.indexOf("\\$method\\$");
          receiver = match.indexOf("\\$receiver\\$");
          return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
        }, TypeErrorDecoder_provokeCallErrorOn: function(expression) {
          return function($expr$) {
            var $argumentsExpr$ = '$arguments$';
            try {
              $expr$.$method$($argumentsExpr$);
            } catch (e) {
              return e.message;
            }
          }(expression);
        }, TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
          return function($expr$) {
            try {
              $expr$.$method$;
            } catch (e) {
              return e.message;
            }
          }(expression);
        }}
    },
    NullError: {
      "^": "Error;_message,_method",
      toString$0: function(_) {
        var t1 = this._method;
        if (t1 == null)
          return "NullError: " + H.S(this._message);
        return "NullError: method not found: '" + H.S(t1) + "' on null";
      },
      $isNoSuchMethodError: 1
    },
    JsNoSuchMethodError: {
      "^": "Error;_message,_method,_receiver",
      toString$0: function(_) {
        var t1, t2;
        t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        t2 = this._receiver;
        if (t2 == null)
          return "NoSuchMethodError: method not found: '" + H.S(t1) + "' (" + H.S(this._message) + ")";
        return "NoSuchMethodError: method not found: '" + H.S(t1) + "' on '" + H.S(t2) + "' (" + H.S(this._message) + ")";
      },
      $isNoSuchMethodError: 1,
      static: {JsNoSuchMethodError$: function(_message, match) {
          var t1, t2;
          t1 = match == null;
          t2 = t1 ? null : match.method;
          return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
        }}
    },
    UnknownJsTypeError: {
      "^": "Error;_message",
      toString$0: function(_) {
        var t1 = this._message;
        return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
      }
    },
    ExceptionAndStackTrace: {
      "^": "Object;dartException,stackTrace<"
    },
    unwrapException_saveStackTrace: {
      "^": "Closure:1;_captured_ex_0",
      call$1: function(error) {
        if (!!J.getInterceptor(error).$isError)
          if (error.$thrownJsError == null)
            error.$thrownJsError = this._captured_ex_0;
        return error;
      }
    },
    _StackTrace: {
      "^": "Object;_exception,_trace",
      toString$0: function(_) {
        var t1, trace;
        t1 = this._trace;
        if (t1 != null)
          return t1;
        t1 = this._exception;
        trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
        t1 = trace == null ? "" : trace;
        this._trace = t1;
        return t1;
      }
    },
    invokeClosure_closure: {
      "^": "Closure:0;_captured_closure_0",
      call$0: function() {
        return this._captured_closure_0.call$0();
      }
    },
    invokeClosure_closure0: {
      "^": "Closure:0;_captured_closure_1,_captured_arg1_2",
      call$0: function() {
        return this._captured_closure_1.call$1(this._captured_arg1_2);
      }
    },
    invokeClosure_closure1: {
      "^": "Closure:0;_captured_closure_3,_captured_arg1_4,_captured_arg2_5",
      call$0: function() {
        return this._captured_closure_3.call$2(this._captured_arg1_4, this._captured_arg2_5);
      }
    },
    invokeClosure_closure2: {
      "^": "Closure:0;_captured_closure_6,_captured_arg1_7,_captured_arg2_8,_captured_arg3_9",
      call$0: function() {
        return this._captured_closure_6.call$3(this._captured_arg1_7, this._captured_arg2_8, this._captured_arg3_9);
      }
    },
    invokeClosure_closure3: {
      "^": "Closure:0;_captured_closure_10,_captured_arg1_11,_captured_arg2_12,_captured_arg3_13,_captured_arg4_14",
      call$0: function() {
        return this._captured_closure_10.call$4(this._captured_arg1_11, this._captured_arg2_12, this._captured_arg3_13, this._captured_arg4_14);
      }
    },
    Closure: {
      "^": "Object;",
      toString$0: function(_) {
        return "Closure '" + H.Primitives_objectTypeName(this) + "'";
      },
      get$$call: function() {
        return this;
      },
      $isFunction: 1,
      get$$call: function() {
        return this;
      }
    },
    TearOffClosure: {
      "^": "Closure;"
    },
    StaticClosure: {
      "^": "TearOffClosure;",
      toString$0: function(_) {
        var $name = this.$static_name;
        if ($name == null)
          return "Closure of unknown static method";
        return "Closure '" + $name + "'";
      }
    },
    BoundClosure: {
      "^": "TearOffClosure;_self,_target,_receiver,_name",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof H.BoundClosure))
          return false;
        return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
      },
      get$hashCode: function(_) {
        var t1, receiverHashCode;
        t1 = this._receiver;
        if (t1 == null)
          receiverHashCode = H.Primitives_objectHashCode(this._self);
        else
          receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
        return J.$xor$n(receiverHashCode, H.Primitives_objectHashCode(this._target));
      },
      toString$0: function(_) {
        var receiver = this._receiver;
        if (receiver == null)
          receiver = this._self;
        return "Closure '" + H.S(this._name) + "' of " + H.Primitives_objectToHumanReadableString(receiver);
      },
      static: {BoundClosure_selfOf: function(closure) {
          return closure._self;
        }, BoundClosure_receiverOf: function(closure) {
          return closure._receiver;
        }, BoundClosure_selfFieldName: function() {
          var t1 = $.BoundClosure_selfFieldNameCache;
          if (t1 == null) {
            t1 = H.BoundClosure_computeFieldNamed("self");
            $.BoundClosure_selfFieldNameCache = t1;
          }
          return t1;
        }, BoundClosure_computeFieldNamed: function(fieldName) {
          var template, t1, names, i, $name;
          template = new H.BoundClosure("self", "target", "receiver", "name");
          t1 = Object.getOwnPropertyNames(template);
          t1.fixed$length = Array;
          names = t1;
          for (t1 = names.length, i = 0; i < t1; ++i) {
            $name = names[i];
            if (template[$name] === fieldName)
              return $name;
          }
        }}
    },
    CastErrorImplementation: {
      "^": "Error;message",
      toString$0: function(_) {
        return this.message;
      },
      static: {CastErrorImplementation$: function(actualType, expectedType) {
          return new H.CastErrorImplementation("CastError: Casting value of type " + H.S(actualType) + " to incompatible type " + H.S(expectedType));
        }}
    },
    RuntimeError: {
      "^": "Error;message",
      toString$0: function(_) {
        return "RuntimeError: " + H.S(this.message);
      }
    },
    RuntimeType: {
      "^": "Object;"
    },
    RuntimeFunctionType: {
      "^": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
      _isTest$1: function(expression) {
        var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
        return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
      },
      _extractFunctionTypeObjectFrom$1: function(o) {
        var interceptor = J.getInterceptor(o);
        return "$signature" in interceptor ? interceptor.$signature() : null;
      },
      toRti$0: function() {
        var result, t1, t2, namedRti, keys, i, $name;
        result = {func: "dynafunc"};
        t1 = this.returnType;
        t2 = J.getInterceptor(t1);
        if (!!t2.$isVoidRuntimeType)
          result.v = true;
        else if (!t2.$isDynamicRuntimeType)
          result.ret = t1.toRti$0();
        t1 = this.parameterTypes;
        if (t1 != null && t1.length !== 0)
          result.args = H.RuntimeFunctionType_listToRti(t1);
        t1 = this.optionalParameterTypes;
        if (t1 != null && t1.length !== 0)
          result.opt = H.RuntimeFunctionType_listToRti(t1);
        t1 = this.namedParameters;
        if (t1 != null) {
          namedRti = Object.create(null);
          keys = H.extractKeys(t1);
          for (t2 = keys.length, i = 0; i < t2; ++i) {
            $name = keys[i];
            namedRti[$name] = t1[$name].toRti$0();
          }
          result.named = namedRti;
        }
        return result;
      },
      toString$0: function(_) {
        var t1, t2, result, needsComma, i, type, keys, $name;
        t1 = this.parameterTypes;
        if (t1 != null)
          for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            type = t1[i];
            if (needsComma)
              result += ", ";
            result += H.S(type);
          }
        else {
          result = "(";
          needsComma = false;
        }
        t1 = this.optionalParameterTypes;
        if (t1 != null && t1.length !== 0) {
          result = (needsComma ? result + ", " : result) + "[";
          for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            type = t1[i];
            if (needsComma)
              result += ", ";
            result += H.S(type);
          }
          result += "]";
        } else {
          t1 = this.namedParameters;
          if (t1 != null) {
            result = (needsComma ? result + ", " : result) + "{";
            keys = H.extractKeys(t1);
            for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
              $name = keys[i];
              if (needsComma)
                result += ", ";
              result += H.S(t1[$name].toRti$0()) + " " + $name;
            }
            result += "}";
          }
        }
        return result + (") -> " + H.S(this.returnType));
      },
      static: {RuntimeFunctionType_listToRti: function(list) {
          var result, t1, i;
          list = list;
          result = [];
          for (t1 = list.length, i = 0; i < t1; ++i)
            result.push(list[i].toRti$0());
          return result;
        }}
    },
    DynamicRuntimeType: {
      "^": "RuntimeType;",
      toString$0: function(_) {
        return "dynamic";
      },
      toRti$0: function() {
        return;
      }
    },
    TypeImpl: {
      "^": "Object;_typeName,_unmangledName",
      toString$0: function(_) {
        var t1, unmangledName;
        t1 = this._unmangledName;
        if (t1 != null)
          return t1;
        unmangledName = this._typeName.replace(/[^<,> ]+/g, function(m) {
          return init.mangledGlobalNames[m] || m;
        });
        this._unmangledName = unmangledName;
        return unmangledName;
      },
      get$hashCode: function(_) {
        return J.get$hashCode$(this._typeName);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.TypeImpl && J.$eq$(this._typeName, other._typeName);
      }
    },
    JsLinkedHashMap: {
      "^": "Object;__js_helper$_length,_strings,_nums,_rest,_first,_last,_modifications",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return !this.get$isEmpty(this);
      },
      get$keys: function(_) {
        return H.setRuntimeTypeInfo(new H.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
      },
      get$values: function(_) {
        return H.MappedIterable_MappedIterable(this.get$keys(this), new H.JsLinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return false;
          return this._containsTableEntry$2(strings, key);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return false;
          return this._containsTableEntry$2(nums, key);
        } else
          return this.internalContainsKey$1(key);
      },
      internalContainsKey$1: function(key) {
        var rest = this._rest;
        if (rest == null)
          return false;
        return this.internalFindBucketIndex$2(this._getTableEntry$2(rest, this.internalComputeHashCode$1(key)), key) >= 0;
      },
      addAll$1: function(_, other) {
        J.forEach$1$ax(other, new H.JsLinkedHashMap_addAll_closure(this));
      },
      $index: function(_, key) {
        var strings, cell, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return;
          cell = this._getTableEntry$2(strings, key);
          return cell == null ? null : cell.get$hashMapCellValue();
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return;
          cell = this._getTableEntry$2(nums, key);
          return cell == null ? null : cell.get$hashMapCellValue();
        } else
          return this.internalGet$1(key);
      },
      internalGet$1: function(key) {
        var rest, bucket, index;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableEntry$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$hashMapCellValue();
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null) {
            strings = this._newHashTable$0();
            this._strings = strings;
          }
          this._addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null) {
            nums = this._newHashTable$0();
            this._nums = nums;
          }
          this._addHashTableEntry$3(nums, key, value);
        } else
          this.internalSet$2(key, value);
      },
      internalSet$2: function(key, value) {
        var rest, hash, bucket, index;
        rest = this._rest;
        if (rest == null) {
          rest = this._newHashTable$0();
          this._rest = rest;
        }
        hash = this.internalComputeHashCode$1(key);
        bucket = this._getTableEntry$2(rest, hash);
        if (bucket == null)
          this._setTableEntry$3(rest, hash, [this._newLinkedCell$2(key, value)]);
        else {
          index = this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$hashMapCellValue(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        var value;
        if (this.containsKey$1(0, key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (typeof key === "string")
          return this.__js_helper$_removeHashTableEntry$2(this._strings, key);
        else if (typeof key === "number" && (key & 0x3ffffff) === key)
          return this.__js_helper$_removeHashTableEntry$2(this._nums, key);
        else
          return this.internalRemove$1(key);
      },
      internalRemove$1: function(key) {
        var rest, bucket, index, cell;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableEntry$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$hashMapCellValue();
      },
      clear$0: function(_) {
        if (this.__js_helper$_length > 0) {
          this._last = null;
          this._first = null;
          this._rest = null;
          this._nums = null;
          this._strings = null;
          this.__js_helper$_length = 0;
          this._modifications = this._modifications + 1 & 67108863;
        }
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        cell = this._first;
        modifications = this._modifications;
        for (; cell != null;) {
          action.call$2(cell.get$hashMapCellKey(), cell.get$hashMapCellValue());
          if (modifications !== this._modifications)
            throw H.wrapException(new P.ConcurrentModificationError(this));
          cell = cell.get$_next();
        }
      },
      _addHashTableEntry$3: function(table, key, value) {
        var cell = this._getTableEntry$2(table, key);
        if (cell == null)
          this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
        else
          cell.set$hashMapCellValue(value);
      },
      __js_helper$_removeHashTableEntry$2: function(table, key) {
        var cell;
        if (table == null)
          return;
        cell = this._getTableEntry$2(table, key);
        if (cell == null)
          return;
        this._unlinkCell$1(cell);
        this._deleteTableEntry$2(table, key);
        return cell.get$hashMapCellValue();
      },
      _newLinkedCell$2: function(key, value) {
        var cell, last;
        cell = new H.LinkedHashMapCell(key, value, null, null);
        if (this._first == null) {
          this._last = cell;
          this._first = cell;
        } else {
          last = this._last;
          cell._previous = last;
          last.set$_next(cell);
          this._last = cell;
        }
        ++this.__js_helper$_length;
        this._modifications = this._modifications + 1 & 67108863;
        return cell;
      },
      _unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell.get$_previous();
        next = cell.get$_next();
        if (previous == null)
          this._first = next;
        else
          previous.set$_next(next);
        if (next == null)
          this._last = previous;
        else
          next.set$_previous(previous);
        --this.__js_helper$_length;
        this._modifications = this._modifications + 1 & 67108863;
      },
      internalComputeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i].get$hashMapCellKey(), key))
            return i;
        return -1;
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      _getTableEntry$2: function(table, key) {
        return table[key];
      },
      _setTableEntry$3: function(table, key, value) {
        table[key] = value;
      },
      _deleteTableEntry$2: function(table, key) {
        delete table[key];
      },
      _containsTableEntry$2: function(table, key) {
        return this._getTableEntry$2(table, key) != null;
      },
      _newHashTable$0: function() {
        var table = Object.create(null);
        this._setTableEntry$3(table, "<non-identifier-key>", table);
        this._deleteTableEntry$2(table, "<non-identifier-key>");
        return table;
      },
      $isInternalMap: 1,
      $isMap: 1,
      $asMap: null
    },
    JsLinkedHashMap_values_closure: {
      "^": "Closure:1;__js_helper$_captured_this_0",
      call$1: [function(each) {
        return this.__js_helper$_captured_this_0.$index(0, each);
      }, null, null, 2, 0, null, 38, "call"]
    },
    JsLinkedHashMap_addAll_closure: {
      "^": "Closure;__js_helper$_captured_this_0",
      call$2: [function(key, value) {
        this.__js_helper$_captured_this_0.$indexSet(0, key, value);
      }, null, null, 4, 0, null, 7, 5, "call"],
      $signature: function() {
        return H.computeSignature(function(K, V) {
          return {func: 1, args: [K, V]};
        }, this.__js_helper$_captured_this_0, "JsLinkedHashMap");
      }
    },
    LinkedHashMapCell: {
      "^": "Object;hashMapCellKey<,hashMapCellValue@,_next@,_previous@"
    },
    LinkedHashMapKeyIterable: {
      "^": "Iterable;__js_helper$_map",
      get$length: function(_) {
        return this.__js_helper$_map.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_map.__js_helper$_length === 0;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this.__js_helper$_map;
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
        t2.$builtinTypeInfo = this.$builtinTypeInfo;
        t2._cell = t1._first;
        return t2;
      },
      contains$1: function(_, element) {
        return this.__js_helper$_map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, cell, modifications;
        t1 = this.__js_helper$_map;
        cell = t1._first;
        modifications = t1._modifications;
        for (; cell != null;) {
          f.call$1(cell.get$hashMapCellKey());
          if (modifications !== t1._modifications)
            throw H.wrapException(new P.ConcurrentModificationError(t1));
          cell = cell.get$_next();
        }
      },
      $isEfficientLength: 1
    },
    LinkedHashMapKeyIterator: {
      "^": "Object;__js_helper$_map,_modifications,_cell,__js_helper$_current",
      get$current: function() {
        return this.__js_helper$_current;
      },
      moveNext$0: function() {
        var t1 = this.__js_helper$_map;
        if (this._modifications !== t1._modifications)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else {
          t1 = this._cell;
          if (t1 == null) {
            this.__js_helper$_current = null;
            return false;
          } else {
            this.__js_helper$_current = t1.get$hashMapCellKey();
            this._cell = this._cell.get$_next();
            return true;
          }
        }
      }
    },
    initHooks_closure: {
      "^": "Closure:1;_captured_getTag_0",
      call$1: function(o) {
        return this._captured_getTag_0(o);
      }
    },
    initHooks_closure0: {
      "^": "Closure:19;_captured_getUnknownTag_1",
      call$2: function(o, tag) {
        return this._captured_getUnknownTag_1(o, tag);
      }
    },
    initHooks_closure1: {
      "^": "Closure:24;_captured_prototypeForTag_2",
      call$1: function(tag) {
        return this._captured_prototypeForTag_2(tag);
      }
    },
    JSSyntaxRegExp: {
      "^": "Object;pattern,_nativeRegExp,_nativeGlobalRegExp,_nativeAnchoredRegExp",
      toString$0: function(_) {
        return "RegExp/" + this.pattern + "/";
      },
      get$_nativeGlobalVersion: function() {
        var t1 = this._nativeGlobalRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern, t1.multiline, !t1.ignoreCase, true);
        this._nativeGlobalRegExp = t1;
        return t1;
      },
      get$_nativeAnchoredVersion: function() {
        var t1 = this._nativeAnchoredRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern + "|()", t1.multiline, !t1.ignoreCase, true);
        this._nativeAnchoredRegExp = t1;
        return t1;
      },
      firstMatch$1: function(string) {
        var m = this._nativeRegExp.exec(H.checkString(string));
        if (m == null)
          return;
        return new H._MatchImplementation(this, m);
      },
      _execAnchored$2: function(string, start) {
        var regexp, match, t1, t2;
        regexp = this.get$_nativeAnchoredVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        t1 = match.length;
        t2 = t1 - 1;
        if (t2 < 0)
          return H.ioore(match, t2);
        if (match[t2] != null)
          return;
        C.JSArray_methods.set$length(match, t2);
        return new H._MatchImplementation(this, match);
      },
      matchAsPrefix$2: function(_, string, start) {
        if (start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return this._execAnchored$2(string, start);
      },
      $isRegExp: 1,
      static: {JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, global) {
          var m, i, g, regexp;
          H.checkString(source);
          m = multiLine ? "m" : "";
          i = caseSensitive ? "" : "i";
          g = global ? "g" : "";
          regexp = function() {
            try {
              return new RegExp(source, m + i + g);
            } catch (e) {
              return e;
            }
          }();
          if (regexp instanceof RegExp)
            return regexp;
          throw H.wrapException(new P.FormatException("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
        }}
    },
    _MatchImplementation: {
      "^": "Object;pattern,_match",
      $index: function(_, index) {
        var t1 = this._match;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $isMatch: 1
    },
    StringMatch: {
      "^": "Object;start,input,pattern",
      $index: function(_, g) {
        if (!J.$eq$(g, 0))
          H.throwExpression(P.RangeError$value(g, null, null));
        return this.pattern;
      },
      $isMatch: 1
    },
    _StringAllMatchesIterable: {
      "^": "Iterable;_input,_pattern,__js_helper$_index",
      get$iterator: function(_) {
        return new H._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index, null);
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _StringAllMatchesIterator: {
      "^": "Object;_input,_pattern,__js_helper$_index,__js_helper$_current",
      moveNext$0: function() {
        var t1, t2, t3, t4, t5, index, end;
        t1 = this.__js_helper$_index;
        t2 = this._pattern;
        t3 = t2.length;
        t4 = this._input;
        t5 = t4.length;
        if (t1 + t3 > t5) {
          this.__js_helper$_current = null;
          return false;
        }
        index = t4.indexOf(t2, t1);
        if (index < 0) {
          this.__js_helper$_index = t5 + 1;
          this.__js_helper$_current = null;
          return false;
        }
        end = index + t3;
        this.__js_helper$_current = new H.StringMatch(index, t4, t2);
        this.__js_helper$_index = end === this.__js_helper$_index ? end + 1 : end;
        return true;
      },
      get$current: function() {
        return this.__js_helper$_current;
      }
    }
  }], ["chrome.browserAction", "package:chrome/gen/browser_action.dart",, L, {
    "^": "",
    _createTab: [function(jsProxy) {
      return jsProxy == null ? null : new G.Tab(jsProxy);
    }, "call$1", "browserAction___createTab$closure", 2, 0, 55],
    ChromeBrowserAction: {
      "^": "ChromeApi;_onClicked",
      _throwNotAvailable$0: function() {
        throw H.wrapException(new P.UnsupportedError("'chrome.browserAction' is not available"));
      },
      ChromeBrowserAction$_$0: function() {
        this._onClicked = F.ChromeStreamController$oneArg(new L.ChromeBrowserAction$__closure(this), "onClicked", L.browserAction___createTab$closure(), null, G.Tab);
      },
      static: {ChromeBrowserAction$_: function() {
          var t1 = new L.ChromeBrowserAction(null);
          t1.ChromeBrowserAction$_$0();
          return t1;
        }}
    },
    ChromeBrowserAction$__closure: {
      "^": "Closure:0;_browserAction$_captured_this_0",
      call$0: function() {
        return J.$index$asx($.$get$chrome(), "browserAction");
      }
    },
    BrowserActionSetBadgeTextParams: {
      "^": "ChromeObject;jsProxy"
    }
  }], ["chrome.src.common", "package:chrome/src/common.dart",, F, {
    "^": "",
    jsify: [function(obj) {
      var t1, m, t2, key;
      if (obj == null || typeof obj === "number" || typeof obj === "string")
        return obj;
      else {
        t1 = J.getInterceptor(obj);
        if (!!t1.$isChromeObject)
          return obj.jsProxy;
        else if (!!t1.$isMap) {
          m = P.LinkedHashMap__makeEmpty();
          for (t2 = J.get$iterator$ax(t1.get$keys(obj)); t2.moveNext$0() === true;) {
            key = t2.get$current();
            m.$indexSet(0, key, F.jsify(t1.$index(obj, key)));
          }
          return P._wrapToDart(P.JsObject__convertDataTree(m));
        } else if (!!t1.$isIterable) {
          t2 = [];
          C.JSArray_methods.addAll$1(t2, t1.map$1(obj, F.common__jsify$closure()).map$1(0, P.js___convertToJS$closure()));
          return H.setRuntimeTypeInfo(new P.JsArray(t2), [null]);
        } else
          return obj;
      }
    }, "call$1", "common__jsify$closure", 2, 0, 1, 46],
    ChromeStreamController: {
      "^": "Object;_apiProvider,_eventName,_controller,_handlerAdded,_listener",
      get$stream: function(_) {
        var t1 = this._controller;
        return H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
      },
      _ensureHandlerAdded$0: [function() {
        var jsEvent, $event;
        if (!this._handlerAdded) {
          jsEvent = J.$index$asx(this._apiProvider$0(), this._eventName);
          $event = jsEvent instanceof P.JsObject ? jsEvent : P.JsObject_JsObject$fromBrowserObject(jsEvent);
          $event.callMethod$2("addListener", [this._listener]);
          this._handlerAdded = true;
        }
      }, "call$0", "get$_ensureHandlerAdded", 0, 0, 2],
      _removeHandler$0: [function() {
        var jsEvent, $event;
        if (this._handlerAdded) {
          jsEvent = J.$index$asx(this._apiProvider$0(), this._eventName);
          $event = jsEvent instanceof P.JsObject ? jsEvent : P.JsObject_JsObject$fromBrowserObject(jsEvent);
          $event.callMethod$2("removeListener", [this._listener]);
          this._handlerAdded = false;
        }
      }, "call$0", "get$_removeHandler", 0, 0, 2],
      ChromeStreamController$oneArg$4: function(_apiProvider, _eventName, transformer, returnVal, $T) {
        var t1 = this.get$_ensureHandlerAdded();
        this._controller = P.StreamController_StreamController$broadcast(this.get$_removeHandler(), t1, false, $T);
        this._listener = new F.ChromeStreamController$oneArg_closure(this, transformer, returnVal);
      },
      _apiProvider$0: function() {
        return this._apiProvider.call$0();
      },
      static: {ChromeStreamController$oneArg: function(_apiProvider, _eventName, transformer, returnVal, $T) {
          var t1 = H.setRuntimeTypeInfo(new F.ChromeStreamController(_apiProvider, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), false, null), [$T]);
          t1.ChromeStreamController$oneArg$4(_apiProvider, _eventName, transformer, returnVal, $T);
          return t1;
        }}
    },
    ChromeStreamController$oneArg_closure: {
      "^": "Closure:8;_common$_captured_this_0,_captured_transformer_1,_captured_returnVal_2",
      call$1: [function(arg1) {
        var t1, t2;
        t1 = this._common$_captured_this_0._controller;
        t2 = this._captured_transformer_1.call$1(arg1);
        if (!t1.get$_mayAddEvent())
          H.throwExpression(t1._addEventError$0());
        t1._sendData$1(t2);
        return this._captured_returnVal_2;
      }, function() {
        return this.call$1(null);
      }, "call$0", null, null, null, 0, 2, null, 0, 19, "call"]
    }
  }], ["chrome.src.common_exp", "package:chrome/src/common_exp.dart",, Z, {
    "^": "",
    ChromeObject: {
      "^": "Object;",
      toString$0: function(_) {
        return J.toString$0$(this.jsProxy);
      }
    },
    ChromeApi: {
      "^": "Object;"
    }
  }], ["chrome.tabs", "package:chrome/gen/tabs.dart",, G, {
    "^": "",
    Tab: {
      "^": "ChromeObject;jsProxy",
      get$id: function(_) {
        return J.$index$asx(this.jsProxy, "id");
      },
      get$title: function(_) {
        return J.$index$asx(this.jsProxy, "title");
      }
    }
  }], ["dart._internal", "dart:_internal",, H, {
    "^": "",
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort__doSort: function(a, left, right, compare) {
      if (right - left <= 32)
        H.Sort__insertionSort(a, left, right, compare);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare);
    },
    Sort__insertionSort: function(a, left, right, compare) {
      var i, t1, el, j, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (!(j > left && J.$gt$n(compare.call$2(t1.$index(a, j - 1), el), 0) === true))
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare) {
      var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, great0, less0, pivots_are_equal;
      sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6);
      index1 = left + sixth;
      index5 = right - sixth;
      index3 = C.JSInt_methods._tdivFast$1(left + right, 2);
      index2 = index3 - sixth;
      index4 = index3 + sixth;
      t1 = J.getInterceptor$asx(a);
      el1 = t1.$index(a, index1);
      el2 = t1.$index(a, index2);
      el3 = t1.$index(a, index3);
      el4 = t1.$index(a, index4);
      el5 = t1.$index(a, index5);
      if (J.$gt$n(compare.call$2(el1, el2), 0) === true) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0) === true) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el3), 0) === true) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0) === true) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el4), 0) === true) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el3, el4), 0) === true) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el5), 0) === true) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0) === true) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0) === true) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          t2 = J.getInterceptor(comp);
          if (t2.$eq(comp, 0))
            continue;
          if (t2.$lt(comp, 0) === true) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              t2 = J.getInterceptor$n(comp);
              if (t2.$gt(comp, 0) === true) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (t2.$lt(comp, 0) === true) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (J.$lt$n(compare.call$2(ak, el2), 0) === true) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (J.$gt$n(compare.call$2(ak, el4), 0) === true)
            for (; true;)
              if (J.$gt$n(compare.call$2(t1.$index(a, great), el4), 0) === true) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0) === true) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      H.Sort__doSort(a, left, less - 2, compare);
      H.Sort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (J.$eq$(compare.call$2(ak, el2), 0)) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (J.$eq$(compare.call$2(ak, el4), 0))
            for (; true;)
              if (J.$eq$(compare.call$2(t1.$index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0) === true) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare);
      } else
        H.Sort__doSort(a, less, great, compare);
    },
    ListIterable: {
      "^": "Iterable;",
      get$iterator: function(_) {
        return H.setRuntimeTypeInfo(new H.ListIterator(this, this.get$length(this), 0, null), [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      },
      forEach$1: function(_, action) {
        var $length, i;
        $length = this.get$length(this);
        for (i = 0; i < $length; ++i) {
          action.call$1(this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$last: function(_) {
        if (this.get$length(this) === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        return this.elementAt$1(0, this.get$length(this) - 1);
      },
      contains$1: function(_, element) {
        var $length, i;
        $length = this.get$length(this);
        for (i = 0; i < $length; ++i) {
          if (J.$eq$(this.elementAt$1(0, i), element))
            return true;
          if ($length !== this.get$length(this))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
        return false;
      },
      where$1: function(_, test) {
        return this.super$Iterable$where(this, test);
      },
      map$1: function(_, f) {
        return H.setRuntimeTypeInfo(new H.MappedListIterable(this, f), [null, null]);
      },
      toList$1$growable: function(_, growable) {
        var result, t1, i;
        if (growable) {
          result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
          C.JSArray_methods.set$length(result, this.get$length(this));
        } else {
          t1 = new Array(this.get$length(this));
          t1.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
        }
        for (i = 0; i < this.get$length(this); ++i) {
          t1 = this.elementAt$1(0, i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      $isEfficientLength: 1
    },
    SubListIterable: {
      "^": "ListIterable;__internal$_iterable,_start,_endOrLength",
      get$_endIndex: function() {
        var $length, t1, t2;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this._endOrLength;
        if (t1 != null) {
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > $length;
        } else
          t2 = true;
        if (t2)
          return $length;
        return t1;
      },
      get$_startIndex: function() {
        var $length, t1;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this._start;
        if (t1 > $length)
          return $length;
        return t1;
      },
      get$length: function(_) {
        var $length, t1, t2, t3;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this._start;
        if (t1 >= $length)
          return 0;
        t2 = this._endOrLength;
        if (t2 != null) {
          if (typeof t2 !== "number")
            return t2.$ge();
          t3 = t2 >= $length;
        } else
          t3 = true;
        if (t3)
          return $length - t1;
        if (typeof t2 !== "number")
          return t2.$sub();
        return t2 - t1;
      },
      elementAt$1: function(_, index) {
        var realIndex, t1;
        realIndex = this.get$_startIndex() + index;
        if (index >= 0) {
          t1 = this.get$_endIndex();
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = realIndex >= t1;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.IndexError$(index, this, "index", null, null));
        return J.elementAt$1$ax(this.__internal$_iterable, realIndex);
      },
      take$1: function(_, count) {
        var t1, t2, newEnd;
        if (count < 0)
          H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
        t1 = this._endOrLength;
        t2 = this._start;
        if (t1 == null)
          return H.SubListIterable$(this.__internal$_iterable, t2, t2 + count, H.getTypeArgumentByIndex(this, 0));
        else {
          newEnd = t2 + count;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (t1 < newEnd)
            return this;
          return H.SubListIterable$(this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        }
      },
      toList$1$growable: function(_, growable) {
        var start, t1, t2, end, end0, t3, $length, result, i;
        start = this._start;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        end = t2.get$length(t1);
        end0 = this._endOrLength;
        if (end0 != null) {
          if (typeof end0 !== "number")
            return end0.$lt();
          t3 = end0 < end;
        } else
          t3 = false;
        if (t3)
          end = end0;
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        if ($length < 0)
          $length = 0;
        if (growable) {
          result = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
          C.JSArray_methods.set$length(result, $length);
        } else {
          t3 = new Array($length);
          t3.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t3, [H.getTypeArgumentByIndex(this, 0)]);
        }
        for (i = 0; i < $length; ++i) {
          t3 = t2.elementAt$1(t1, start + i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t3;
          if (t2.get$length(t1) < end)
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {
        var t1, t2;
        t1 = this._start;
        if (t1 < 0)
          H.throwExpression(P.RangeError$range(t1, 0, null, "start", null));
        t2 = this._endOrLength;
        if (t2 != null) {
          if (typeof t2 !== "number")
            return t2.$lt();
          if (t2 < 0)
            H.throwExpression(P.RangeError$range(t2, 0, null, "end", null));
          if (t1 > t2)
            throw H.wrapException(P.RangeError$range(t1, 0, t2, "start", null));
        }
      },
      static: {SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
          var t1 = H.setRuntimeTypeInfo(new H.SubListIterable(_iterable, _start, _endOrLength), [$E]);
          t1.SubListIterable$3(_iterable, _start, _endOrLength, $E);
          return t1;
        }}
    },
    ListIterator: {
      "^": "Object;__internal$_iterable,__internal$_length,__internal$_index,_current",
      get$current: function() {
        return this._current;
      },
      moveNext$0: function() {
        var t1, t2, $length, t3;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        $length = t2.get$length(t1);
        if (this.__internal$_length !== $length)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        t3 = this.__internal$_index;
        if (t3 >= $length) {
          this._current = null;
          return false;
        }
        this._current = t2.elementAt$1(t1, t3);
        ++this.__internal$_index;
        return true;
      }
    },
    MappedIterable: {
      "^": "Iterable;__internal$_iterable,_f",
      get$iterator: function(_) {
        var t1 = new H.MappedIterator(null, J.get$iterator$ax(this.__internal$_iterable), this._f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$length: function(_) {
        return J.get$length$asx(this.__internal$_iterable);
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this.__internal$_iterable);
      },
      get$last: function(_) {
        return this._f$1(J.get$last$ax(this.__internal$_iterable));
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
          if (!!J.getInterceptor(iterable).$isEfficientLength)
            return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
          return H.setRuntimeTypeInfo(new H.MappedIterable(iterable, $function), [$S, $T]);
        }}
    },
    EfficientLengthMappedIterable: {
      "^": "MappedIterable;__internal$_iterable,_f",
      $isEfficientLength: 1
    },
    MappedIterator: {
      "^": "Iterator;_current,_iterator,_f",
      moveNext$0: function() {
        var t1 = this._iterator;
        if (t1.moveNext$0() === true) {
          this._current = this._f$1(t1.get$current());
          return true;
        }
        this._current = null;
        return false;
      },
      get$current: function() {
        return this._current;
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asIterator: function($S, $T) {
        return [$T];
      }
    },
    MappedListIterable: {
      "^": "ListIterable;_source,_f",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        return this._f$1(J.elementAt$1$ax(this._source, index));
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asListIterable: function($S, $T) {
        return [$T];
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      $isEfficientLength: 1
    },
    WhereIterable: {
      "^": "Iterable;__internal$_iterable,_f",
      get$iterator: function(_) {
        var t1 = new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      }
    },
    WhereIterator: {
      "^": "Iterator;_iterator,_f",
      moveNext$0: function() {
        for (var t1 = this._iterator; t1.moveNext$0() === true;)
          if (this._f$1(t1.get$current()) === true)
            return true;
        return false;
      },
      get$current: function() {
        return this._iterator.get$current();
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      }
    },
    FixedLengthListMixin: {
      "^": "Object;",
      set$length: function(receiver, newLength) {
        throw H.wrapException(new P.UnsupportedError("Cannot change the length of a fixed-length list"));
      },
      add$1: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to a fixed-length list"));
      },
      remove$1: function(receiver, element) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from a fixed-length list"));
      }
    },
    ReversedListIterable: {
      "^": "ListIterable;_source",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        var t1, t2;
        t1 = this._source;
        t2 = J.getInterceptor$asx(t1);
        return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
      }
    },
    Symbol: {
      "^": "Object;__internal$_name<",
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.Symbol && J.$eq$(this.__internal$_name, other.__internal$_name);
      },
      get$hashCode: function(_) {
        var t1 = J.get$hashCode$(this.__internal$_name);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return 536870911 & 664597 * t1;
      },
      toString$0: function(_) {
        return "Symbol(\"" + H.S(this.__internal$_name) + "\")";
      },
      $isSymbol0: 1
    }
  }], ["dart._js_names", "dart:_js_names",, H, {
    "^": "",
    extractKeys: function(victim) {
      var t1 = H.setRuntimeTypeInfo(victim ? Object.keys(victim) : [], [null]);
      t1.fixed$length = Array;
      return t1;
    },
    _LazyMangledNamesMap: {
      "^": "Object;",
      $index: ["super$_LazyMangledNamesMap$$index", function(_, key) {
        var result = this._jsMangledNames[key];
        return typeof result !== "string" ? null : result;
      }]
    },
    _LazyMangledInstanceNamesMap: {
      "^": "_LazyMangledNamesMap;_jsMangledNames",
      $index: function(_, key) {
        var result = this.super$_LazyMangledNamesMap$$index(this, key);
        if (result == null && J.startsWith$1$s(key, "set$") === true) {
          result = this.super$_LazyMangledNamesMap$$index(this, "get$" + H.S(J.substring$1$s(key, "set$".length)));
          return result != null ? result + "=" : null;
        }
        return result;
      }
    }
  }], ["dart.async", "dart:async",, P, {
    "^": "",
    _AsyncRun__initializeScheduleImmediate: function() {
      var t1, div, span;
      t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1._captured_storedCallback_0 = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: [function(callback) {
      ++init.globalState.topEventLoop._activeJsAsyncCount;
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateJsOverride$closure", 2, 0, 7],
    _AsyncRun__scheduleImmediateWithSetImmediate: [function(callback) {
      ++init.globalState.topEventLoop._activeJsAsyncCount;
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", 2, 0, 7],
    _AsyncRun__scheduleImmediateWithTimer: [function(callback) {
      P.Timer__createTimer(C.Duration_0, callback);
    }, "call$1", "async__AsyncRun__scheduleImmediateWithTimer$closure", 2, 0, 7],
    _asyncHelper: function(object, bodyFunctionOrErrorCode, completer) {
      if (bodyFunctionOrErrorCode === 0) {
        J.complete$1$x(completer, object);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        return;
      }
      P._awaitOnObject(object, bodyFunctionOrErrorCode);
      return completer.get$future();
    },
    _awaitOnObject: function(object, bodyFunction) {
      var thenCallback, errorCallback, t1, future;
      thenCallback = new P._awaitOnObject_closure(bodyFunction);
      errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      t1 = J.getInterceptor(object);
      if (!!t1.$is_Future)
        object._thenNoZoneRegistration$2(thenCallback, errorCallback);
      else if (!!t1.$isFuture)
        object.then$2$onError(thenCallback, errorCallback);
      else {
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        future._state = 4;
        future._resultOrListeners = object;
        future._thenNoZoneRegistration$2(thenCallback, null);
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(errorCode, result) {
        while (true)
          try {
            $function(errorCode, result);
            break;
          } catch (error) {
            result = error;
            errorCode = 1;
          }
      };
      return $.Zone__current.registerBinaryCallback$1(new P._wrapJsFunctionForAsync_closure($protected));
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1;
      if (bodyFunctionOrErrorCode === 0) {
        if (controller.get$isCanceled() === true)
          J.complete$0$x(controller.get$cancelationCompleter());
        else
          J.close$0$x(controller);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        if (controller.get$isCanceled() === true)
          controller.get$cancelationCompleter().completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          controller.addError$2(H.unwrapException(object), H.getTraceFromException(object));
          J.close$0$x(controller);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.get$isCanceled() === true) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          J.add$1$ax(controller, object.value);
          P.scheduleMicrotask(new P._asyncStarHelper_closure(bodyFunctionOrErrorCode, controller));
          return;
        } else if (t1 === 1) {
          J.addStream$1$x(controller, object.value).then$1(new P._asyncStarHelper_closure0(bodyFunctionOrErrorCode, controller));
          return;
        }
      }
      P._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController: function(controller) {
      return J.get$stream$x(controller);
    },
    _registerErrorHandler: function(errorHandler, zone) {
      var t1 = H.getDynamicRuntimeType();
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
      if (t1)
        return zone.registerBinaryCallback$1(errorHandler);
      else
        return zone.registerUnaryCallback$1(errorHandler);
    },
    Future_Future$microtask: function(computation, $T) {
      var result = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [$T]);
      P.scheduleMicrotask(new P.Future_Future$microtask_closure(computation, result));
      return result;
    },
    Future_Future$value: function(value, $T) {
      var t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [$T]);
      t1._asyncComplete$1(value);
      return t1;
    },
    Future_Future$error: function(error, stackTrace, $T) {
      var t1, replacement;
      error = error != null ? error : new P.NullThrownError();
      t1 = $.Zone__current;
      if (t1 !== C.C__RootZone) {
        replacement = t1.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
      }
      t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [$T]);
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_wait: function(futures, cleanUp, eagerError) {
      var t1, result, t2, t3, values;
      t1 = {};
      result = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.List]);
      t1._captured_values_0 = null;
      t1._captured_remaining_1 = 0;
      t1._captured_error_2 = null;
      t1._captured_stackTrace_3 = null;
      t2 = new P.Future_wait_handleError(t1, false, cleanUp, result);
      for (t3 = H.setRuntimeTypeInfo(new H.ListIterator(futures, futures.get$length(futures), 0, null), [H.getRuntimeTypeArgument(futures, "ListIterable", 0)]); t3.moveNext$0();)
        t3._current.then$2$onError(new P.Future_wait_closure(t1, false, cleanUp, result, t1._captured_remaining_1++), t2);
      t2 = t1._captured_remaining_1;
      if (t2 === 0) {
        t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        t1._asyncComplete$1(C.List_empty);
        return t1;
      }
      values = new Array(t2);
      values.fixed$length = Array;
      t1._captured_values_0 = values;
      return result;
    },
    Completer_Completer$sync: function($T) {
      return H.setRuntimeTypeInfo(new P._SyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [$T])), [$T]);
    },
    _completeWithErrorCallback: function(result, error, stackTrace) {
      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = J.get$error$x(replacement);
        error = error != null ? error : new P.NullThrownError();
        stackTrace = replacement.get$stackTrace();
      }
      result._completeError$2(error, stackTrace);
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = J.get$next$x(t1);
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        $.Zone__current = t1.get$zone();
        t1.callback$0();
      }
    },
    _microtaskLoopEntry: [function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $.Zone__current = C.C__RootZone;
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun_scheduleImmediateClosure().call$1(P.async___microtaskLoopEntry$closure());
      }
    }, "call$0", "async___microtaskLoopEntry$closure", 0, 0, 2],
    _scheduleAsyncCallback: function(newEntry) {
      if ($._nextCallback == null) {
        $._lastCallback = newEntry;
        $._nextCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun_scheduleImmediateClosure().call$1(P.async___microtaskLoopEntry$closure());
      } else {
        $._lastCallback.next = newEntry;
        $._lastCallback = newEntry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, t1;
      currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(null, null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().get$zone())
        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        P._rootScheduleMicrotask(null, null, currentZone, currentZone.registerCallback$1(callback));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallback$2$runGuarded(callback, true));
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      var t1, t2, t3;
      t1 = H.setRuntimeTypeInfo(new P._StreamIteratorImpl(null, null, null, 0), [$T]);
      t2 = t1.get$_async$_onData();
      t3 = t1.get$_onError();
      t1._subscription = stream.listen$4$cancelOnError$onDone$onError(t2, true, t1.get$_onDone(), t3);
      return t1;
    },
    StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
      return sync ? H.setRuntimeTypeInfo(new P._SyncStreamController(null, 0, null, onListen, onPause, onResume, onCancel), [$T]) : H.setRuntimeTypeInfo(new P._AsyncStreamController(null, 0, null, onListen, onPause, onResume, onCancel), [$T]);
    },
    StreamController_StreamController$broadcast: function(onCancel, onListen, sync, $T) {
      var t1 = H.setRuntimeTypeInfo(new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
      return t1;
    },
    _runGuarded: function(notificationHandler) {
      var result, e, s, exception, t1;
      if (notificationHandler == null)
        return;
      try {
        result = notificationHandler.call$0();
        if (!!J.getInterceptor(result).$isFuture)
          return result;
        return;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = H.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _nullDataHandler: [function(value) {
    }, "call$1", "async___nullDataHandler$closure", 2, 0, 57, 5],
    _nullErrorHandler: [function(error, stackTrace) {
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    }, function(error) {
      return P._nullErrorHandler(error, null);
    }, "call$2", "call$1", "async___nullErrorHandler$closure", 2, 2, 15, 0, 3, 4],
    _nullDoneHandler: [function() {
    }, "call$0", "async___nullDoneHandler$closure", 0, 0, 2],
    _runUserCode: function(userCode, onSuccess, onError) {
      var e, s, replacement, error, stackTrace, exception, t1, error0;
      try {
        onSuccess.call$1(userCode.call$0());
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = H.getTraceFromException(exception);
        replacement = $.Zone__current.errorCallback$2(e, s);
        if (replacement == null)
          onError.call$2(e, s);
        else {
          error0 = J.get$error$x(replacement);
          error = error0 != null ? error0 : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
          onError.call$2(error, stackTrace);
        }
      }
    },
    _cancelAndError: function(subscription, future, error, stackTrace) {
      var cancelFuture = subscription.cancel$0(0);
      if (!!J.getInterceptor(cancelFuture).$isFuture)
        cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
      else
        future._completeError$2(error, stackTrace);
    },
    _cancelAndErrorClosure: function(subscription, future) {
      return new P._cancelAndErrorClosure_closure(subscription, future);
    },
    _cancelAndValue: function(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(0);
      if (!!J.getInterceptor(cancelFuture).$isFuture)
        cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    _addErrorWithReplacement: function(sink, error, stackTrace) {
      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = J.get$error$x(replacement);
        error = error != null ? error : new P.NullThrownError();
        stackTrace = replacement.get$stackTrace();
      }
      sink._addError$2(error, stackTrace);
    },
    Timer_Timer: function(duration, callback) {
      var t1;
      if (J.$eq$($.Zone__current, C.C__RootZone))
        return $.Zone__current.createTimer$2(duration, callback);
      t1 = $.Zone__current;
      return t1.createTimer$2(duration, t1.bindCallback$2$runGuarded(callback, true));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = C.JSNumber_methods._tdivFast$1(duration._duration, 1000);
      return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1, entry, t2;
      t1 = {};
      t1._captured_error_0 = error;
      entry = new P._AsyncCallbackEntry(new P._rootHandleUncaughtError_closure(t1, stackTrace), C.C__RootZone, null);
      t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(entry);
        $._lastPriorityCallback = $._lastCallback;
      } else {
        t2 = $._lastPriorityCallback;
        if (t2 == null) {
          entry.next = t1;
          $._lastPriorityCallback = entry;
          $._nextCallback = entry;
        } else {
          entry.next = t2.next;
          t2.next = entry;
          $._lastPriorityCallback = entry;
          if (entry.next == null)
            $._lastCallback = entry;
        }
      }
    },
    _rootRun: function($self, $parent, zone, f) {
      var old, previous, t1;
      if (J.$eq$($.Zone__current, zone))
        return f.call$0();
      previous = $.Zone__current;
      $.Zone__current = zone;
      old = previous;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg) {
      var old, previous, t1;
      if (J.$eq$($.Zone__current, zone))
        return f.call$1(arg);
      previous = $.Zone__current;
      $.Zone__current = zone;
      old = previous;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {
      var old, previous, t1;
      if (J.$eq$($.Zone__current, zone))
        return f.call$2(arg1, arg2);
      previous = $.Zone__current;
      $.Zone__current = zone;
      old = previous;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask: [function($self, $parent, zone, f) {
      var t1 = C.C__RootZone !== zone;
      if (t1) {
        f = zone.bindCallback$2$runGuarded(f, !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()));
        zone = C.C__RootZone;
      }
      P._scheduleAsyncCallback(new P._AsyncCallbackEntry(f, zone, null));
    }, "call$4", "async___rootScheduleMicrotask$closure", 8, 0, 58],
    _AsyncRun__initializeScheduleImmediate_internalCallback: {
      "^": "Closure:1;_async$_box_0",
      call$1: [function(_) {
        var t1, f;
        --init.globalState.topEventLoop._activeJsAsyncCount;
        t1 = this._async$_box_0;
        f = t1._captured_storedCallback_0;
        t1._captured_storedCallback_0 = null;
        f.call$0();
      }, null, null, 2, 0, null, 2, "call"]
    },
    _AsyncRun__initializeScheduleImmediate_closure: {
      "^": "Closure:29;_async$_box_0,_captured_div_1,_captured_span_2",
      call$1: function(callback) {
        var t1, t2;
        ++init.globalState.topEventLoop._activeJsAsyncCount;
        this._async$_box_0._captured_storedCallback_0 = callback;
        t1 = this._captured_div_1;
        t2 = this._captured_span_2;
        t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
      }
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: {
      "^": "Closure:0;_captured_callback_0",
      call$0: [function() {
        --init.globalState.topEventLoop._activeJsAsyncCount;
        this._captured_callback_0.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: {
      "^": "Closure:0;_captured_callback_0",
      call$0: [function() {
        --init.globalState.topEventLoop._activeJsAsyncCount;
        this._captured_callback_0.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _awaitOnObject_closure: {
      "^": "Closure:1;_captured_bodyFunction_0",
      call$1: [function(result) {
        return this._captured_bodyFunction_0.call$2(0, result);
      }, null, null, 2, 0, null, 9, "call"]
    },
    _awaitOnObject_closure0: {
      "^": "Closure:9;_captured_bodyFunction_1",
      call$2: [function(error, stackTrace) {
        this._captured_bodyFunction_1.call$2(1, new H.ExceptionAndStackTrace(error, stackTrace));
      }, null, null, 4, 0, null, 3, 4, "call"]
    },
    _wrapJsFunctionForAsync_closure: {
      "^": "Closure:27;_captured_protected_0",
      call$2: [function(errorCode, result) {
        this._captured_protected_0(errorCode, result);
      }, null, null, 4, 0, null, 36, 9, "call"]
    },
    _asyncStarHelper_closure: {
      "^": "Closure:0;_captured_bodyFunctionOrErrorCode_0,_captured_controller_1",
      call$0: [function() {
        var t1 = this._captured_controller_1;
        if (t1.get$isPaused() === true) {
          t1.set$isSuspended(true);
          return;
        }
        this._captured_bodyFunctionOrErrorCode_0.call$2(null, 0);
      }, null, null, 0, 0, null, "call"]
    },
    _asyncStarHelper_closure0: {
      "^": "Closure:1;_captured_bodyFunctionOrErrorCode_2,_captured_controller_3",
      call$1: [function(_) {
        var errorCode = this._captured_controller_3.get$isCanceled() === true ? 2 : 0;
        this._captured_bodyFunctionOrErrorCode_2.call$2(errorCode, null);
      }, null, null, 2, 0, null, 2, "call"]
    },
    _AsyncStarStreamController: {
      "^": "Object;controller,isSuspended?,cancelationCompleter<",
      get$stream: function(_) {
        return J.get$stream$x(this.controller);
      },
      get$isPaused: function() {
        return this.controller.get$isPaused();
      },
      get$isCanceled: function() {
        return this.cancelationCompleter != null;
      },
      add$1: function(_, $event) {
        return J.add$1$ax(this.controller, $event);
      },
      addStream$1: function(_, stream) {
        return J.addStream$2$cancelOnError$x(this.controller, stream, false);
      },
      addError$2: function(error, stackTrace) {
        return this.controller.addError$2(error, stackTrace);
      },
      close$0: function(_) {
        return J.close$0$x(this.controller);
      },
      _AsyncStarStreamController$1: function(body) {
        var t1 = new P._AsyncStarStreamController__resumeBody(body);
        this.controller = P.StreamController_StreamController(new P._AsyncStarStreamController_closure(this, body), new P._AsyncStarStreamController_closure0(t1), null, new P._AsyncStarStreamController_closure1(this, t1), false, null);
      },
      static: {_AsyncStarStreamController$: function(body) {
          var t1 = new P._AsyncStarStreamController(null, false, null);
          t1._AsyncStarStreamController$1(body);
          return t1;
        }}
    },
    _AsyncStarStreamController__resumeBody: {
      "^": "Closure:0;_captured_body_0",
      call$0: function() {
        P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this._captured_body_0));
      }
    },
    _AsyncStarStreamController__resumeBody_closure: {
      "^": "Closure:0;_captured_body_1",
      call$0: [function() {
        this._captured_body_1.call$2(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController_closure0: {
      "^": "Closure:0;_captured__resumeBody_2",
      call$0: function() {
        this._captured__resumeBody_2.call$0();
      }
    },
    _AsyncStarStreamController_closure1: {
      "^": "Closure:0;_captured_this_3,_captured__resumeBody_4",
      call$0: function() {
        var t1 = this._captured_this_3;
        if (t1.isSuspended === true) {
          t1.isSuspended = false;
          this._captured__resumeBody_4.call$0();
        }
      }
    },
    _AsyncStarStreamController_closure: {
      "^": "Closure:0;_captured_this_5,_captured_body_6",
      call$0: [function() {
        var t1 = this._captured_this_5;
        if (t1.controller.get$isClosed() !== true) {
          t1.cancelationCompleter = H.setRuntimeTypeInfo(new P._AsyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null])), [null]);
          if (t1.isSuspended === true) {
            t1.isSuspended = false;
            P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this._captured_body_6));
          }
          return t1.cancelationCompleter.get$future();
        }
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController__closure: {
      "^": "Closure:0;_captured_body_7",
      call$0: [function() {
        this._captured_body_7.call$2(2, null);
      }, null, null, 0, 0, null, "call"]
    },
    _IterationMarker: {
      "^": "Object;value>,state>",
      toString$0: function(_) {
        return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
      },
      static: {_IterationMarker_yieldStar: function(values) {
          return new P._IterationMarker(values, 1);
        }, _IterationMarker_yieldSingle: function(value) {
          return new P._IterationMarker(value, 0);
        }}
    },
    _BroadcastStream: {
      "^": "_ControllerStream;_async$_controller"
    },
    _BroadcastSubscription: {
      "^": "_ControllerSubscription;_eventState@,_async$_next@,_async$_previous@,_async$_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      get$_async$_controller: function() {
        return this._async$_controller;
      },
      _expectsEvent$1: function(eventId) {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 1) === eventId;
      },
      _toggleEventId$0: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$xor();
        this._eventState = t1 ^ 1;
      },
      get$_isFiring: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 2) !== 0;
      },
      _setRemoveAfterFiring$0: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$or();
        this._eventState = t1 | 4;
      },
      get$_removeAfterFiring: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 4) !== 0;
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 2],
      $is_EventSink: 1,
      $isStreamSubscription: 1
    },
    _BroadcastStreamController: {
      "^": "Object;_async$_next@,_async$_previous@",
      get$stream: function(_) {
        var t1 = new P._BroadcastStream(this);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$isClosed: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        return false;
      },
      get$_mayAddEvent: function() {
        return this._state < 4;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 != null)
          return t1;
        t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        this._doneFuture = t1;
        return t1;
      },
      _removeListener$1: function(subscription) {
        var previous, next;
        previous = subscription.get$_async$_previous();
        next = subscription.get$_async$_next();
        previous.set$_async$_next(next);
        next.set$_async$_previous(previous);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
      },
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, subscription;
        if ((this._state & 4) !== 0) {
          if (onDone == null)
            onDone = P.async___nullDoneHandler$closure();
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          t1._schedule$0();
          return t1;
        }
        t1 = $.Zone__current;
        subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, cancelOnError ? 1 : 0, null, null);
        subscription.$builtinTypeInfo = this.$builtinTypeInfo;
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, H.getTypeArgumentByIndex(this, 0));
        subscription._async$_previous = subscription;
        subscription._async$_next = subscription;
        t1 = this._async$_previous;
        subscription._async$_previous = t1;
        subscription._async$_next = this;
        t1.set$_async$_next(subscription);
        this._async$_previous = subscription;
        subscription._eventState = this._state & 1;
        if (this._async$_next === subscription)
          P._runGuarded(this.onListen);
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        if (subscription.get$_async$_next() === subscription)
          return;
        if (subscription.get$_isFiring())
          subscription._setRemoveAfterFiring$0();
        else {
          this._removeListener$1(subscription);
          if ((this._state & 2) === 0 && this._async$_next === this)
            this._callOnCancel$0();
        }
        return;
      },
      _recordPause$1: function(subscription) {
      },
      _recordResume$1: function(subscription) {
      },
      _addEventError$0: ["super$_BroadcastStreamController$_addEventError", function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add new events after calling close");
        return new P.StateError("Cannot add new events while doing an addStream");
      }],
      add$1: ["super$_BroadcastStreamController$add", function(_, data) {
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._sendData$1(data);
      }],
      addError$2: function(error, stackTrace) {
        var replacement;
        error = error != null ? error : new P.NullThrownError();
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._sendError$2(error, stackTrace);
      },
      close$0: ["super$_BroadcastStreamController$close", function(_) {
        var doneFuture;
        if ((this._state & 4) !== 0)
          return this._doneFuture;
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._state |= 4;
        doneFuture = this._ensureDoneFuture$0();
        this._sendDone$0();
        return doneFuture;
      }],
      get$done: function() {
        return this._ensureDoneFuture$0();
      },
      addStream$2$cancelOnError: function(_, stream, cancelOnError) {
        var t1;
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._state |= 8;
        t1 = P._AddStreamState$(this, stream, cancelOnError, null);
        this._addStreamState = t1;
        return t1.addStreamFuture;
      },
      addStream$1: function($receiver, stream) {
        return this.addStream$2$cancelOnError($receiver, stream, true);
      },
      _async$_add$1: [function(_, data) {
        this._sendData$1(data);
      }, "call$1", "get$_async$_add", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, v: true, args: [T]};
        }, this.$receiver, "_BroadcastStreamController");
      }, 8],
      _addError$2: [function(error, stackTrace) {
        this._sendError$2(error, stackTrace);
      }, "call$2", "get$_addError", 4, 0, 23, 3, 4],
      _close$0: [function() {
        var addState = this._addStreamState;
        this._addStreamState = null;
        this._state &= 4294967287;
        addState.addStreamFuture._asyncComplete$1(null);
      }, "call$0", "get$_close", 0, 0, 2],
      _forEachListener$1: function(action) {
        var t1, link, id, link0;
        t1 = this._state;
        if ((t1 & 2) !== 0)
          throw H.wrapException(new P.StateError("Cannot fire new event. Controller is already firing an event"));
        link = this._async$_next;
        if (link === this)
          return;
        id = t1 & 1;
        this._state = t1 ^ 3;
        for (; link !== this;)
          if (link._expectsEvent$1(id)) {
            t1 = link.get$_eventState();
            if (typeof t1 !== "number")
              return t1.$or();
            link.set$_eventState(t1 | 2);
            action.call$1(link);
            link._toggleEventId$0();
            link0 = link.get$_async$_next();
            if (link.get$_removeAfterFiring())
              this._removeListener$1(link);
            t1 = link.get$_eventState();
            if (typeof t1 !== "number")
              return t1.$and();
            link.set$_eventState(t1 & 4294967293);
            link = link0;
          } else
            link = link.get$_async$_next();
        this._state &= 4294967293;
        if (this._async$_next === this)
          this._callOnCancel$0();
      },
      _callOnCancel$0: ["super$_BroadcastStreamController$_callOnCancel", function() {
        if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
          this._doneFuture._asyncComplete$1(null);
        P._runGuarded(this.onCancel);
      }]
    },
    _SyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;",
      get$_mayAddEvent: function() {
        return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
      },
      _addEventError$0: function() {
        if ((this._state & 2) !== 0)
          return new P.StateError("Cannot fire new event. Controller is already firing an event");
        return this.super$_BroadcastStreamController$_addEventError();
      },
      _sendData$1: function(data) {
        var t1 = this._async$_next;
        if (t1 === this)
          return;
        if (t1.get$_async$_next() === this) {
          this._state |= 2;
          this._async$_next._async$_add$1(0, data);
          this._state &= 4294967293;
          if (this._async$_next === this)
            this._callOnCancel$0();
          return;
        }
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
      },
      _sendError$2: function(error, stackTrace) {
        if (this._async$_next === this)
          return;
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
      },
      _sendDone$0: function() {
        if (this._async$_next !== this)
          this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _SyncBroadcastStreamController__sendData_closure: {
      "^": "Closure;_captured_this_0,_captured_data_1",
      call$1: function(subscription) {
        subscription._async$_add$1(0, this._captured_data_1);
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BufferingStreamSubscription, T]]};
        }, this._captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _SyncBroadcastStreamController__sendError_closure: {
      "^": "Closure;_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$1: function(subscription) {
        subscription._addError$2(this._captured_error_1, this._captured_stackTrace_2);
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BufferingStreamSubscription, T]]};
        }, this._captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _SyncBroadcastStreamController__sendDone_closure: {
      "^": "Closure;_captured_this_0",
      call$1: function(subscription) {
        subscription._close$0();
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BroadcastSubscription, T]]};
        }, this._captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _AsyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;onListen,onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
      _sendData$1: function(data) {
        var link;
        for (link = this._async$_next; link !== this; link = link.get$_async$_next())
          link._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
      },
      _sendError$2: function(error, stackTrace) {
        var link;
        for (link = this._async$_next; link !== this; link = link.get$_async$_next())
          link._addPending$1(new P._DelayedError(error, stackTrace, null));
      },
      _sendDone$0: function() {
        var link = this._async$_next;
        if (link !== this)
          for (; link !== this; link = link.get$_async$_next())
            link._addPending$1(C.C__DelayedDone);
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _AsBroadcastStreamController: {
      "^": "_SyncBroadcastStreamController;_pending,onListen,onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
      _addPendingEvent$1: function($event) {
        var t1 = this._pending;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._pending = t1;
        }
        t1.add$1(0, $event);
      },
      add$1: [function(_, data) {
        var t1, $event, t2;
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          t1 = new P._DelayedData(data, null);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          this._addPendingEvent$1(t1);
          return;
        }
        this.super$_BroadcastStreamController$add(this, data);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          $event = t1.firstPendingEvent;
          t2 = J.get$next$x($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, "call$1", "get$add", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, v: true, args: [T]};
        }, this.$receiver, "_AsBroadcastStreamController");
      }, 8],
      addError$2: [function(error, stackTrace) {
        var t1, $event, t2;
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedError(error, stackTrace, null));
          return;
        }
        if (!(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0))
          throw H.wrapException(this._addEventError$0());
        this._sendError$2(error, stackTrace);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          $event = t1.firstPendingEvent;
          t2 = J.get$next$x($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, function(error) {
        return this.addError$2(error, null);
      }, "addError$1", "call$2", "call$1", "get$addError", 2, 2, 10, 0, 3, 4],
      close$0: [function(_) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(C.C__DelayedDone);
          this._state |= 4;
          return P._BroadcastStreamController.prototype.get$done.call(this);
        }
        return this.super$_BroadcastStreamController$close(this);
      }, "call$0", "get$close", 0, 0, 25],
      _callOnCancel$0: function() {
        var t1 = this._pending;
        if (t1 != null && t1.lastPendingEvent != null) {
          if (t1._state === 1)
            t1._state = 3;
          t1.lastPendingEvent = null;
          t1.firstPendingEvent = null;
          this._pending = null;
        }
        this.super$_BroadcastStreamController$_callOnCancel();
      }
    },
    Future: {
      "^": "Object;"
    },
    Future_Future$microtask_closure: {
      "^": "Closure:0;_captured_computation_0,_async$_captured_result_1",
      call$0: [function() {
        var e, s, exception, t1;
        try {
          this._async$_captured_result_1._complete$1(this._captured_computation_0.call$0());
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._async$_captured_result_1, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    Future_wait_handleError: {
      "^": "Closure:56;_async$_box_0,_captured_eagerError_1,_captured_cleanUp_2,_captured_result_3",
      call$2: [function(theError, theStackTrace) {
        var t1, t2;
        t1 = this._async$_box_0;
        t2 = --t1._captured_remaining_1;
        if (t1._captured_values_0 != null) {
          t1._captured_values_0 = null;
          if (t1._captured_remaining_1 === 0 || this._captured_eagerError_1)
            this._captured_result_3._completeError$2(theError, theStackTrace);
          else {
            t1._captured_error_2 = theError;
            t1._captured_stackTrace_3 = theStackTrace;
          }
        } else if (t2 === 0 && !this._captured_eagerError_1)
          this._captured_result_3._completeError$2(t1._captured_error_2, t1._captured_stackTrace_3);
      }, null, null, 4, 0, null, 41, 42, "call"]
    },
    Future_wait_closure: {
      "^": "Closure:34;_async$_box_0,_captured_eagerError_6,_captured_cleanUp_7,_captured_result_8,_captured_pos_9",
      call$1: [function(value) {
        var t1, t2, t3;
        t1 = this._async$_box_0;
        t2 = --t1._captured_remaining_1;
        t3 = t1._captured_values_0;
        if (t3 != null) {
          t1 = this._captured_pos_9;
          if (t1 < 0 || t1 >= t3.length)
            return H.ioore(t3, t1);
          t3[t1] = value;
          if (t2 === 0)
            this._captured_result_8._completeWithValue$1(t3);
        } else if (t1._captured_remaining_1 === 0 && !this._captured_eagerError_6)
          this._captured_result_8._completeError$2(t1._captured_error_2, t1._captured_stackTrace_3);
      }, null, null, 2, 0, null, 5, "call"]
    },
    _Completer: {
      "^": "Object;future<",
      completeError$2: [function(error, stackTrace) {
        var replacement;
        error = error != null ? error : new P.NullThrownError();
        if (this.future._state !== 0)
          throw H.wrapException(new P.StateError("Future already completed"));
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._completeError$2(error, stackTrace);
      }, function(error) {
        return this.completeError$2(error, null);
      }, "completeError$1", "call$2", "call$1", "get$completeError", 2, 2, 10, 0, 3, 4]
    },
    _AsyncCompleter: {
      "^": "_Completer;future",
      complete$1: function(_, value) {
        var t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(new P.StateError("Future already completed"));
        t1._asyncComplete$1(value);
      },
      complete$0: function($receiver) {
        return this.complete$1($receiver, null);
      },
      _completeError$2: function(error, stackTrace) {
        this.future._asyncCompleteError$2(error, stackTrace);
      }
    },
    _SyncCompleter: {
      "^": "_Completer;future",
      complete$1: function(_, value) {
        var t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(new P.StateError("Future already completed"));
        t1._complete$1(value);
      },
      complete$0: function($receiver) {
        return this.complete$1($receiver, null);
      },
      _completeError$2: function(error, stackTrace) {
        this.future._completeError$2(error, stackTrace);
      }
    },
    _FutureListener: {
      "^": "Object;_nextListener@,result>,state>,callback,errorCallback",
      get$_zone: function() {
        return this.result.get$_zone();
      },
      get$handlesValue: function() {
        return (this.state & 1) !== 0;
      },
      get$hasErrorTest: function() {
        return this.state === 6;
      },
      get$handlesComplete: function() {
        return this.state === 8;
      },
      get$_onValue: function() {
        return this.callback;
      },
      get$_onError: function() {
        return this.errorCallback;
      },
      get$_errorTest: function() {
        return this.callback;
      },
      get$_whenCompleteAction: function() {
        return this.callback;
      },
      callback$0: function() {
        return this.callback.call$0();
      },
      errorCallback$2: function(arg0, arg1) {
        return this.errorCallback.call$2(arg0, arg1);
      }
    },
    _Future: {
      "^": "Object;_state,_zone<,_resultOrListeners",
      get$_hasError: function() {
        return this._state === 8;
      },
      set$_isChained: function(value) {
        this._state = 2;
      },
      then$2$onError: function(f, onError) {
        var currentZone = $.Zone__current;
        if (currentZone !== C.C__RootZone) {
          f = currentZone.registerUnaryCallback$1(f);
          if (onError != null)
            onError = P._registerErrorHandler(onError, currentZone);
        }
        return this._thenNoZoneRegistration$2(f, onError);
      },
      then$1: function(f) {
        return this.then$2$onError(f, null);
      },
      _thenNoZoneRegistration$2: function(f, onError) {
        var result = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        this._addListener$1(new P._FutureListener(null, result, onError == null ? 1 : 3, f, onError));
        return result;
      },
      whenComplete$1: function(action) {
        var t1, result;
        t1 = $.Zone__current;
        result = new P._Future(0, t1, null);
        result.$builtinTypeInfo = this.$builtinTypeInfo;
        this._addListener$1(new P._FutureListener(null, result, 8, t1 !== C.C__RootZone ? t1.registerCallback$1(action) : action, null));
        return result;
      },
      _markPendingCompletion$0: function() {
        if (this._state !== 0)
          throw H.wrapException(new P.StateError("Future already completed"));
        this._state = 1;
      },
      get$_value: function() {
        return this._resultOrListeners;
      },
      get$_error: function() {
        return this._resultOrListeners;
      },
      _setValue$1: function(value) {
        this._state = 4;
        this._resultOrListeners = value;
      },
      _setErrorObject$1: function(error) {
        this._state = 8;
        this._resultOrListeners = error;
      },
      _setError$2: function(error, stackTrace) {
        this._state = 8;
        this._resultOrListeners = new P.AsyncError(error, stackTrace);
      },
      _addListener$1: function(listener) {
        if (this._state >= 4)
          this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
        else {
          listener._nextListener = this._resultOrListeners;
          this._resultOrListeners = listener;
        }
      },
      _removeListeners$0: function() {
        var current, prev, next;
        current = this._resultOrListeners;
        this._resultOrListeners = null;
        for (prev = null; current != null; prev = current, current = next) {
          next = current.get$_nextListener();
          current.set$_nextListener(prev);
        }
        return prev;
      },
      _complete$1: function(value) {
        var t1, listeners;
        t1 = J.getInterceptor(value);
        if (!!t1.$isFuture)
          if (!!t1.$is_Future)
            P._Future__chainCoreFuture(value, this);
          else
            P._Future__chainForeignFuture(value, this);
        else {
          listeners = this._removeListeners$0();
          this._state = 4;
          this._resultOrListeners = value;
          P._Future__propagateToListeners(this, listeners);
        }
      },
      _completeWithValue$1: function(value) {
        var listeners = this._removeListeners$0();
        this._state = 4;
        this._resultOrListeners = value;
        P._Future__propagateToListeners(this, listeners);
      },
      _completeError$2: [function(error, stackTrace) {
        var listeners = this._removeListeners$0();
        this._state = 8;
        this._resultOrListeners = new P.AsyncError(error, stackTrace);
        P._Future__propagateToListeners(this, listeners);
      }, function(error) {
        return this._completeError$2(error, null);
      }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 15, 0, 3, 4],
      _asyncComplete$1: function(value) {
        var t1;
        if (value == null)
          ;
        else {
          t1 = J.getInterceptor(value);
          if (!!t1.$isFuture) {
            if (!!t1.$is_Future) {
              t1 = value._state;
              if (t1 >= 4 && t1 === 8) {
                this._markPendingCompletion$0();
                this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
              } else
                P._Future__chainCoreFuture(value, this);
            } else
              P._Future__chainForeignFuture(value, this);
            return;
          }
        }
        this._markPendingCompletion$0();
        this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure0(this, value));
      },
      _asyncCompleteError$2: function(error, stackTrace) {
        this._markPendingCompletion$0();
        this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
      },
      $isFuture: 1,
      static: {_Future__chainForeignFuture: function(source, target) {
          var e, s, exception, t1;
          target.set$_isChained(true);
          try {
            source.then$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            s = H.getTraceFromException(exception);
            P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
          }
        }, _Future__chainCoreFuture: function(source, target) {
          var listener;
          target.set$_isChained(true);
          listener = new P._FutureListener(null, target, 0, null, null);
          if (source._state >= 4)
            P._Future__propagateToListeners(source, listener);
          else
            source._addListener$1(listener);
        }, _Future__propagateToListeners: function(source, listeners) {
          var t1, t2, t3, hasError, asyncError, listeners0, sourceValue, t4, zone, oldZone, chainSource, result;
          t1 = {};
          t1._captured_source_4 = source;
          for (t2 = source; true;) {
            t3 = {};
            hasError = t2.get$_hasError();
            if (listeners == null) {
              if (hasError === true) {
                asyncError = t1._captured_source_4.get$_error();
                t1._captured_source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
              }
              return;
            }
            for (; listeners.get$_nextListener() != null; listeners = listeners0) {
              listeners0 = listeners.get$_nextListener();
              listeners.set$_nextListener(null);
              P._Future__propagateToListeners(t1._captured_source_4, listeners);
            }
            t3._captured_listenerHasValue_1 = true;
            t2 = hasError === true;
            sourceValue = t2 ? null : t1._captured_source_4.get$_value();
            t3._captured_listenerValueOrError_2 = sourceValue;
            t3._captured_isPropagationAborted_3 = false;
            t4 = !t2;
            if (!t4 || listeners.get$handlesValue() === true || listeners.get$handlesComplete() === true) {
              zone = listeners.get$_zone();
              if (t2 && t1._captured_source_4.get$_zone().inSameErrorZone$1(zone) !== true) {
                asyncError = t1._captured_source_4.get$_error();
                t1._captured_source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
                return;
              }
              oldZone = $.Zone__current;
              if (oldZone == null ? zone != null : oldZone !== zone)
                $.Zone__current = zone;
              else
                oldZone = null;
              if (t4) {
                if (listeners.get$handlesValue() === true)
                  t3._captured_listenerHasValue_1 = new P._Future__propagateToListeners_handleValueCallback(t3, listeners, sourceValue, zone).call$0();
              } else
                new P._Future__propagateToListeners_handleError(t1, t3, listeners, zone).call$0();
              if (listeners.get$handlesComplete() === true)
                new P._Future__propagateToListeners_handleWhenCompleteCallback(t1, t3, hasError, listeners, zone).call$0();
              if (oldZone != null)
                $.Zone__current = oldZone;
              if (t3._captured_isPropagationAborted_3)
                return;
              if (t3._captured_listenerHasValue_1 === true) {
                t2 = t3._captured_listenerValueOrError_2;
                t2 = (sourceValue == null ? t2 != null : sourceValue !== t2) && !!J.getInterceptor(t2).$isFuture;
              } else
                t2 = false;
              if (t2) {
                chainSource = t3._captured_listenerValueOrError_2;
                result = J.get$result$x(listeners);
                if (chainSource instanceof P._Future)
                  if (chainSource._state >= 4) {
                    result.set$_isChained(true);
                    t1._captured_source_4 = chainSource;
                    listeners = new P._FutureListener(null, result, 0, null, null);
                    t2 = chainSource;
                    continue;
                  } else
                    P._Future__chainCoreFuture(chainSource, result);
                else
                  P._Future__chainForeignFuture(chainSource, result);
                return;
              }
            }
            result = J.get$result$x(listeners);
            listeners = result._removeListeners$0();
            t2 = t3._captured_listenerHasValue_1;
            t3 = t3._captured_listenerValueOrError_2;
            if (t2 === true)
              result._setValue$1(t3);
            else
              result._setErrorObject$1(t3);
            t1._captured_source_4 = result;
            t2 = result;
          }
        }}
    },
    _Future__addListener_closure: {
      "^": "Closure:0;_captured_this_0,_captured_listener_1",
      call$0: [function() {
        P._Future__propagateToListeners(this._captured_this_0, this._captured_listener_1);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainForeignFuture_closure: {
      "^": "Closure:1;_captured_target_0",
      call$1: [function(value) {
        this._captured_target_0._completeWithValue$1(value);
      }, null, null, 2, 0, null, 5, "call"]
    },
    _Future__chainForeignFuture_closure0: {
      "^": "Closure:11;_captured_target_1",
      call$2: [function(error, stackTrace) {
        this._captured_target_1._completeError$2(error, stackTrace);
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 2, 2, null, 0, 3, 4, "call"]
    },
    _Future__chainForeignFuture_closure1: {
      "^": "Closure:0;_captured_target_2,_captured_e_3,_captured_s_4",
      call$0: [function() {
        this._captured_target_2._completeError$2(this._captured_e_3, this._captured_s_4);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure: {
      "^": "Closure:0;_captured_this_0,_captured_coreFuture_1",
      call$0: [function() {
        P._Future__chainCoreFuture(this._captured_coreFuture_1, this._captured_this_0);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure0: {
      "^": "Closure:0;_captured_this_2,_captured_value_3",
      call$0: [function() {
        this._captured_this_2._completeWithValue$1(this._captured_value_3);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncCompleteError_closure: {
      "^": "Closure:0;_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        this._captured_this_0._completeError$2(this._captured_error_1, this._captured_stackTrace_2);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__propagateToListeners_handleValueCallback: {
      "^": "Closure:35;_box_1,_captured_listener_3,_captured_sourceValue_4,_captured_zone_5",
      call$0: function() {
        var e, s, exception, t1;
        try {
          this._box_1._captured_listenerValueOrError_2 = this._captured_zone_5.runUnary$2(this._captured_listener_3.get$_onValue(), this._captured_sourceValue_4);
          return true;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          this._box_1._captured_listenerValueOrError_2 = new P.AsyncError(e, s);
          return false;
        }
      }
    },
    _Future__propagateToListeners_handleError: {
      "^": "Closure:2;_box_2,_box_1,_captured_listener_6,_captured_zone_7",
      call$0: function() {
        var asyncError, matchesTest, test, e, s, errorCallback, e0, s0, t1, exception, t2, listenerValueOrError, t3, t4;
        asyncError = this._box_2._captured_source_4.get$_error();
        matchesTest = true;
        t1 = this._captured_listener_6;
        if (t1.get$hasErrorTest() === true) {
          test = t1.get$_errorTest();
          try {
            matchesTest = this._captured_zone_7.runUnary$2(test, J.get$error$x(asyncError));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            s = H.getTraceFromException(exception);
            t1 = J.get$error$x(asyncError);
            t2 = e;
            listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P.AsyncError(e, s);
            t1 = this._box_1;
            t1._captured_listenerValueOrError_2 = listenerValueOrError;
            t1._captured_listenerHasValue_1 = false;
            return;
          }
        }
        errorCallback = t1.get$_onError();
        if (matchesTest === true && errorCallback != null) {
          try {
            t1 = errorCallback;
            t2 = H.getDynamicRuntimeType();
            t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
            t3 = this._captured_zone_7;
            t4 = this._box_1;
            if (t2)
              t4._captured_listenerValueOrError_2 = t3.runBinary$3(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
            else
              t4._captured_listenerValueOrError_2 = t3.runUnary$2(errorCallback, J.get$error$x(asyncError));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e0 = t1;
            s0 = H.getTraceFromException(exception);
            t1 = J.get$error$x(asyncError);
            t2 = e0;
            listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P.AsyncError(e0, s0);
            t1 = this._box_1;
            t1._captured_listenerValueOrError_2 = listenerValueOrError;
            t1._captured_listenerHasValue_1 = false;
            return;
          }
          this._box_1._captured_listenerHasValue_1 = true;
        } else {
          t1 = this._box_1;
          t1._captured_listenerValueOrError_2 = asyncError;
          t1._captured_listenerHasValue_1 = false;
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: {
      "^": "Closure:2;_box_2,_box_1,_captured_hasError_8,_captured_listener_9,_captured_zone_10",
      call$0: function() {
        var t1, e, s, completeResult, t2, exception, result;
        t1 = {};
        t1._captured_completeResult_0 = null;
        try {
          completeResult = this._captured_zone_10.run$1(this._captured_listener_9.get$_whenCompleteAction());
          t1._captured_completeResult_0 = completeResult;
          t2 = completeResult;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          if (this._captured_hasError_8 === true) {
            t1 = J.get$error$x(this._box_2._captured_source_4.get$_error());
            t2 = e;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          } else
            t1 = false;
          t2 = this._box_1;
          if (t1)
            t2._captured_listenerValueOrError_2 = this._box_2._captured_source_4.get$_error();
          else
            t2._captured_listenerValueOrError_2 = new P.AsyncError(e, s);
          t2._captured_listenerHasValue_1 = false;
          return;
        }
        if (!!J.getInterceptor(t2).$isFuture) {
          result = J.get$result$x(this._captured_listener_9);
          result.set$_isChained(true);
          this._box_1._captured_isPropagationAborted_3 = true;
          t2.then$2$onError(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(this._box_2, result), new P._Future__propagateToListeners_handleWhenCompleteCallback_closure0(t1, result));
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: {
      "^": "Closure:1;_box_2,_captured_result_11",
      call$1: [function(ignored) {
        P._Future__propagateToListeners(this._box_2._captured_source_4, new P._FutureListener(null, this._captured_result_11, 0, null, null));
      }, null, null, 2, 0, null, 44, "call"]
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0: {
      "^": "Closure:11;_async$_box_0,_captured_result_12",
      call$2: [function(error, stackTrace) {
        var t1, completeResult;
        t1 = this._async$_box_0;
        if (!(t1._captured_completeResult_0 instanceof P._Future)) {
          completeResult = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
          t1._captured_completeResult_0 = completeResult;
          completeResult._setError$2(error, stackTrace);
        }
        P._Future__propagateToListeners(t1._captured_completeResult_0, new P._FutureListener(null, this._captured_result_12, 0, null, null));
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 2, 2, null, 0, 3, 4, "call"]
    },
    _AsyncCallbackEntry: {
      "^": "Object;callback,zone<,next*",
      callback$0: function() {
        return this.callback.call$0();
      }
    },
    Stream: {
      "^": "Object;",
      where$1: function(_, test) {
        return H.setRuntimeTypeInfo(new P._WhereStream(test, this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
      },
      map$1: function(_, convert) {
        return H.setRuntimeTypeInfo(new P._MapStream(convert, this), [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
      },
      contains$1: function(_, needle) {
        var t1, future;
        t1 = {};
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_contains_closure(t1, this, needle, future), true, new P.Stream_contains_closure0(future), future.get$_completeError());
        return future;
      },
      forEach$1: function(_, action) {
        var t1, future;
        t1 = {};
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
        return future;
      },
      get$length: function(_) {
        var t1, future;
        t1 = {};
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.$int]);
        t1._captured_count_0 = 0;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
        return future;
      },
      get$isEmpty: function(_) {
        var t1, future;
        t1 = {};
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
        return future;
      },
      toList$0: function(_) {
        var result, future;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "Stream", 0)]);
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [[P.List, H.getRuntimeTypeArgument(this, "Stream", 0)]]);
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_toList_closure(this, result), true, new P.Stream_toList_closure0(result, future), future.get$_completeError());
        return future;
      },
      get$last: function(_) {
        var t1, future;
        t1 = {};
        future = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
        t1._captured_result_0 = null;
        t1._captured_foundResult_1 = false;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_last_closure(t1, this), true, new P.Stream_last_closure0(t1, future), future.get$_completeError());
        return future;
      }
    },
    Stream_contains_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_needle_2,_captured_future_3",
      call$1: [function(element) {
        var t1, t2;
        t1 = this._async$_box_0;
        t2 = this._captured_future_3;
        P._runUserCode(new P.Stream_contains__closure(this._captured_needle_2, element), new P.Stream_contains__closure0(t1, t2), P._cancelAndErrorClosure(t1._captured_subscription_0, t2));
      }, null, null, 2, 0, null, 21, "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_contains__closure: {
      "^": "Closure:0;_captured_needle_4,_captured_element_5",
      call$0: function() {
        return J.$eq$(this._captured_element_5, this._captured_needle_4);
      }
    },
    Stream_contains__closure0: {
      "^": "Closure:16;_async$_box_0,_captured_future_6",
      call$1: function(isMatch) {
        if (isMatch === true)
          P._cancelAndValue(this._async$_box_0._captured_subscription_0, this._captured_future_6, true);
      }
    },
    Stream_contains_closure0: {
      "^": "Closure:0;_captured_future_7",
      call$0: [function() {
        this._captured_future_7._complete$1(false);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_forEach_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_action_2,_captured_future_3",
      call$1: [function(element) {
        P._runUserCode(new P.Stream_forEach__closure(this._captured_action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this._async$_box_0._captured_subscription_0, this._captured_future_3));
      }, null, null, 2, 0, null, 21, "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_forEach__closure: {
      "^": "Closure:0;_captured_action_4,_captured_element_5",
      call$0: function() {
        return this._captured_action_4.call$1(this._captured_element_5);
      }
    },
    Stream_forEach__closure0: {
      "^": "Closure:1;",
      call$1: function(_) {
      }
    },
    Stream_forEach_closure0: {
      "^": "Closure:0;_captured_future_6",
      call$0: [function() {
        this._captured_future_6._complete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_length_closure: {
      "^": "Closure:1;_async$_box_0",
      call$1: [function(_) {
        ++this._async$_box_0._captured_count_0;
      }, null, null, 2, 0, null, 2, "call"]
    },
    Stream_length_closure0: {
      "^": "Closure:0;_async$_box_0,_captured_future_1",
      call$0: [function() {
        this._captured_future_1._complete$1(this._async$_box_0._captured_count_0);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_isEmpty_closure: {
      "^": "Closure:1;_async$_box_0,_captured_future_1",
      call$1: [function(_) {
        P._cancelAndValue(this._async$_box_0._captured_subscription_0, this._captured_future_1, false);
      }, null, null, 2, 0, null, 2, "call"]
    },
    Stream_isEmpty_closure0: {
      "^": "Closure:0;_captured_future_2",
      call$0: [function() {
        this._captured_future_2._complete$1(true);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_toList_closure: {
      "^": "Closure;_captured_this_0,_async$_captured_result_1",
      call$1: [function(data) {
        this._async$_captured_result_1.push(data);
      }, null, null, 2, 0, null, 8, "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._captured_this_0, "Stream");
      }
    },
    Stream_toList_closure0: {
      "^": "Closure:0;_captured_result_2,_captured_future_3",
      call$0: [function() {
        this._captured_future_3._complete$1(this._captured_result_2);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_last_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1",
      call$1: [function(value) {
        var t1 = this._async$_box_0;
        t1._captured_foundResult_1 = true;
        t1._captured_result_0 = value;
      }, null, null, 2, 0, null, 5, "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_last_closure0: {
      "^": "Closure:0;_async$_box_0,_captured_future_2",
      call$0: [function() {
        var e, s, t1, exception;
        t1 = this._async$_box_0;
        if (t1._captured_foundResult_1) {
          this._captured_future_2._complete$1(t1._captured_result_0);
          return;
        }
        try {
          t1 = H.IterableElementError_noElement();
          throw H.wrapException(t1);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._captured_future_2, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    StreamSubscription: {
      "^": "Object;"
    },
    _StreamController: {
      "^": "Object;",
      get$stream: function(_) {
        var t1 = new P._ControllerStream(this);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$isClosed: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        var t1 = this._state;
        return (t1 & 1) !== 0 ? this.get$_subscription().get$_isInputPaused() : (t1 & 2) === 0;
      },
      get$_pendingEvents: function() {
        if ((this._state & 8) === 0)
          return this._varData;
        return this._varData.get$varData();
      },
      _ensurePendingEvents$0: function() {
        var t1, state;
        if ((this._state & 8) === 0) {
          t1 = this._varData;
          if (t1 == null) {
            t1 = new P._StreamImplEvents(null, null, 0);
            this._varData = t1;
          }
          return t1;
        }
        state = this._varData;
        if (state.get$varData() == null)
          state.set$varData(new P._StreamImplEvents(null, null, 0));
        return state.get$varData();
      },
      get$_subscription: function() {
        if ((this._state & 8) !== 0)
          return this._varData.get$varData();
        return this._varData;
      },
      _badEventState$0: function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add event after closing");
        return new P.StateError("Cannot add event while adding a stream");
      },
      addStream$2$cancelOnError: function(_, source, cancelOnError) {
        var t1, t2, t3, t4, addState;
        t1 = this._state;
        if (t1 >= 4)
          throw H.wrapException(this._badEventState$0());
        if ((t1 & 2) !== 0) {
          t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        t1 = this._varData;
        t2 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
        t3 = this.get$_async$_add(this);
        t4 = cancelOnError ? P._AddStreamState_makeErrorHandler(this) : this.get$_addError();
        addState = H.setRuntimeTypeInfo(new P._StreamControllerAddStreamState(t1, t2, source.listen$4$cancelOnError$onDone$onError(t3, cancelOnError, this.get$_close(), t4)), [null]);
        t1 = this._state;
        if ((t1 & 1) !== 0 ? this.get$_subscription().get$_isInputPaused() : (t1 & 2) === 0)
          J.pause$0$x(addState.addSubscription);
        this._varData = addState;
        this._state |= 8;
        return addState.addStreamFuture;
      },
      addStream$1: function($receiver, source) {
        return this.addStream$2$cancelOnError($receiver, source, true);
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 == null) {
          t1 = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
          this._doneFuture = t1;
        }
        return t1;
      },
      add$1: function(_, value) {
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        this._async$_add$1(0, value);
      },
      addError$2: function(error, stackTrace) {
        var replacement;
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        error = error != null ? error : new P.NullThrownError();
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._addError$2(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._state;
        if ((t1 & 4) !== 0)
          return this._ensureDoneFuture$0();
        if (t1 >= 4)
          throw H.wrapException(this._badEventState$0());
        t1 |= 4;
        this._state = t1;
        if ((t1 & 1) !== 0)
          this._sendDone$0();
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
        return this._ensureDoneFuture$0();
      },
      _async$_add$1: [function(_, value) {
        var t1, t2;
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendData$1(value);
        else if ((t1 & 3) === 0) {
          t1 = this._ensurePendingEvents$0();
          t2 = new P._DelayedData(value, null);
          t2.$builtinTypeInfo = this.$builtinTypeInfo;
          t1.add$1(0, t2);
        }
      }, "call$1", "get$_async$_add", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, v: true, args: [T]};
        }, this.$receiver, "_StreamController");
      }, 5],
      _addError$2: [function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendError$2(error, stackTrace);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace, null));
      }, "call$2", "get$_addError", 4, 0, 23, 3, 4],
      _close$0: [function() {
        var addState = this._varData;
        this._varData = addState.get$varData();
        this._state &= 4294967287;
        addState.complete$0(0);
      }, "call$0", "get$_close", 0, 0, 2],
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, subscription, pendingEvents, addState;
        if ((this._state & 3) !== 0)
          throw H.wrapException(new P.StateError("Stream has already been listened to."));
        t1 = $.Zone__current;
        subscription = new P._ControllerSubscription(this, null, null, null, t1, cancelOnError ? 1 : 0, null, null);
        subscription.$builtinTypeInfo = this.$builtinTypeInfo;
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, H.getTypeArgumentByIndex(this, 0));
        pendingEvents = this.get$_pendingEvents();
        t1 = this._state |= 1;
        if ((t1 & 8) !== 0) {
          addState = this._varData;
          addState.set$varData(subscription);
          addState.resume$0(0);
        } else
          this._varData = subscription;
        subscription._setPendingEvents$1(pendingEvents);
        subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        var result, e, s, t1, exception, result0;
        result = null;
        if ((this._state & 8) !== 0)
          result = this._varData.cancel$0(0);
        this._varData = null;
        this._state = this._state & 4294967286 | 2;
        t1 = this.onCancel;
        if (t1 != null)
          if (result == null)
            try {
              result = this.onCancel$0();
            } catch (exception) {
              t1 = H.unwrapException(exception);
              e = t1;
              s = H.getTraceFromException(exception);
              result0 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
              result0._asyncCompleteError$2(e, s);
              result = result0;
            }
          else
            result = result.whenComplete$1(t1);
        t1 = new P._StreamController__recordCancel_complete(this);
        if (result != null)
          result = result.whenComplete$1(t1);
        else
          t1.call$0();
        return result;
      },
      _recordPause$1: function(subscription) {
        if ((this._state & 8) !== 0)
          this._varData.pause$0(0);
        P._runGuarded(this.onPause);
      },
      _recordResume$1: function(subscription) {
        if ((this._state & 8) !== 0)
          this._varData.resume$0(0);
        P._runGuarded(this.onResume);
      },
      onCancel$0: function() {
        return this.onCancel.call$0();
      }
    },
    _StreamController__subscribe_closure: {
      "^": "Closure:0;_captured_this_0",
      call$0: function() {
        P._runGuarded(this._captured_this_0.onListen);
      }
    },
    _StreamController__recordCancel_complete: {
      "^": "Closure:2;_captured_this_0",
      call$0: [function() {
        var t1 = this._captured_this_0._doneFuture;
        if (t1 != null && t1._state === 0)
          t1._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _SyncStreamControllerDispatch: {
      "^": "Object;",
      _sendData$1: function(data) {
        this.get$_subscription()._async$_add$1(0, data);
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addError$2(error, stackTrace);
      },
      _sendDone$0: function() {
        this.get$_subscription()._close$0();
      }
    },
    _AsyncStreamControllerDispatch: {
      "^": "Object;",
      _sendData$1: function(data) {
        this.get$_subscription()._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
      },
      _sendDone$0: function() {
        this.get$_subscription()._addPending$1(C.C__DelayedDone);
      }
    },
    _AsyncStreamController: {
      "^": "_StreamController+_AsyncStreamControllerDispatch;_varData,_state,_doneFuture,onListen,onPause,onResume,onCancel"
    },
    _SyncStreamController: {
      "^": "_StreamController+_SyncStreamControllerDispatch;_varData,_state,_doneFuture,onListen,onPause,onResume,onCancel"
    },
    _ControllerStream: {
      "^": "_StreamImpl;_async$_controller",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return this._async$_controller._subscribe$4(onData, onError, onDone, cancelOnError);
      },
      get$hashCode: function(_) {
        return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof P._ControllerStream))
          return false;
        return other._async$_controller === this._async$_controller;
      }
    },
    _ControllerSubscription: {
      "^": "_BufferingStreamSubscription;_async$_controller<,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      _onCancel$0: function() {
        return this.get$_async$_controller()._recordCancel$1(this);
      },
      _onPause$0: [function() {
        this.get$_async$_controller()._recordPause$1(this);
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
        this.get$_async$_controller()._recordResume$1(this);
      }, "call$0", "get$_onResume", 0, 0, 2]
    },
    _AddStreamState: {
      "^": "Object;addStreamFuture,addSubscription",
      pause$0: function(_) {
        J.pause$0$x(this.addSubscription);
      },
      resume$0: function(_) {
        J.resume$0$x(this.addSubscription);
      },
      cancel$0: function(_) {
        var cancel = J.cancel$0$x(this.addSubscription);
        if (cancel == null) {
          this.addStreamFuture._asyncComplete$1(null);
          return;
        }
        return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
      },
      complete$0: function(_) {
        this.addStreamFuture._asyncComplete$1(null);
      },
      static: {_AddStreamState$: function(controller, source, cancelOnError, $T) {
          var t1, t2, t3;
          t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null]);
          t2 = controller.get$_async$_add(controller);
          t3 = cancelOnError ? P._AddStreamState_makeErrorHandler(controller) : controller.get$_addError();
          return H.setRuntimeTypeInfo(new P._AddStreamState(t1, source.listen$4$cancelOnError$onDone$onError(t2, cancelOnError, controller.get$_close(), t3)), [$T]);
        }, _AddStreamState_makeErrorHandler: function(controller) {
          return new P._AddStreamState_makeErrorHandler_closure(controller);
        }}
    },
    _AddStreamState_makeErrorHandler_closure: {
      "^": "Closure:9;_captured_controller_0",
      call$2: [function(e, s) {
        var t1 = this._captured_controller_0;
        t1._addError$2(e, s);
        t1._close$0();
      }, null, null, 4, 0, null, 1, 48, "call"]
    },
    _AddStreamState_cancel_closure: {
      "^": "Closure:0;_captured_this_0",
      call$0: [function() {
        this._captured_this_0.addStreamFuture._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamControllerAddStreamState: {
      "^": "_AddStreamState;varData@,addStreamFuture,addSubscription"
    },
    _EventSink: {
      "^": "Object;"
    },
    _BufferingStreamSubscription: {
      "^": "Object;_async$_onData,_onError<,_onDone,_zone<,_state,_cancelFuture,_pending",
      _setPendingEvents$1: function(pendingEvents) {
        if (pendingEvents == null)
          return;
        this._pending = pendingEvents;
        if (!pendingEvents.get$isEmpty(pendingEvents)) {
          this._state = (this._state | 64) >>> 0;
          this._pending.schedule$1(this);
        }
      },
      pause$1: function(_, resumeSignal) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        this._state = (t1 + 128 | 4) >>> 0;
        if (t1 < 128 && this._pending != null)
          this._pending.cancelSchedule$0();
        if ((t1 & 4) === 0 && (this._state & 32) === 0)
          this._guardCallback$1(this.get$_onPause());
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 >= 128) {
          t1 -= 128;
          this._state = t1;
          if (t1 < 128) {
            if ((t1 & 64) !== 0) {
              t1 = this._pending;
              t1 = !t1.get$isEmpty(t1);
            } else
              t1 = false;
            if (t1)
              this._pending.schedule$1(this);
            else {
              t1 = (this._state & 4294967291) >>> 0;
              this._state = t1;
              if ((t1 & 32) === 0)
                this._guardCallback$1(this.get$_onResume());
            }
          }
        }
      },
      cancel$0: function(_) {
        var t1 = (this._state & 4294967279) >>> 0;
        this._state = t1;
        if ((t1 & 8) !== 0)
          return this._cancelFuture;
        this._cancel$0();
        return this._cancelFuture;
      },
      get$_isInputPaused: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        return this._state >= 128;
      },
      _cancel$0: function() {
        var t1 = (this._state | 8) >>> 0;
        this._state = t1;
        if ((t1 & 64) !== 0)
          this._pending.cancelSchedule$0();
        if ((this._state & 32) === 0)
          this._pending = null;
        this._cancelFuture = this._onCancel$0();
      },
      _async$_add$1: ["super$_BufferingStreamSubscription$_add", function(_, data) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendData$1(data);
        else
          this._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
      }],
      _addError$2: ["super$_BufferingStreamSubscription$_addError", function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendError$2(error, stackTrace);
        else
          this._addPending$1(new P._DelayedError(error, stackTrace, null));
      }],
      _close$0: function() {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t1 = (t1 | 2) >>> 0;
        this._state = t1;
        if (t1 < 32)
          this._sendDone$0();
        else
          this._addPending$1(C.C__DelayedDone);
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 2],
      _onCancel$0: function() {
        return;
      },
      _addPending$1: function($event) {
        var pending, t1;
        pending = this._pending;
        if (pending == null) {
          pending = new P._StreamImplEvents(null, null, 0);
          this._pending = pending;
        }
        pending.add$1(0, $event);
        t1 = this._state;
        if ((t1 & 64) === 0) {
          t1 = (t1 | 64) >>> 0;
          this._state = t1;
          if (t1 < 128)
            this._pending.schedule$1(this);
        }
      },
      _sendData$1: function(data) {
        var t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        this._zone.runUnaryGuarded$2(this._async$_onData, data);
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _sendError$2: function(error, stackTrace) {
        var t1, t2;
        t1 = this._state;
        t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
        if ((t1 & 1) !== 0) {
          this._state = (t1 | 16) >>> 0;
          this._cancel$0();
          t1 = this._cancelFuture;
          if (!!J.getInterceptor(t1).$isFuture)
            t1.whenComplete$1(t2);
          else
            t2.call$0();
        } else {
          t2.call$0();
          this._checkState$1((t1 & 4) !== 0);
        }
      },
      _sendDone$0: function() {
        var t1, t2;
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
        this._cancel$0();
        this._state = (this._state | 16) >>> 0;
        t2 = this._cancelFuture;
        if (!!J.getInterceptor(t2).$isFuture)
          t2.whenComplete$1(t1);
        else
          t1.call$0();
      },
      _guardCallback$1: function(callback) {
        var t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        callback.call$0();
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _checkState$1: function(wasInputPaused) {
        var t1, isInputPaused;
        if ((this._state & 64) !== 0) {
          t1 = this._pending;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = (this._state & 4294967231) >>> 0;
          this._state = t1;
          if ((t1 & 4) !== 0)
            if (t1 < 128) {
              t1 = this._pending;
              t1 = t1 == null || t1.get$isEmpty(t1);
            } else
              t1 = false;
          else
            t1 = false;
          if (t1)
            this._state = (this._state & 4294967291) >>> 0;
        }
        for (; true; wasInputPaused = isInputPaused) {
          t1 = this._state;
          if ((t1 & 8) !== 0) {
            this._pending = null;
            return;
          }
          isInputPaused = (t1 & 4) !== 0;
          if (wasInputPaused === isInputPaused)
            break;
          this._state = (t1 ^ 32) >>> 0;
          if (isInputPaused)
            this._onPause$0();
          else
            this._onResume$0();
          this._state = (this._state & 4294967263) >>> 0;
        }
        t1 = this._state;
        if ((t1 & 64) !== 0 && t1 < 128)
          this._pending.schedule$1(this);
      },
      _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
        var handleData, t1;
        handleData = onData == null ? P.async___nullDataHandler$closure() : onData;
        t1 = this._zone;
        this._async$_onData = t1.registerUnaryCallback$1(handleData);
        this._onError = P._registerErrorHandler(onError == null ? P.async___nullErrorHandler$closure() : onError, t1);
        this._onDone = t1.registerCallback$1(onDone == null ? P.async___nullDoneHandler$closure() : onDone);
      },
      $is_EventSink: 1,
      $isStreamSubscription: 1,
      static: {_BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
          var t1 = $.Zone__current;
          t1 = H.setRuntimeTypeInfo(new P._BufferingStreamSubscription(null, null, null, t1, cancelOnError ? 1 : 0, null, null), [$T]);
          t1._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          return t1;
        }}
    },
    _BufferingStreamSubscription__sendError_sendError: {
      "^": "Closure:2;_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        var t1, t2, t3, t4, t5, t6;
        t1 = this._captured_this_0;
        t2 = t1._state;
        if ((t2 & 8) !== 0 && (t2 & 16) === 0)
          return;
        t1._state = (t2 | 32) >>> 0;
        t2 = t1._onError;
        t3 = H.getDynamicRuntimeType();
        t3 = H.buildFunctionType(t3, [t3, t3])._isTest$1(t2);
        t4 = t1._zone;
        t5 = this._captured_error_1;
        t6 = t1._onError;
        if (t3)
          t4.runBinaryGuarded$3(t6, t5, this._captured_stackTrace_2);
        else
          t4.runUnaryGuarded$2(t6, t5);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _BufferingStreamSubscription__sendDone_sendDone: {
      "^": "Closure:2;_captured_this_0",
      call$0: [function() {
        var t1, t2;
        t1 = this._captured_this_0;
        t2 = t1._state;
        if ((t2 & 16) === 0)
          return;
        t1._state = (t2 | 42) >>> 0;
        t1._zone.runGuarded$1(t1._onDone);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImpl: {
      "^": "Stream;",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, H.getTypeArgumentByIndex(this, 0));
      }
    },
    _DelayedEvent: {
      "^": "Object;next*"
    },
    _DelayedData: {
      "^": "_DelayedEvent;value>,next",
      perform$1: function(dispatch) {
        dispatch._sendData$1(this.value);
      }
    },
    _DelayedError: {
      "^": "_DelayedEvent;error>,stackTrace<,next",
      perform$1: function(dispatch) {
        dispatch._sendError$2(this.error, this.stackTrace);
      }
    },
    _DelayedDone: {
      "^": "Object;",
      perform$1: function(dispatch) {
        dispatch._sendDone$0();
      },
      get$next: function(_) {
        return;
      },
      set$next: function(_, _0) {
        throw H.wrapException(new P.StateError("No events after a done."));
      }
    },
    _PendingEvents: {
      "^": "Object;",
      schedule$1: function(dispatch) {
        var t1 = this._state;
        if (t1 === 1)
          return;
        if (t1 >= 1) {
          this._state = 1;
          return;
        }
        P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
        this._state = 1;
      },
      cancelSchedule$0: function() {
        if (this._state === 1)
          this._state = 3;
      }
    },
    _PendingEvents_schedule_closure: {
      "^": "Closure:0;_captured_this_0,_captured_dispatch_1",
      call$0: [function() {
        var t1, oldState;
        t1 = this._captured_this_0;
        oldState = t1._state;
        t1._state = 0;
        if (oldState === 3)
          return;
        t1.handleNext$1(this._captured_dispatch_1);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImplEvents: {
      "^": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
      get$isEmpty: function(_) {
        return this.lastPendingEvent == null;
      },
      add$1: function(_, $event) {
        var t1 = this.lastPendingEvent;
        if (t1 == null) {
          this.lastPendingEvent = $event;
          this.firstPendingEvent = $event;
        } else {
          J.set$next$x(t1, $event);
          this.lastPendingEvent = $event;
        }
      },
      handleNext$1: function(dispatch) {
        var $event, t1;
        $event = this.firstPendingEvent;
        t1 = J.get$next$x($event);
        this.firstPendingEvent = t1;
        if (t1 == null)
          this.lastPendingEvent = null;
        $event.perform$1(dispatch);
      }
    },
    _DoneStreamSubscription: {
      "^": "Object;_zone<,_state,_onDone",
      get$isPaused: function() {
        return this._state >= 4;
      },
      _schedule$0: function() {
        if ((this._state & 2) !== 0)
          return;
        this._zone.scheduleMicrotask$1(this.get$_sendDone());
        this._state = (this._state | 2) >>> 0;
      },
      pause$1: function(_, resumeSignal) {
        this._state += 4;
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if (t1 >= 4) {
          t1 -= 4;
          this._state = t1;
          if (t1 < 4 && (t1 & 1) === 0)
            this._schedule$0();
        }
      },
      cancel$0: function(_) {
        return;
      },
      _sendDone$0: [function() {
        var t1 = (this._state & 4294967293) >>> 0;
        this._state = t1;
        if (t1 >= 4)
          return;
        this._state = (t1 | 1) >>> 0;
        t1 = this._onDone;
        if (t1 != null)
          this._zone.runGuarded$1(t1);
      }, "call$0", "get$_sendDone", 0, 0, 2]
    },
    _AsBroadcastStream: {
      "^": "Stream;_async$_source,_onListenHandler,_onCancelHandler,_zone<,_async$_controller,_subscription",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3;
        t1 = this._async$_controller;
        if (t1 == null || (t1._state & 4) !== 0) {
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          t1._schedule$0();
          return t1;
        }
        if (this._subscription == null) {
          t1 = t1.get$add(t1);
          t2 = this._async$_controller.get$addError();
          t3 = this._async$_controller;
          this._subscription = this._async$_source.listen$3$onDone$onError(t1, t3.get$close(t3), t2);
        }
        return this._async$_controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _onCancel$0: [function() {
        var t1, shutdown, t2;
        t1 = this._async$_controller;
        shutdown = t1 == null || (t1._state & 4) !== 0;
        t1 = this._onCancelHandler;
        if (t1 != null) {
          t2 = new P._BroadcastSubscriptionWrapper(this);
          t2.$builtinTypeInfo = this.$builtinTypeInfo;
          this._zone.runUnary$2(t1, t2);
        }
        if (shutdown) {
          t1 = this._subscription;
          if (t1 != null) {
            t1.cancel$0(0);
            this._subscription = null;
          }
        }
      }, "call$0", "get$_onCancel", 0, 0, 2],
      _onListen$0: [function() {
        var t1, t2;
        t1 = this._onListenHandler;
        if (t1 != null) {
          t2 = new P._BroadcastSubscriptionWrapper(this);
          t2.$builtinTypeInfo = this.$builtinTypeInfo;
          this._zone.runUnary$2(t1, t2);
        }
      }, "call$0", "get$_onListen", 0, 0, 2],
      _cancelSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        this._subscription = null;
        this._async$_controller = null;
        t1.cancel$0(0);
      },
      _pauseSubscription$1: function(resumeSignal) {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$1(0, resumeSignal);
      },
      _resumeSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      },
      get$_isSubscriptionPaused: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return false;
        return t1.get$isPaused();
      },
      _AsBroadcastStream$3: function(_source, onListenHandler, onCancelHandler, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStreamController(null, this.get$_onListen(), this.get$_onCancel(), 0, null, null, null, null), [$T]);
        t1._async$_previous = t1;
        t1._async$_next = t1;
        this._async$_controller = t1;
      },
      static: {_AsBroadcastStream$: function(_source, onListenHandler, onCancelHandler, $T) {
          var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStream(_source, $.Zone__current.registerUnaryCallback$1(onListenHandler), $.Zone__current.registerUnaryCallback$1(onCancelHandler), $.Zone__current, null, null), [$T]);
          t1._AsBroadcastStream$3(_source, onListenHandler, onCancelHandler, $T);
          return t1;
        }}
    },
    _BroadcastSubscriptionWrapper: {
      "^": "Object;_async$_stream",
      pause$1: function(_, resumeSignal) {
        this._async$_stream._pauseSubscription$1(resumeSignal);
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        this._async$_stream._resumeSubscription$0();
      },
      cancel$0: function(_) {
        this._async$_stream._cancelSubscription$0();
        return;
      },
      get$isPaused: function() {
        return this._async$_stream.get$_isSubscriptionPaused();
      }
    },
    _StreamIteratorImpl: {
      "^": "Object;_subscription,_async$_current,_futureOrPrefetch,_state",
      get$current: function() {
        return this._async$_current;
      },
      moveNext$0: function() {
        var t1, prefetch, t2, t3;
        t1 = this._state;
        if (t1 === 1) {
          t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
          t1._asyncComplete$1(false);
          return t1;
        }
        if (t1 === 2)
          throw H.wrapException(new P.StateError("Already waiting for next."));
        if (t1 === 0) {
          this._state = 2;
          this._async$_current = null;
          t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
          this._futureOrPrefetch = t1;
          return t1;
        } else
          switch (t1) {
            case 3:
              this._state = 0;
              this._async$_current = this._futureOrPrefetch;
              this._futureOrPrefetch = null;
              J.resume$0$x(this._subscription);
              t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
              t1._asyncComplete$1(true);
              return t1;
            case 4:
              prefetch = this._futureOrPrefetch;
              this._clear$0(0);
              t1 = J.get$error$x(prefetch);
              t2 = prefetch.get$stackTrace();
              t3 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
              t3._asyncCompleteError$2(t1, t2);
              return t3;
            case 5:
              this._clear$0(0);
              t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.bool]);
              t1._asyncComplete$1(false);
              return t1;
          }
      },
      _clear$0: function(_) {
        this._subscription = null;
        this._futureOrPrefetch = null;
        this._async$_current = null;
        this._state = 1;
      },
      cancel$0: function(_) {
        var subscription, hasNext;
        subscription = this._subscription;
        if (subscription == null)
          return;
        if (this._state === 2) {
          hasNext = this._futureOrPrefetch;
          this._clear$0(0);
          hasNext._complete$1(false);
        } else
          this._clear$0(0);
        return J.cancel$0$x(subscription);
      },
      _async$_onData$1: [function(data) {
        var hasNext;
        if (this._state === 2) {
          this._async$_current = data;
          hasNext = this._futureOrPrefetch;
          this._futureOrPrefetch = null;
          this._state = 0;
          hasNext._complete$1(true);
          return;
        }
        J.pause$0$x(this._subscription);
        this._futureOrPrefetch = data;
        this._state = 3;
      }, "call$1", "get$_async$_onData", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, v: true, args: [T]};
        }, this.$receiver, "_StreamIteratorImpl");
      }, 8],
      _onError$2: [function(error, stackTrace) {
        var hasNext;
        if (this._state === 2) {
          hasNext = this._futureOrPrefetch;
          this._clear$0(0);
          hasNext._completeError$2(error, stackTrace);
          return;
        }
        J.pause$0$x(this._subscription);
        this._futureOrPrefetch = new P.AsyncError(error, stackTrace);
        this._state = 4;
      }, function(error) {
        return this._onError$2(error, null);
      }, "_onError$1", "call$2", "call$1", "get$_onError", 2, 2, 10, 0, 3, 4],
      _onDone$0: [function() {
        if (this._state === 2) {
          var hasNext = this._futureOrPrefetch;
          this._clear$0(0);
          hasNext._complete$1(false);
          return;
        }
        J.pause$0$x(this._subscription);
        this._futureOrPrefetch = null;
        this._state = 5;
      }, "call$0", "get$_onDone", 0, 0, 2]
    },
    _cancelAndError_closure: {
      "^": "Closure:0;_captured_future_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        return this._captured_future_0._completeError$2(this._captured_error_1, this._captured_stackTrace_2);
      }, null, null, 0, 0, null, "call"]
    },
    _cancelAndErrorClosure_closure: {
      "^": "Closure:9;_captured_subscription_0,_captured_future_1",
      call$2: function(error, stackTrace) {
        return P._cancelAndError(this._captured_subscription_0, this._captured_future_1, error, stackTrace);
      }
    },
    _cancelAndValue_closure: {
      "^": "Closure:0;_captured_future_0,_captured_value_1",
      call$0: [function() {
        return this._captured_future_0._complete$1(this._captured_value_1);
      }, null, null, 0, 0, null, "call"]
    },
    _ForwardingStream: {
      "^": "Stream;",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return P._ForwardingStreamSubscription$(this, onData, onError, onDone, cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), H.getRuntimeTypeArgument(this, "_ForwardingStream", 1));
      },
      _handleData$2: function(data, sink) {
        sink._async$_add$1(0, data);
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    _ForwardingStreamSubscription: {
      "^": "_BufferingStreamSubscription;_async$_stream,_subscription,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      _async$_add$1: function(_, data) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_add(this, data);
      },
      _addError$2: function(error, stackTrace) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      }, "call$0", "get$_onResume", 0, 0, 2],
      _onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this._subscription = null;
          return t1.cancel$0(0);
        }
        return;
      },
      _handleData$1: [function(data) {
        this._async$_stream._handleData$2(data, this);
      }, "call$1", "get$_handleData", 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: 1, v: true, args: [S]};
        }, this.$receiver, "_ForwardingStreamSubscription");
      }, 8],
      _handleError$2: [function(error, stackTrace) {
        this._addError$2(error, stackTrace);
      }, "call$2", "get$_handleError", 4, 0, 47, 3, 4],
      _handleDone$0: [function() {
        this._close$0();
      }, "call$0", "get$_handleDone", 0, 0, 2],
      _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
        var t1, t2;
        t1 = this.get$_handleData();
        t2 = this.get$_handleError();
        this._subscription = this._async$_stream._async$_source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      },
      static: {_ForwardingStreamSubscription$: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
          var t1 = $.Zone__current;
          t1 = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(_stream, null, null, null, null, t1, cancelOnError ? 1 : 0, null, null), [$S, $T]);
          t1._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
          return t1;
        }}
    },
    _WhereStream: {
      "^": "_ForwardingStream;_test,_async$_source",
      _handleData$2: function(inputEvent, sink) {
        var satisfies, e, s, exception, t1;
        satisfies = null;
        try {
          satisfies = this._test$1(inputEvent);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._addErrorWithReplacement(sink, e, s);
          return;
        }
        if (satisfies === true)
          J._async$_add$1$x(sink, inputEvent);
      },
      _test$1: function(arg0) {
        return this._test.call$1(arg0);
      },
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      },
      $asStream: null
    },
    _MapStream: {
      "^": "_ForwardingStream;_transform,_async$_source",
      _handleData$2: function(inputEvent, sink) {
        var outputEvent, e, s, exception, t1;
        outputEvent = null;
        try {
          outputEvent = this._transform$1(inputEvent);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._addErrorWithReplacement(sink, e, s);
          return;
        }
        J._async$_add$1$x(sink, outputEvent);
      },
      _transform$1: function(arg0) {
        return this._transform.call$1(arg0);
      }
    },
    AsyncError: {
      "^": "Object;error>,stackTrace<",
      toString$0: function(_) {
        return H.S(this.error);
      },
      $isError: 1
    },
    _ZoneFunction: {
      "^": "Object;zone<,$function"
    },
    ZoneDelegate: {
      "^": "Object;"
    },
    Zone: {
      "^": "Object;"
    },
    _Zone: {
      "^": "Object;",
      inSameErrorZone$1: function(otherZone) {
        return this === otherZone || this.get$errorZone() === otherZone.get$errorZone();
      }
    },
    _rootHandleUncaughtError_closure: {
      "^": "Closure:0;_async$_box_0,_captured_stackTrace_1",
      call$0: function() {
        var t1, t2, error;
        t1 = this._async$_box_0;
        t2 = t1._captured_error_0;
        if (t2 == null) {
          error = new P.NullThrownError();
          t1._captured_error_0 = error;
          t1 = error;
        } else
          t1 = t2;
        t2 = this._captured_stackTrace_1;
        if (t2 == null)
          throw H.wrapException(t1);
        error = H.wrapException(t1);
        error.stack = J.toString$0$(t2);
        throw error;
      }
    },
    _RootZone: {
      "^": "_Zone;",
      get$_scheduleMicrotask: function() {
        return C._ZoneFunction__RootZone__rootScheduleMicrotask;
      },
      get$errorZone: function() {
        return this;
      },
      runGuarded$1: function(f) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$0();
            return t1;
          }
          t1 = P._rootRun(null, null, this, f);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      runUnaryGuarded$2: function(f, arg) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$1(arg);
            return t1;
          }
          t1 = P._rootRunUnary(null, null, this, f, arg);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      runBinaryGuarded$3: function(f, arg1, arg2) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$2(arg1, arg2);
            return t1;
          }
          t1 = P._rootRunBinary(null, null, this, f, arg1, arg2);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      bindCallback$2$runGuarded: function(f, runGuarded) {
        if (runGuarded)
          return new P._RootZone_bindCallback_closure(this, f);
        else
          return new P._RootZone_bindCallback_closure0(this, f);
      },
      bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
        return new P._RootZone_bindUnaryCallback_closure(this, f);
      },
      $index: function(_, key) {
        return;
      },
      handleUncaughtError$2: function(error, stackTrace) {
        return P._rootHandleUncaughtError(null, null, this, error, stackTrace);
      },
      run$1: function(f) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$0();
        return P._rootRun(null, null, this, f);
      },
      runUnary$2: function(f, arg) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$1(arg);
        return P._rootRunUnary(null, null, this, f, arg);
      },
      runBinary$3: function(f, arg1, arg2) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$2(arg1, arg2);
        return P._rootRunBinary(null, null, this, f, arg1, arg2);
      },
      registerCallback$1: function(f) {
        return f;
      },
      registerUnaryCallback$1: function(f) {
        return f;
      },
      registerBinaryCallback$1: function(f) {
        return f;
      },
      errorCallback$2: function(error, stackTrace) {
        return;
      },
      scheduleMicrotask$1: function(f) {
        P._rootScheduleMicrotask(null, null, this, f);
      },
      createTimer$2: function(duration, f) {
        return P.Timer__createTimer(duration, f);
      }
    },
    _RootZone_bindCallback_closure: {
      "^": "Closure:0;_captured_this_0,_captured_f_1",
      call$0: [function() {
        return this._captured_this_0.runGuarded$1(this._captured_f_1);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindCallback_closure0: {
      "^": "Closure:0;_captured_this_2,_captured_f_3",
      call$0: [function() {
        return this._captured_this_2.run$1(this._captured_f_3);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindUnaryCallback_closure: {
      "^": "Closure:1;_captured_this_0,_captured_f_1",
      call$1: [function(arg) {
        return this._captured_this_0.runUnaryGuarded$2(this._captured_f_1, arg);
      }, null, null, 2, 0, null, 49, "call"]
    }
  }], ["dart.collection", "dart:collection",, P, {
    "^": "",
    _HashMap__getTableEntry: function(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry: function(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable: function() {
      var table = Object.create(null);
      P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap__makeEmpty: function() {
      return H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [null, null]);
    },
    LinkedHashMap__makeLiteral: function(keyValuePairs) {
      return H.fillLiteralMap(keyValuePairs, H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [null, null]));
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = [];
      t1 = $.$get$_toStringVisiting();
      t1.push(iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1, t2;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      t1 = $.$get$_toStringVisiting();
      t1.push(iterable);
      try {
        t2 = buffer;
        t2.set$_contents(P.StringBuffer__writeAll(t2.get$_contents(), iterable, ", "));
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = buffer;
      t1.set$_contents(t1.get$_contents() + rightDelimiter);
      t1 = buffer.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var i, t1;
      for (i = 0; t1 = $.$get$_toStringVisiting(), i < t1.length; ++i)
        if (o === t1[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
      it = iterable.get$iterator(iterable);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (it.moveNext$0() !== true)
          return;
        next = H.S(it.get$current());
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (it.moveNext$0() !== true) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (it.moveNext$0() !== true) {
          if (count <= 4) {
            parts.push(H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0() === true; penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
      return H.setRuntimeTypeInfo(new H.JsLinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result));
      return result;
    },
    LinkedHashMap_LinkedHashMap$fromIterable: function(iterable, key, value, $K, $V) {
      var map = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      P.Maps__fillMapWithMappedIterable(map, iterable, key, value);
      return map;
    },
    LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
      return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
    },
    Maps_mapToString: function(m) {
      var t1, result, t2;
      t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        $.$get$_toStringVisiting().push(m);
        t2 = result;
        t2.set$_contents(t2.get$_contents() + "{");
        t1._captured_first_0 = true;
        J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
        t1 = result;
        t1.set$_contents(t1.get$_contents() + "}");
      } finally {
        t1 = $.$get$_toStringVisiting();
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = result.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Maps__id: [function(x) {
      return x;
    }, "call$1", "collection_Maps__id$closure", 2, 0, 1],
    Maps__fillMapWithMappedIterable: function(map, iterable, key, value) {
      var t1, _i, element;
      key = P.collection_Maps__id$closure();
      for (t1 = iterable.length, _i = 0; _i < iterable.length; iterable.length === t1 || (0, H.throwConcurrentModificationError)(iterable), ++_i) {
        element = iterable[_i];
        map.$indexSet(0, key.call$1(element), value.call$1(element));
      }
    },
    _HashMap: {
      "^": "Object;",
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      get$keys: function(_) {
        return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          return strings == null ? false : strings[key] != null;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          return nums == null ? false : nums[key] != null;
        } else
          return this._containsKey$1(key);
      },
      _containsKey$1: function(key) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      },
      $index: function(_, key) {
        var strings, t1, entry, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            t1 = null;
          else {
            entry = strings[key];
            t1 = entry === strings ? null : entry;
          }
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null)
            t1 = null;
          else {
            entry = nums[key];
            t1 = entry === nums ? null : entry;
          }
          return t1;
        } else
          return this._get$1(0, key);
      },
      _get$1: function(_, key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      },
      $indexSet: function(_, key, value) {
        var strings, nums, rest, hash, bucket, index;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._HashMap__newHashTable();
            this._collection$_strings = strings;
          }
          this._collection$_addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._HashMap__newHashTable();
            this._collection$_nums = nums;
          }
          this._collection$_addHashTableEntry$3(nums, key, value);
        } else {
          rest = this._collection$_rest;
          if (rest == null) {
            rest = P._HashMap__newHashTable();
            this._collection$_rest = rest;
          }
          hash = this._computeHashCode$1(key);
          bucket = rest[hash];
          if (bucket == null) {
            P._HashMap__setTableEntry(rest, hash, [key, value]);
            ++this._collection$_length;
            this._keys = null;
          } else {
            index = this._findBucketIndex$2(bucket, key);
            if (index >= 0)
              bucket[index + 1] = value;
            else {
              bucket.push(key, value);
              ++this._collection$_length;
              this._keys = null;
            }
          }
        }
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        var value;
        if (this.containsKey$1(0, key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (key !== "__proto__")
          return this._removeHashTableEntry$2(this._collection$_strings, key);
        else
          return this._remove$1(0, key);
      },
      _remove$1: function(_, key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        --this._collection$_length;
        this._keys = null;
        return bucket.splice(index, 2)[1];
      },
      forEach$1: function(_, action) {
        var keys, $length, i, key;
        keys = this._collection$_computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          key = keys[i];
          action.call$2(key, this.$index(0, key));
          if (keys !== this._keys)
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      _collection$_computeKeys$0: function() {
        var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
        t1 = this._keys;
        if (t1 != null)
          return t1;
        result = new Array(this._collection$_length);
        result.fixed$length = Array;
        strings = this._collection$_strings;
        if (strings != null) {
          names = Object.getOwnPropertyNames(strings);
          entries = names.length;
          for (index = 0, i = 0; i < entries; ++i) {
            result[index] = names[i];
            ++index;
          }
        } else
          index = 0;
        nums = this._collection$_nums;
        if (nums != null) {
          names = Object.getOwnPropertyNames(nums);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            result[index] = +names[i];
            ++index;
          }
        }
        rest = this._collection$_rest;
        if (rest != null) {
          names = Object.getOwnPropertyNames(rest);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            bucket = rest[names[i]];
            $length = bucket.length;
            for (i0 = 0; i0 < $length; i0 += 2) {
              result[index] = bucket[i0];
              ++index;
            }
          }
        }
        this._keys = result;
        return result;
      },
      _collection$_addHashTableEntry$3: function(table, key, value) {
        if (table[key] == null) {
          ++this._collection$_length;
          this._keys = null;
        }
        P._HashMap__setTableEntry(table, key, value);
      },
      _removeHashTableEntry$2: function(table, key) {
        var value;
        if (table != null && table[key] != null) {
          value = P._HashMap__getTableEntry(table, key);
          delete table[key];
          --this._collection$_length;
          this._keys = null;
          return value;
        } else
          return;
      },
      _computeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2)
          if (J.$eq$(bucket[i], key))
            return i;
        return -1;
      },
      $isMap: 1,
      $asMap: null
    },
    _IdentityHashMap: {
      "^": "_HashMap;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_keys",
      _computeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2) {
          t1 = bucket[i];
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      }
    },
    HashMapKeyIterable: {
      "^": "Iterable;_map",
      get$length: function(_) {
        return this._map._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._map._collection$_length === 0;
      },
      get$iterator: function(_) {
        var t1 = this._map;
        t1 = new P.HashMapKeyIterator(t1, t1._collection$_computeKeys$0(), 0, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      contains$1: function(_, element) {
        return this._map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, keys, $length, i;
        t1 = this._map;
        keys = t1._collection$_computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          f.call$1(keys[i]);
          if (keys !== t1._keys)
            throw H.wrapException(new P.ConcurrentModificationError(t1));
        }
      },
      $isEfficientLength: 1
    },
    HashMapKeyIterator: {
      "^": "Object;_map,_keys,_offset,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var keys, offset, t1;
        keys = this._keys;
        offset = this._offset;
        t1 = this._map;
        if (keys !== t1._keys)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else if (offset >= keys.length) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = keys[offset];
          this._offset = offset + 1;
          return true;
        }
      }
    },
    _LinkedIdentityHashMap: {
      "^": "JsLinkedHashMap;__js_helper$_length,_strings,_nums,_rest,_first,_last,_modifications",
      internalComputeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i].get$hashMapCellKey();
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      },
      static: {_LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
          return H.setRuntimeTypeInfo(new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0), [$K, $V]);
        }}
    },
    _LinkedHashSet: {
      "^": "_HashSetBase;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_collection$_first,_collection$_last,_collection$_modifications",
      get$iterator: function(_) {
        var t1 = H.setRuntimeTypeInfo(new P.LinkedHashSetIterator(this, this._collection$_modifications, null, null), [null]);
        t1._collection$_cell = t1._set._collection$_first;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      contains$1: function(_, object) {
        var strings, nums;
        if (typeof object === "string" && object !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            return false;
          return strings[object] != null;
        } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
          nums = this._collection$_nums;
          if (nums == null)
            return false;
          return nums[object] != null;
        } else
          return this._contains$1(object);
      },
      _contains$1: function(object) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      },
      lookup$1: function(object) {
        var t1;
        if (!(typeof object === "string" && object !== "__proto__"))
          t1 = typeof object === "number" && (object & 0x3ffffff) === object;
        else
          t1 = true;
        if (t1)
          return this.contains$1(0, object) ? object : null;
        else
          return this._lookup$1(object);
      },
      _lookup$1: function(object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_collection$_element();
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        cell = this._collection$_first;
        modifications = this._collection$_modifications;
        for (; cell != null;) {
          action.call$1(cell.get$_collection$_element());
          if (modifications !== this._collection$_modifications)
            throw H.wrapException(new P.ConcurrentModificationError(this));
          cell = cell.get$_collection$_next();
        }
      },
      get$last: function(_) {
        var t1 = this._collection$_last;
        if (t1 == null)
          throw H.wrapException(new P.StateError("No elements"));
        return t1.get$_collection$_element();
      },
      add$1: function(_, element) {
        var strings, table, nums;
        if (typeof element === "string" && element !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_strings = table;
            strings = table;
          }
          return this._collection$_addHashTableEntry$2(strings, element);
        } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
          nums = this._collection$_nums;
          if (nums == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_nums = table;
            nums = table;
          }
          return this._collection$_addHashTableEntry$2(nums, element);
        } else
          return this._add$1(0, element);
      },
      _add$1: function(_, element) {
        var rest, hash, bucket;
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._collection$_newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._collection$_newLinkedCell$1(element));
        }
        return true;
      },
      remove$1: function(_, object) {
        if (typeof object === "string" && object !== "__proto__")
          return this._removeHashTableEntry$2(this._collection$_strings, object);
        else if (typeof object === "number" && (object & 0x3ffffff) === object)
          return this._removeHashTableEntry$2(this._collection$_nums, object);
        else
          return this._remove$1(0, object);
      },
      _remove$1: function(_, object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._collection$_unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      },
      clear$0: function(_) {
        if (this._collection$_length > 0) {
          this._collection$_last = null;
          this._collection$_first = null;
          this._collection$_rest = null;
          this._collection$_nums = null;
          this._collection$_strings = null;
          this._collection$_length = 0;
          this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
        }
      },
      _collection$_addHashTableEntry$2: function(table, element) {
        if (table[element] != null)
          return false;
        table[element] = this._collection$_newLinkedCell$1(element);
        return true;
      },
      _removeHashTableEntry$2: function(table, element) {
        var cell;
        if (table == null)
          return false;
        cell = table[element];
        if (cell == null)
          return false;
        this._collection$_unlinkCell$1(cell);
        delete table[element];
        return true;
      },
      _collection$_newLinkedCell$1: function(element) {
        var cell, last;
        cell = new P.LinkedHashSetCell(element, null, null);
        if (this._collection$_first == null) {
          this._collection$_last = cell;
          this._collection$_first = cell;
        } else {
          last = this._collection$_last;
          cell._collection$_previous = last;
          last.set$_collection$_next(cell);
          this._collection$_last = cell;
        }
        ++this._collection$_length;
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
        return cell;
      },
      _collection$_unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell.get$_collection$_previous();
        next = cell.get$_collection$_next();
        if (previous == null)
          this._collection$_first = next;
        else
          previous.set$_collection$_next(next);
        if (next == null)
          this._collection$_last = previous;
        else
          next.set$_collection$_previous(previous);
        --this._collection$_length;
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
      },
      _computeHashCode$1: function(element) {
        return J.get$hashCode$(element) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i].get$_collection$_element(), element))
            return i;
        return -1;
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null,
      static: {_LinkedHashSet__newHashTable: function() {
          var table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          return table;
        }}
    },
    LinkedHashSetCell: {
      "^": "Object;_collection$_element<,_collection$_next@,_collection$_previous@"
    },
    LinkedHashSetIterator: {
      "^": "Object;_set,_collection$_modifications,_collection$_cell,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1 = this._set;
        if (this._collection$_modifications !== t1._collection$_modifications)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else {
          t1 = this._collection$_cell;
          if (t1 == null) {
            this._collection$_current = null;
            return false;
          } else {
            this._collection$_current = t1.get$_collection$_element();
            this._collection$_cell = this._collection$_cell.get$_collection$_next();
            return true;
          }
        }
      }
    },
    _HashSetBase: {
      "^": "SetBase;"
    },
    LinkedHashMap_LinkedHashMap$from_closure: {
      "^": "Closure:3;_captured_result_0",
      call$2: [function(k, v) {
        this._captured_result_0.$indexSet(0, k, v);
      }, null, null, 4, 0, null, 53, 55, "call"]
    },
    ListMixin: {
      "^": "Object;",
      get$iterator: function(receiver) {
        return H.setRuntimeTypeInfo(new H.ListIterator(receiver, this.get$length(receiver), 0, null), [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      forEach$1: function(receiver, action) {
        var $length, i;
        $length = this.get$length(receiver);
        for (i = 0; i < $length; ++i) {
          action.call$1(this.$index(receiver, i));
          if ($length !== this.get$length(receiver))
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
      },
      get$isEmpty: function(receiver) {
        return this.get$length(receiver) === 0;
      },
      get$isNotEmpty: function(receiver) {
        return this.get$length(receiver) !== 0;
      },
      get$last: function(receiver) {
        if (this.get$length(receiver) === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        return this.$index(receiver, this.get$length(receiver) - 1);
      },
      contains$1: function(receiver, element) {
        var $length, i;
        $length = this.get$length(receiver);
        for (i = 0; i < this.get$length(receiver); ++i) {
          if (J.$eq$(this.$index(receiver, i), element))
            return true;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
        return false;
      },
      where$1: function(receiver, test) {
        return H.setRuntimeTypeInfo(new H.WhereIterable(receiver, test), [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      },
      map$1: function(receiver, f) {
        return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
      },
      toList$1$growable: function(receiver, growable) {
        var result, t1, i;
        if (growable) {
          result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
          C.JSArray_methods.set$length(result, this.get$length(receiver));
        } else {
          t1 = new Array(this.get$length(receiver));
          t1.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
        }
        for (i = 0; i < this.get$length(receiver); ++i) {
          t1 = this.$index(receiver, i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(receiver, element) {
        var t1 = this.get$length(receiver);
        this.set$length(receiver, t1 + 1);
        this.$indexSet(receiver, t1, element);
      },
      remove$1: function(receiver, element) {
        var i;
        for (i = 0; i < this.get$length(receiver); ++i)
          if (J.$eq$(this.$index(receiver, i), element)) {
            this.setRange$4(receiver, i, this.get$length(receiver) - 1, receiver, i + 1);
            this.set$length(receiver, this.get$length(receiver) - 1);
            return true;
          }
        return false;
      },
      sort$1: function(receiver, compare) {
        H.Sort__doSort(receiver, 0, this.get$length(receiver) - 1, compare);
      },
      sublist$2: function(receiver, start, end) {
        var listLength, $length, result, i, t1;
        listLength = this.get$length(receiver);
        P.RangeError_checkValidRange(start, listLength, listLength, null, null, null);
        $length = listLength - start;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, $length);
        for (i = 0; i < $length; ++i) {
          t1 = this.$index(receiver, start + i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
        }
        return result;
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      setRange$4: ["super$ListMixin$setRange", function(receiver, start, end, iterable, skipCount) {
        var $length, t1, i;
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        $length = end - start;
        if ($length === 0)
          return;
        t1 = J.getInterceptor$asx(iterable);
        if (skipCount + $length > t1.get$length(iterable))
          throw H.wrapException(H.IterableElementError_tooFew());
        if (skipCount < start)
          for (i = $length - 1; i >= 0; --i)
            this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
        else
          for (i = 0; i < $length; ++i)
            this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
      }],
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    _UnmodifiableMapMixin: {
      "^": "Object;",
      $indexSet: function(_, key, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      remove$1: function(_, key) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      $isMap: 1,
      $asMap: null
    },
    MapView: {
      "^": "Object;",
      $index: function(_, key) {
        return this._map.$index(0, key);
      },
      $indexSet: function(_, key, value) {
        this._map.$indexSet(0, key, value);
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        return this._map.putIfAbsent$2(0, key, ifAbsent);
      },
      containsKey$1: function(_, key) {
        return this._map.containsKey$1(0, key);
      },
      forEach$1: function(_, action) {
        this._map.forEach$1(0, action);
      },
      get$isEmpty: function(_) {
        var t1 = this._map;
        return t1.get$isEmpty(t1);
      },
      get$isNotEmpty: function(_) {
        var t1 = this._map;
        return t1.get$isNotEmpty(t1);
      },
      get$length: function(_) {
        var t1 = this._map;
        return t1.get$length(t1);
      },
      get$keys: function(_) {
        var t1 = this._map;
        return t1.get$keys(t1);
      },
      remove$1: function(_, key) {
        return this._map.remove$1(0, key);
      },
      toString$0: function(_) {
        return this._map.toString$0(0);
      },
      $isMap: 1,
      $asMap: null
    },
    UnmodifiableMapView: {
      "^": "MapView+_UnmodifiableMapMixin;",
      $isMap: 1,
      $asMap: null
    },
    Maps_mapToString_closure: {
      "^": "Closure:3;_box_0,_captured_result_1",
      call$2: function(k, v) {
        var t1, t2;
        t1 = this._box_0;
        if (!t1._captured_first_0)
          this._captured_result_1._contents += ", ";
        t1._captured_first_0 = false;
        t1 = this._captured_result_1;
        t2 = t1._contents += H.S(k);
        t1._contents = t2 + ": ";
        t1._contents += H.S(v);
      }
    },
    ListQueue: {
      "^": "Iterable;_table,_head,_tail,_modificationCount",
      get$iterator: function(_) {
        var t1 = new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      forEach$1: function(_, action) {
        var modificationCount, i, t1;
        modificationCount = this._modificationCount;
        for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
          t1 = this._table;
          if (i < 0 || i >= t1.length)
            return H.ioore(t1, i);
          action.call$1(t1[i]);
          if (modificationCount !== this._modificationCount)
            H.throwExpression(new P.ConcurrentModificationError(this));
        }
      },
      get$isEmpty: function(_) {
        return this._head === this._tail;
      },
      get$length: function(_) {
        return (this._tail - this._head & this._table.length - 1) >>> 0;
      },
      get$last: function(_) {
        var t1, t2, t3;
        t1 = this._head;
        t2 = this._tail;
        if (t1 === t2)
          throw H.wrapException(H.IterableElementError_noElement());
        t1 = this._table;
        t3 = t1.length;
        t2 = (t2 - 1 & t3 - 1) >>> 0;
        if (t2 < 0 || t2 >= t3)
          return H.ioore(t1, t2);
        return t1[t2];
      },
      toList$1$growable: function(_, growable) {
        var list, t1;
        if (growable) {
          list = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
          C.JSArray_methods.set$length(list, this.get$length(this));
        } else {
          t1 = new Array(this.get$length(this));
          t1.fixed$length = Array;
          list = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
        }
        this._writeToList$1(list);
        return list;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(_, value) {
        this._add$1(0, value);
      },
      remove$1: function(_, value) {
        var i, t1;
        for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
          t1 = this._table;
          if (i < 0 || i >= t1.length)
            return H.ioore(t1, i);
          if (J.$eq$(t1[i], value)) {
            this._remove$1(0, i);
            ++this._modificationCount;
            return true;
          }
        }
        return false;
      },
      clear$0: function(_) {
        var i, t1, t2, t3, t4;
        i = this._head;
        t1 = this._tail;
        if (i !== t1) {
          for (t2 = this._table, t3 = t2.length, t4 = t3 - 1; i !== t1; i = (i + 1 & t4) >>> 0) {
            if (i < 0 || i >= t3)
              return H.ioore(t2, i);
            t2[i] = null;
          }
          this._tail = 0;
          this._head = 0;
          ++this._modificationCount;
        }
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      removeFirst$0: function() {
        var t1, t2, t3, result;
        t1 = this._head;
        if (t1 === this._tail)
          throw H.wrapException(H.IterableElementError_noElement());
        ++this._modificationCount;
        t2 = this._table;
        t3 = t2.length;
        if (t1 >= t3)
          return H.ioore(t2, t1);
        result = t2[t1];
        t2[t1] = null;
        this._head = (t1 + 1 & t3 - 1) >>> 0;
        return result;
      },
      _add$1: function(_, element) {
        var t1, t2, t3;
        t1 = this._table;
        t2 = this._tail;
        t3 = t1.length;
        if (t2 < 0 || t2 >= t3)
          return H.ioore(t1, t2);
        t1[t2] = element;
        t3 = (t2 + 1 & t3 - 1) >>> 0;
        this._tail = t3;
        if (this._head === t3)
          this._grow$0();
        ++this._modificationCount;
      },
      _remove$1: function(_, offset) {
        var t1, t2, mask, t3, t4, i, prevOffset, nextOffset;
        t1 = this._table;
        t2 = t1.length;
        mask = t2 - 1;
        t3 = this._head;
        t4 = this._tail;
        if ((offset - t3 & mask) >>> 0 < (t4 - offset & mask) >>> 0) {
          for (i = offset; i !== t3; i = prevOffset) {
            prevOffset = (i - 1 & mask) >>> 0;
            if (prevOffset < 0 || prevOffset >= t2)
              return H.ioore(t1, prevOffset);
            t4 = t1[prevOffset];
            if (i < 0 || i >= t2)
              return H.ioore(t1, i);
            t1[i] = t4;
          }
          if (t3 >= t2)
            return H.ioore(t1, t3);
          t1[t3] = null;
          this._head = (t3 + 1 & mask) >>> 0;
          return (offset + 1 & mask) >>> 0;
        } else {
          t3 = (t4 - 1 & mask) >>> 0;
          this._tail = t3;
          for (i = offset; i !== t3; i = nextOffset) {
            nextOffset = (i + 1 & mask) >>> 0;
            if (nextOffset < 0 || nextOffset >= t2)
              return H.ioore(t1, nextOffset);
            t4 = t1[nextOffset];
            if (i < 0 || i >= t2)
              return H.ioore(t1, i);
            t1[i] = t4;
          }
          if (t3 < 0 || t3 >= t2)
            return H.ioore(t1, t3);
          t1[t3] = null;
          return offset;
        }
      },
      _grow$0: function() {
        var t1, newTable, t2, split;
        t1 = new Array(this._table.length * 2);
        t1.fixed$length = Array;
        newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
        t1 = this._table;
        t2 = this._head;
        split = t1.length - t2;
        C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        C.JSArray_methods.setRange$4(newTable, split, split + this._head, this._table, 0);
        this._head = 0;
        this._tail = this._table.length;
        this._table = newTable;
      },
      _writeToList$1: function(target) {
        var t1, t2, t3, $length, firstPartSize;
        t1 = this._head;
        t2 = this._tail;
        t3 = this._table;
        if (t1 <= t2) {
          $length = t2 - t1;
          C.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
          return $length;
        } else {
          firstPartSize = t3.length - t1;
          C.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
          C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + this._tail, this._table, 0);
          return this._tail + firstPartSize;
        }
      },
      ListQueue$1: function(initialCapacity, $E) {
        var t1 = new Array(8);
        t1.fixed$length = Array;
        this._table = H.setRuntimeTypeInfo(t1, [$E]);
      },
      $isEfficientLength: 1,
      $asIterable: null,
      static: {ListQueue$: function(initialCapacity, $E) {
          var t1 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [$E]);
          t1.ListQueue$1(initialCapacity, $E);
          return t1;
        }}
    },
    _ListQueueIterator: {
      "^": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1, t2, t3;
        t1 = this._queue;
        if (this._modificationCount !== t1._modificationCount)
          H.throwExpression(new P.ConcurrentModificationError(t1));
        t2 = this._collection$_position;
        if (t2 === this._end) {
          this._collection$_current = null;
          return false;
        }
        t1 = t1._table;
        t3 = t1.length;
        if (t2 >= t3)
          return H.ioore(t1, t2);
        this._collection$_current = t1[t2];
        this._collection$_position = (t2 + 1 & t3 - 1) >>> 0;
        return true;
      }
    },
    SetMixin: {
      "^": "Object;",
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      toList$1$growable: function(_, growable) {
        var result, t1, i, element, i0;
        if (growable) {
          result = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
          C.JSArray_methods.set$length(result, this.get$length(this));
        } else {
          t1 = new Array(this.get$length(this));
          t1.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
        }
        for (t1 = this.get$iterator(this), i = 0; t1.moveNext$0(); i = i0) {
          element = t1._collection$_current;
          i0 = i + 1;
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = element;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      map$1: function(_, f) {
        return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(this, f), [H.getTypeArgumentByIndex(this, 0), null]);
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      where$1: function(_, f) {
        var t1 = new H.WhereIterable(this, f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      forEach$1: function(_, f) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1._collection$_current);
      },
      get$last: function(_) {
        var it, result;
        it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        do
          result = it._collection$_current;
        while (it.moveNext$0());
        return result;
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    SetBase: {
      "^": "SetMixin;"
    }
  }], ["dart.convert", "dart:convert",, P, {
    "^": "",
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null), null);
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    _parseJson: function(source, reviver) {
      var parsed, e, t1, exception;
      t1 = source;
      if (typeof t1 !== "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        throw H.wrapException(new P.FormatException(String(e), null, null));
      }
      return P._convertJsonToDartLazy(parsed);
    },
    _defaultToEncodable: [function(object) {
      return object.toJson$0();
    }, "call$1", "convert___defaultToEncodable$closure", 2, 0, 14, 25],
    _isLeadSurrogate: function(codeUnit) {
      codeUnit.$and(0, 64512);
      return false;
    },
    _combineSurrogatePair: function(lead, tail) {
      return (C.JSInt_methods.$add(65536, lead.$and(0, 1023).$shl(0, 10)) | tail & 1023) >>> 0;
    },
    _JsonMap: {
      "^": "Object;_original,_processed,_data",
      $index: function(_, key) {
        var t1, result;
        t1 = this._processed;
        if (t1 == null)
          return this._data.$index(0, key);
        else if (typeof key !== "string")
          return;
        else {
          result = t1[key];
          return typeof result == "undefined" ? this._process$1(key) : result;
        }
      },
      get$length: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1;
      },
      get$isEmpty: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1 === 0;
      },
      get$isNotEmpty: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1 > 0;
      },
      get$keys: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          return t1.get$keys(t1);
        }
        return new P._JsonMapKeyIterable(this);
      },
      $indexSet: function(_, key, value) {
        var processed, original;
        if (this._processed == null)
          this._data.$indexSet(0, key, value);
        else if (this.containsKey$1(0, key)) {
          processed = this._processed;
          processed[key] = value;
          original = this._original;
          if (original == null ? processed != null : original !== processed)
            original[key] = null;
        } else
          this._upgrade$0().$indexSet(0, key, value);
      },
      containsKey$1: function(_, key) {
        if (this._processed == null)
          return this._data.containsKey$1(0, key);
        if (typeof key !== "string")
          return false;
        return Object.prototype.hasOwnProperty.call(this._original, key);
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        var value;
        if (this.containsKey$1(0, key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (this._processed != null && !this.containsKey$1(0, key))
          return;
        return this._upgrade$0().remove$1(0, key);
      },
      forEach$1: function(_, f) {
        var keys, i, key, value;
        if (this._processed == null)
          return this._data.forEach$1(0, f);
        keys = this._computeKeys$0();
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          value = this._processed[key];
          if (typeof value == "undefined") {
            value = P._convertJsonToDartLazy(this._original[key]);
            this._processed[key] = value;
          }
          f.call$2(key, value);
          if (keys !== this._data)
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      _computeKeys$0: function() {
        var keys = this._data;
        if (keys == null) {
          keys = Object.keys(this._original);
          this._data = keys;
        }
        return keys;
      },
      _upgrade$0: function() {
        var result, keys, i, t1, key;
        if (this._processed == null)
          return this._data;
        result = P.LinkedHashMap__makeEmpty();
        keys = this._computeKeys$0();
        for (i = 0; t1 = keys.length, i < t1; ++i) {
          key = keys[i];
          result.$indexSet(0, key, this.$index(0, key));
        }
        if (t1 === 0)
          keys.push(null);
        else
          C.JSArray_methods.set$length(keys, 0);
        this._processed = null;
        this._original = null;
        this._data = result;
        return result;
      },
      _process$1: function(key) {
        var result;
        if (!Object.prototype.hasOwnProperty.call(this._original, key))
          return;
        result = P._convertJsonToDartLazy(this._original[key]);
        return this._processed[key] = result;
      },
      $isMap: 1,
      $asMap: Isolate.functionThatReturnsNull
    },
    _JsonMapKeyIterable: {
      "^": "ListIterable;_parent",
      get$length: function(_) {
        var t1 = this._parent;
        if (t1._processed == null) {
          t1 = t1._data;
          t1 = t1.get$length(t1);
        } else
          t1 = t1._computeKeys$0().length;
        return t1;
      },
      elementAt$1: function(_, index) {
        var t1 = this._parent;
        if (t1._processed == null)
          t1 = t1.get$keys(t1).elementAt$1(0, index);
        else {
          t1 = t1._computeKeys$0();
          if (index < 0 || index >= t1.length)
            return H.ioore(t1, index);
          t1 = t1[index];
        }
        return t1;
      },
      get$iterator: function(_) {
        var t1 = this._parent;
        if (t1._processed == null) {
          t1 = t1.get$keys(t1);
          t1 = t1.get$iterator(t1);
        } else {
          t1 = t1._computeKeys$0();
          t1 = H.setRuntimeTypeInfo(new J.ArrayIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]);
        }
        return t1;
      },
      contains$1: function(_, key) {
        return this._parent.containsKey$1(0, key);
      },
      $asListIterable: Isolate.functionThatReturnsNull,
      $asIterable: Isolate.functionThatReturnsNull
    },
    Codec: {
      "^": "Object;"
    },
    Converter: {
      "^": "Object;"
    },
    Encoding: {
      "^": "Codec;",
      $asCodec: function() {
        return [P.String, [P.List, P.$int]];
      }
    },
    JsonUnsupportedObjectError: {
      "^": "Error;unsupportedObject,cause",
      toString$0: function(_) {
        if (this.cause != null)
          return "Converting object to an encodable object failed.";
        else
          return "Converting object did not return an encodable object.";
      }
    },
    JsonCyclicError: {
      "^": "JsonUnsupportedObjectError;unsupportedObject,cause",
      toString$0: function(_) {
        return "Cyclic error in JSON stringify";
      }
    },
    JsonCodec: {
      "^": "Codec;_reviver,_toEncodable",
      decode$2$reviver: function(source, reviver) {
        return P._parseJson(source, this.get$decoder()._reviver);
      },
      decode$1: function(source) {
        return this.decode$2$reviver(source, null);
      },
      encode$2$toEncodable: function(value, toEncodable) {
        var t1 = this.get$encoder();
        return P._JsonStringStringifier_stringify(value, t1._toEncodable, t1.indent);
      },
      encode$1: function(value) {
        return this.encode$2$toEncodable(value, null);
      },
      get$encoder: function() {
        return C.JsonEncoder_null_null;
      },
      get$decoder: function() {
        return C.JsonDecoder_null;
      },
      $asCodec: function() {
        return [P.Object, P.String];
      }
    },
    JsonEncoder: {
      "^": "Converter;indent,_toEncodable",
      $asConverter: function() {
        return [P.Object, P.String];
      }
    },
    JsonDecoder: {
      "^": "Converter;_reviver",
      $asConverter: function() {
        return [P.String, P.Object];
      }
    },
    _JsonStringifier: {
      "^": "Object;",
      writeStringContent$1: function(s) {
        var t1, $length, offset, i, charCode, t2, t3;
        t1 = J.getInterceptor$asx(s);
        $length = t1.get$length(s);
        if (typeof $length !== "number")
          return H.iae($length);
        offset = 0;
        i = 0;
        for (; i < $length; ++i) {
          charCode = t1.codeUnitAt$1(s, i);
          t2 = J.getInterceptor$n(charCode);
          if (t2.$gt(charCode, 92) === true)
            continue;
          if (t2.$lt(charCode, 32) === true) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            switch (charCode) {
              case 8:
                this.writeCharCode$1(98);
                break;
              case 9:
                this.writeCharCode$1(116);
                break;
              case 10:
                this.writeCharCode$1(110);
                break;
              case 12:
                this.writeCharCode$1(102);
                break;
              case 13:
                this.writeCharCode$1(114);
                break;
              default:
                this.writeCharCode$1(117);
                this.writeCharCode$1(48);
                this.writeCharCode$1(48);
                t3 = J.$and$n(t2.$shr(charCode, 4), 15);
                if (J.$lt$n(t3, 10) === true) {
                  if (typeof t3 !== "number")
                    return H.iae(t3);
                  t3 = 48 + t3;
                } else {
                  if (typeof t3 !== "number")
                    return H.iae(t3);
                  t3 = 87 + t3;
                }
                this.writeCharCode$1(t3);
                t2 = t2.$and(charCode, 15);
                if (J.$lt$n(t2, 10) === true) {
                  if (typeof t2 !== "number")
                    return H.iae(t2);
                  t2 = 48 + t2;
                } else {
                  if (typeof t2 !== "number")
                    return H.iae(t2);
                  t2 = 87 + t2;
                }
                this.writeCharCode$1(t2);
                break;
            }
          } else if (t2.$eq(charCode, 34) || t2.$eq(charCode, 92)) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            this.writeCharCode$1(charCode);
          }
        }
        if (offset === 0)
          this.writeString$1(s);
        else if (offset < $length)
          this.writeStringSlice$3(s, offset, $length);
      },
      _checkCycle$1: function(object) {
        var t1, t2, i, t3;
        for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
          t3 = t1[i];
          if (object == null ? t3 == null : object === t3)
            throw H.wrapException(new P.JsonCyclicError(object, null));
        }
        t1.push(object);
      },
      writeObject$1: function(object) {
        var customJson, e, t1, exception;
        if (this.writeJsonValue$1(object))
          return;
        this._checkCycle$1(object);
        try {
          customJson = this._toEncodable$1(object);
          if (!this.writeJsonValue$1(customJson))
            throw H.wrapException(new P.JsonUnsupportedObjectError(object, null));
          t1 = this._seen;
          if (0 >= t1.length)
            return H.ioore(t1, -1);
          t1.pop();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          throw H.wrapException(new P.JsonUnsupportedObjectError(object, e));
        }
      },
      writeJsonValue$1: function(object) {
        var t1, success;
        if (typeof object === "number") {
          if (!C.JSNumber_methods.get$isFinite(object))
            return false;
          this.writeNumber$1(object);
          return true;
        } else if (object === true) {
          this.writeString$1("true");
          return true;
        } else if (object === false) {
          this.writeString$1("false");
          return true;
        } else if (object == null) {
          this.writeString$1("null");
          return true;
        } else if (typeof object === "string") {
          this.writeString$1("\"");
          this.writeStringContent$1(object);
          this.writeString$1("\"");
          return true;
        } else {
          t1 = J.getInterceptor(object);
          if (!!t1.$isList) {
            this._checkCycle$1(object);
            this.writeList$1(object);
            t1 = this._seen;
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            t1.pop();
            return true;
          } else if (!!t1.$isMap) {
            this._checkCycle$1(object);
            success = this.writeMap$1(object);
            t1 = this._seen;
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            t1.pop();
            return success;
          } else
            return false;
        }
      },
      writeList$1: function(list) {
        var t1, i;
        this.writeString$1("[");
        t1 = J.getInterceptor$asx(list);
        if (t1.get$length(list) > 0) {
          this.writeObject$1(t1.$index(list, 0));
          for (i = 1; i < t1.get$length(list); ++i) {
            this.writeString$1(",");
            this.writeObject$1(t1.$index(list, i));
          }
        }
        this.writeString$1("]");
      },
      writeMap$1: function(map) {
        var t1, t2, t3, keyValueList, separator, i;
        t1 = {};
        t2 = J.getInterceptor$asx(map);
        if (t2.get$isEmpty(map)) {
          this.writeString$1("{}");
          return true;
        }
        t3 = J.$mul$ns(t2.get$length(map), 2);
        if (typeof t3 !== "number")
          return H.iae(t3);
        keyValueList = new Array(t3);
        t1._captured_i_0 = 0;
        t1._captured_allStringKeys_1 = true;
        t2.forEach$1(map, new P._JsonStringifier_writeMap_closure(t1, keyValueList));
        if (!t1._captured_allStringKeys_1)
          return false;
        this.writeString$1("{");
        for (t1 = keyValueList.length, separator = "\"", i = 0; i < t1; i += 2, separator = ",\"") {
          this.writeString$1(separator);
          this.writeStringContent$1(keyValueList[i]);
          this.writeString$1("\":");
          t2 = i + 1;
          if (t2 >= t1)
            return H.ioore(keyValueList, t2);
          this.writeObject$1(keyValueList[t2]);
        }
        this.writeString$1("}");
        return true;
      },
      _toEncodable$1: function(arg0) {
        return this._toEncodable.call$1(arg0);
      }
    },
    _JsonStringifier_writeMap_closure: {
      "^": "Closure:3;_convert$_box_0,_captured_keyValueList_1",
      call$2: function(key, value) {
        var t1, t2, t3, i, t4;
        if (typeof key !== "string")
          this._convert$_box_0._captured_allStringKeys_1 = false;
        t1 = this._captured_keyValueList_1;
        t2 = this._convert$_box_0;
        t3 = t2._captured_i_0;
        i = t3 + 1;
        t2._captured_i_0 = i;
        t4 = t1.length;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = key;
        t2._captured_i_0 = i + 1;
        if (i >= t4)
          return H.ioore(t1, i);
        t1[i] = value;
      }
    },
    _JsonStringStringifier: {
      "^": "_JsonStringifier;_sink,_seen,_toEncodable",
      writeNumber$1: function(number) {
        this._sink._contents += C.JSNumber_methods.toString$0(number);
      },
      writeString$1: function(string) {
        this._sink._contents += H.S(string);
      },
      writeStringSlice$3: function(string, start, end) {
        this._sink._contents += H.S(J.substring$2$s(string, start, end));
      },
      writeCharCode$1: function(charCode) {
        this._sink._contents += H.Primitives_stringFromCharCode(charCode);
      },
      static: {_JsonStringStringifier_stringify: function(object, toEncodable, indent) {
          var output, t1, stringifier;
          output = new P.StringBuffer("");
          t1 = P.convert___defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifier(output, [], t1);
          stringifier.writeObject$1(object);
          t1 = output._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }}
    },
    Utf8Codec: {
      "^": "Encoding;_allowMalformed",
      get$encoder: function() {
        return C.C_Utf8Encoder;
      }
    },
    Utf8Encoder: {
      "^": "Converter;",
      convert$3: function(string, start, end) {
        var stringLength, $length, t1, encoder;
        stringLength = string.get$length(string);
        P.RangeError_checkValidRange(start, end, stringLength, null, null, null);
        $length = stringLength.$sub(0, start);
        t1 = $length.$mul(0, 3);
        t1 = new Uint8Array(t1);
        encoder = new P._Utf8Encoder(0, 0, t1);
        encoder._fillBuffer$3(string, start, stringLength);
        encoder._writeSurrogate$2(string.codeUnitAt$1(0, stringLength.$sub(0, 1)), 0);
        return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
      },
      convert$1: function(string) {
        return this.convert$3(string, 0, null);
      },
      $asConverter: function() {
        return [P.String, [P.List, P.$int]];
      }
    },
    _Utf8Encoder: {
      "^": "Object;_carry,_bufferIndex,_buffer",
      _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
        var t1, t2, t3, t4;
        if ((nextCodeUnit & 64512) === 56320)
          P._combineSurrogatePair(leadingSurrogate, nextCodeUnit);
        else {
          t1 = this._buffer;
          t2 = this._bufferIndex++;
          t3 = C.JSInt_methods.$or(224, leadingSurrogate.$shr(0, 12));
          t4 = t1.length;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = t3;
          t3 = this._bufferIndex++;
          t2 = C.JSInt_methods.$or(128, leadingSurrogate.$shr(0, 6).$and(0, 63));
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = t2;
          t2 = this._bufferIndex++;
          t3 = C.JSInt_methods.$or(128, leadingSurrogate.$and(0, 63));
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = t3;
          return false;
        }
      },
      _fillBuffer$3: function(str, start, end) {
        var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4;
        if (P._isLeadSurrogate(str.codeUnitAt$1(0, end.$sub(0, 1))))
          end = end.$sub(0, 1);
        for (t1 = this._buffer, t2 = t1.length, stringIndex = start; C.JSInt_methods.$lt(stringIndex, end); ++stringIndex) {
          codeUnit = str.codeUnitAt$1(0, stringIndex);
          if (codeUnit.$le(0, 127)) {
            t3 = this._bufferIndex;
            if (t3 >= t2)
              break;
            this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit;
          } else if (P._isLeadSurrogate(codeUnit)) {
            if (this._bufferIndex + 3 >= t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (this._writeSurrogate$2(codeUnit, str.codeUnitAt$1(0, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (codeUnit.$le(0, 2047)) {
            t3 = this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            this._bufferIndex = t4;
            t4 = C.JSInt_methods.$or(192, codeUnit.$shr(0, 6));
            if (t3 >= t2)
              return H.ioore(t1, t3);
            t1[t3] = t4;
            t4 = this._bufferIndex++;
            t3 = C.JSInt_methods.$or(128, codeUnit.$and(0, 63));
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = t3;
          } else {
            t3 = this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            this._bufferIndex = t3 + 1;
            t4 = C.JSInt_methods.$or(224, codeUnit.$shr(0, 12));
            if (t3 >= t2)
              return H.ioore(t1, t3);
            t1[t3] = t4;
            t4 = this._bufferIndex++;
            t3 = C.JSInt_methods.$or(128, codeUnit.$shr(0, 6).$and(0, 63));
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = t3;
            t3 = this._bufferIndex++;
            t4 = C.JSInt_methods.$or(128, codeUnit.$and(0, 63));
            if (t3 >= t2)
              return H.ioore(t1, t3);
            t1[t3] = t4;
          }
        }
        return stringIndex;
      }
    }
  }], ["dart.core", "dart:core",, P, {
    "^": "",
    Comparable_compare: [function(a, b) {
      return J.compareTo$1$ns(a, b);
    }, "call$2", "core_Comparable_compare$closure", 4, 0, 60],
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0$(object);
      if (typeof object === "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    Error__objectToString: function(object) {
      var t1 = J.getInterceptor(object);
      if (!!t1.$isClosure)
        return t1.toString$0(object);
      return H.Primitives_objectToHumanReadableString(object);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    List_List$from: function(elements, growable, $E) {
      var list, t1;
      list = H.setRuntimeTypeInfo([], [$E]);
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0() === true;)
        list.push(t1.get$current());
      if (growable)
        return list;
      list.fixed$length = Array;
      return list;
    },
    print: function(object) {
      var line = H.S(object);
      H.printString(line);
    },
    RegExp_RegExp: function(source, caseSensitive, multiLine) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, false, true, false), null, null);
    },
    String_String$fromCharCodes: function(charCodes, start, end) {
      var len = charCodes.length;
      end = P.RangeError_checkValidRange(start, end, len, null, null, null);
      return H.Primitives_stringFromCharCodes(start > 0 || end < len ? C.JSArray_methods.sublist$2(charCodes, start, end) : charCodes);
    },
    _combineSurrogatePair0: function(start, end) {
      return 65536 + ((start & 1023) << 10 >>> 0) + (end & 1023);
    },
    NoSuchMethodError_toString_closure: {
      "^": "Closure:33;_core$_box_0,_captured_sb_1",
      call$2: [function(key, value) {
        var t1, t2, t3;
        t1 = this._captured_sb_1;
        t2 = this._core$_box_0;
        t1._contents += t2._captured_comma_0;
        t3 = t1._contents += H.S(key.get$__internal$_name());
        t1._contents = t3 + ": ";
        t1._contents += H.S(P.Error_safeToString(value));
        t2._captured_comma_0 = ", ";
      }, null, null, 4, 0, null, 7, 5, "call"]
    },
    bool: {
      "^": "Object;"
    },
    "+bool": 0,
    Comparable: {
      "^": "Object;"
    },
    DateTime: {
      "^": "Object;millisecondsSinceEpoch<,isUtc",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.DateTime))
          return false;
        return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
      },
      compareTo$1: function(_, other) {
        return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
      },
      get$hashCode: function(_) {
        return this.millisecondsSinceEpoch;
      },
      toString$0: function(_) {
        var y, m, d, h, min, sec, ms;
        y = P.DateTime__fourDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
      },
      toIso8601String$0: function() {
        var y, m, d, h, min, sec, ms;
        y = H.Primitives_getYear(this) >= -9999 && H.Primitives_getYear(this) <= 9999 ? P.DateTime__fourDigits(H.Primitives_getYear(this)) : P.DateTime__sixDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms;
      },
      add$1: function(_, duration) {
        var t1 = duration.get$inMilliseconds();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch + t1, this.isUtc);
      },
      DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
        if (Math.abs(millisecondsSinceEpoch) > 864e13)
          throw H.wrapException(P.ArgumentError$(millisecondsSinceEpoch));
      },
      $isComparable: 1,
      $asComparable: Isolate.functionThatReturnsNull,
      static: {DateTime_parse: function(formattedString) {
          var match, t1, t2, years, month, day, hour, minute, second, millisecond, addOneMillisecond, t3, sign, hourDifference, minuteDifference, isUtc, millisecondsSinceEpoch;
          match = new H.JSSyntaxRegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d{1,6}))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$", H.JSSyntaxRegExp_makeNative("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d{1,6}))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$", false, true, false), null, null).firstMatch$1(formattedString);
          if (match != null) {
            t1 = new P.DateTime_parse_parseIntOrZero();
            t2 = match._match;
            if (1 >= t2.length)
              return H.ioore(t2, 1);
            years = H.Primitives_parseInt(t2[1], null, null);
            if (2 >= t2.length)
              return H.ioore(t2, 2);
            month = H.Primitives_parseInt(t2[2], null, null);
            if (3 >= t2.length)
              return H.ioore(t2, 3);
            day = H.Primitives_parseInt(t2[3], null, null);
            if (4 >= t2.length)
              return H.ioore(t2, 4);
            hour = t1.call$1(t2[4]);
            if (5 >= t2.length)
              return H.ioore(t2, 5);
            minute = t1.call$1(t2[5]);
            if (6 >= t2.length)
              return H.ioore(t2, 6);
            second = t1.call$1(t2[6]);
            if (7 >= t2.length)
              return H.ioore(t2, 7);
            millisecond = new P.DateTime_parse_parseMilliseconds().call$1(t2[7]);
            if (J.$eq$(millisecond, 1000)) {
              addOneMillisecond = true;
              millisecond = 999;
            } else
              addOneMillisecond = false;
            t3 = t2.length;
            if (8 >= t3)
              return H.ioore(t2, 8);
            if (t2[8] != null) {
              if (9 >= t3)
                return H.ioore(t2, 9);
              t3 = t2[9];
              if (t3 != null) {
                sign = J.$eq$(t3, "-") ? -1 : 1;
                if (10 >= t2.length)
                  return H.ioore(t2, 10);
                hourDifference = H.Primitives_parseInt(t2[10], null, null);
                if (11 >= t2.length)
                  return H.ioore(t2, 11);
                minuteDifference = t1.call$1(t2[11]);
                if (typeof hourDifference !== "number")
                  return H.iae(hourDifference);
                minuteDifference = J.$add$ns(minuteDifference, 60 * hourDifference);
                if (typeof minuteDifference !== "number")
                  return H.iae(minuteDifference);
                minute = J.$sub$n(minute, sign * minuteDifference);
              }
              isUtc = true;
            } else
              isUtc = false;
            millisecondsSinceEpoch = H.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond, isUtc);
            if (millisecondsSinceEpoch == null)
              throw H.wrapException(new P.FormatException("Time out of range", formattedString, null));
            return P.DateTime$fromMillisecondsSinceEpoch(addOneMillisecond ? millisecondsSinceEpoch + 1 : millisecondsSinceEpoch, isUtc);
          } else
            throw H.wrapException(new P.FormatException("Invalid date format", formattedString, null));
        }, DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
          var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
          t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
          return t1;
        }, DateTime__fourDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "";
          if (absN >= 1000)
            return "" + n;
          if (absN >= 100)
            return sign + "0" + H.S(absN);
          if (absN >= 10)
            return sign + "00" + H.S(absN);
          return sign + "000" + H.S(absN);
        }, DateTime__sixDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "+";
          if (absN >= 100000)
            return sign + H.S(absN);
          return sign + "0" + H.S(absN);
        }, DateTime__threeDigits: function(n) {
          if (n >= 100)
            return "" + n;
          if (n >= 10)
            return "0" + n;
          return "00" + n;
        }, DateTime__twoDigits: function(n) {
          if (n >= 10)
            return "" + n;
          return "0" + n;
        }}
    },
    DateTime_parse_parseIntOrZero: {
      "^": "Closure:17;",
      call$1: function(matched) {
        if (matched == null)
          return 0;
        return H.Primitives_parseInt(matched, null, null);
      }
    },
    DateTime_parse_parseMilliseconds: {
      "^": "Closure:17;",
      call$1: function(matched) {
        var t1, $length, result, i;
        if (matched == null)
          return 0;
        t1 = J.getInterceptor$asx(matched);
        $length = t1.get$length(matched);
        result = J.$xor$n(t1.codeUnitAt$1(matched, 0), 48);
        if (J.$le$n($length, 3) === true) {
          if (typeof $length !== "number")
            return H.iae($length);
          i = 1;
          for (; i < $length;) {
            result = J.$add$ns(J.$mul$ns(result, 10), J.$xor$n(t1.codeUnitAt$1(matched, i), 48));
            ++i;
          }
          for (; i < 3;) {
            result = J.$mul$ns(result, 10);
            ++i;
          }
          return result;
        }
        result = J.$add$ns(J.$mul$ns(J.$add$ns(J.$mul$ns(result, 10), J.$xor$n(t1.codeUnitAt$1(matched, 1), 48)), 10), J.$xor$n(t1.codeUnitAt$1(matched, 2), 48));
        return J.$ge$n(t1.codeUnitAt$1(matched, 3), 53) === true ? J.$add$ns(result, 1) : result;
      }
    },
    $double: {
      "^": "num;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+double": 0,
    Duration: {
      "^": "Object;_duration<",
      $add: function(_, other) {
        var t1 = other.get$_duration();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return new P.Duration(this._duration + t1);
      },
      $sub: function(_, other) {
        var t1 = other.get$_duration();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return new P.Duration(this._duration - t1);
      },
      $mul: function(_, factor) {
        return new P.Duration(C.JSNumber_methods.round$0(this._duration * factor));
      },
      $tdiv: function(_, quotient) {
        if (quotient === 0)
          throw H.wrapException(new P.IntegerDivisionByZeroException());
        return new P.Duration(C.JSNumber_methods.$tdiv(this._duration, quotient));
      },
      $lt: function(_, other) {
        return C.JSNumber_methods.$lt(this._duration, other.get$_duration());
      },
      $gt: function(_, other) {
        var t1 = other.get$_duration();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this._duration > t1;
      },
      $le: function(_, other) {
        return C.JSNumber_methods.$le(this._duration, other.get$_duration());
      },
      $ge: function(_, other) {
        return C.JSNumber_methods.$ge(this._duration, other.get$_duration());
      },
      get$inMilliseconds: function() {
        return C.JSNumber_methods._tdivFast$1(this._duration, 1000);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.Duration))
          return false;
        return this._duration === other._duration;
      },
      get$hashCode: function(_) {
        return this._duration & 0x1FFFFFFF;
      },
      compareTo$1: function(_, other) {
        return C.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
      },
      toString$0: function(_) {
        var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
        t1 = new P.Duration_toString_twoDigits();
        t2 = this._duration;
        if (t2 < 0)
          return "-" + new P.Duration(-t2).toString$0(0);
        twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 60000000), 60));
        twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 1000000), 60));
        sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
        return H.S(C.JSNumber_methods._tdivFast$1(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.Duration];
      },
      static: {Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
          return new P.Duration(864e8 * days + 3600000000 * hours + 60000000 * minutes + 1000000 * seconds + 1000 * milliseconds + microseconds);
        }}
    },
    Duration_toString_sixDigits: {
      "^": "Closure:18;",
      call$1: function(n) {
        if (n >= 100000)
          return H.S(n);
        if (n >= 10000)
          return "0" + H.S(n);
        if (n >= 1000)
          return "00" + H.S(n);
        if (n >= 100)
          return "000" + H.S(n);
        if (n >= 10)
          return "0000" + H.S(n);
        return "00000" + H.S(n);
      }
    },
    Duration_toString_twoDigits: {
      "^": "Closure:18;",
      call$1: function(n) {
        if (n >= 10)
          return "" + n;
        return "0" + n;
      }
    },
    Error: {
      "^": "Object;",
      get$stackTrace: function() {
        return H.getTraceFromException(this.$thrownJsError);
      }
    },
    NullThrownError: {
      "^": "Error;",
      toString$0: function(_) {
        return "Throw of null.";
      }
    },
    ArgumentError: {
      "^": "Error;_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "Invalid argument" + (!this._hasValue ? "(s)" : "");
      },
      get$_errorExplanation: function() {
        return "";
      },
      toString$0: function(_) {
        var t1, nameString, message, prefix, explanation, errorValue;
        t1 = this.name;
        nameString = t1 != null ? " (" + H.S(t1) + ")" : "";
        t1 = this.message;
        message = t1 == null ? "" : ": " + H.S(t1);
        prefix = this.get$_errorName() + nameString + message;
        if (!this._hasValue)
          return prefix;
        explanation = this.get$_errorExplanation();
        errorValue = P.Error_safeToString(this.invalidValue);
        return prefix + explanation + ": " + H.S(errorValue);
      },
      static: {ArgumentError$: function(message) {
          return new P.ArgumentError(false, null, null, message);
        }, ArgumentError$value: function(value, $name, message) {
          return new P.ArgumentError(true, value, $name, message);
        }}
    },
    RangeError: {
      "^": "ArgumentError;start,end,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        var t1, explanation, t2;
        t1 = this.start;
        if (t1 == null) {
          t1 = this.end;
          explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
        } else {
          t2 = this.end;
          if (t2 == null)
            explanation = ": Not greater than or equal to " + H.S(t1);
          else {
            if (typeof t2 !== "number")
              return t2.$gt();
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (t2 > t1)
              explanation = ": Not in range " + t1 + ".." + t2 + ", inclusive";
            else
              explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + t1;
          }
        }
        return explanation;
      },
      static: {RangeError$value: function(value, $name, message) {
          return new P.RangeError(null, null, true, value, $name, "Value not in range");
        }, RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
          return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
        }, RangeError_checkValidRange: function(start, end, $length, startName, endName, message) {
          if (0 > start || start > $length)
            throw H.wrapException(P.RangeError$range(start, 0, $length, "start", message));
          if (end != null) {
            if (start > end || end > $length)
              throw H.wrapException(P.RangeError$range(end, start, $length, "end", message));
            return end;
          }
          return $length;
        }}
    },
    IndexError: {
      "^": "ArgumentError;indexable,length>,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        if (J.$lt$n(this.invalidValue, 0) === true)
          return ": index must not be negative";
        var t1 = this.length;
        if (J.$eq$(t1, 0))
          return ": no indices are valid";
        return ": index should be less than " + H.S(t1);
      },
      static: {IndexError$: function(invalidValue, indexable, $name, message, $length) {
          var t1 = $length != null ? $length : J.get$length$asx(indexable);
          return new P.IndexError(indexable, t1, true, invalidValue, $name, "Index out of range");
        }}
    },
    NoSuchMethodError: {
      "^": "Error;_core$_receiver,_core$_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
      toString$0: function(_) {
        var t1, sb, t2, argument, memberName, receiverText, actualParameters;
        t1 = {};
        sb = new P.StringBuffer("");
        t1._captured_comma_0 = "";
        t2 = this._core$_arguments;
        if (t2 != null)
          for (t2 = J.get$iterator$ax(t2); t2.moveNext$0() === true;) {
            argument = t2.get$current();
            sb._contents += t1._captured_comma_0;
            sb._contents += H.S(P.Error_safeToString(argument));
            t1._captured_comma_0 = ", ";
          }
        t2 = this._namedArguments;
        if (t2 != null)
          J.forEach$1$ax(t2, new P.NoSuchMethodError_toString_closure(t1, sb));
        memberName = this._core$_memberName.get$__internal$_name();
        receiverText = P.Error_safeToString(this._core$_receiver);
        actualParameters = H.S(sb);
        return "NoSuchMethodError: method not found: '" + H.S(memberName) + "'\nReceiver: " + H.S(receiverText) + "\nArguments: [" + actualParameters + "]";
      },
      static: {NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
          return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
        }}
    },
    UnsupportedError: {
      "^": "Error;message",
      toString$0: function(_) {
        return "Unsupported operation: " + this.message;
      }
    },
    UnimplementedError: {
      "^": "Error;message",
      toString$0: function(_) {
        var t1 = this.message;
        return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
      }
    },
    StateError: {
      "^": "Error;message",
      toString$0: function(_) {
        return "Bad state: " + this.message;
      }
    },
    ConcurrentModificationError: {
      "^": "Error;modifiedObject",
      toString$0: function(_) {
        var t1 = this.modifiedObject;
        if (t1 == null)
          return "Concurrent modification during iteration.";
        return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
      }
    },
    OutOfMemoryError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Out of Memory";
      },
      get$stackTrace: function() {
        return;
      },
      $isError: 1
    },
    StackOverflowError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Stack Overflow";
      },
      get$stackTrace: function() {
        return;
      },
      $isError: 1
    },
    CyclicInitializationError: {
      "^": "Error;variableName",
      toString$0: function(_) {
        return "Reading static variable '" + this.variableName + "' during its initialization";
      }
    },
    _Exception: {
      "^": "Object;message",
      toString$0: function(_) {
        var t1 = this.message;
        if (t1 == null)
          return "Exception";
        return "Exception: " + H.S(t1);
      }
    },
    FormatException: {
      "^": "Object;message,source,offset",
      toString$0: function(_) {
        var t1, report, offset, source, lineNum, lineStart, lastWasCR, i, $char, t2, lineEnd, end, start, prefix, postfix, slice;
        t1 = this.message;
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException";
        offset = this.offset;
        source = this.source;
        if (typeof source !== "string")
          return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
        if (offset != null)
          if (!(offset < 0)) {
            t1 = J.get$length$asx(source);
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = offset > t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          t1 = J.getInterceptor$asx(source);
          if (J.$gt$n(t1.get$length(source), 78) === true)
            source = J.$add$ns(t1.substring$2(source, 0, 75), "...");
          return report + "\n" + H.S(source);
        }
        for (t1 = J.getInterceptor$asx(source), lineNum = 1, lineStart = 0, lastWasCR = null, i = 0; i < offset; ++i) {
          $char = t1.codeUnitAt$1(source, i);
          t2 = J.getInterceptor($char);
          if (t2.$eq($char, 10)) {
            if (lineStart !== i || lastWasCR !== true)
              ++lineNum;
            lineStart = i + 1;
            lastWasCR = false;
          } else if (t2.$eq($char, 13)) {
            ++lineNum;
            lineStart = i + 1;
            lastWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = t1.get$length(source);
        i = offset;
        while (true) {
          t2 = t1.get$length(source);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          $char = t1.codeUnitAt$1(source, i);
          t2 = J.getInterceptor($char);
          if (t2.$eq($char, 10) || t2.$eq($char, 13)) {
            lineEnd = i;
            break;
          }
          ++i;
        }
        t2 = J.getInterceptor$n(lineEnd);
        if (J.$gt$n(t2.$sub(lineEnd, lineStart), 78) === true)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (J.$lt$n(t2.$sub(lineEnd, offset), 75) === true) {
              start = t2.$sub(lineEnd, 75);
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = t1.substring$2(source, start, end);
        if (typeof start !== "number")
          return H.iae(start);
        return report + prefix + H.S(slice) + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      }
    },
    IntegerDivisionByZeroException: {
      "^": "Object;",
      toString$0: function(_) {
        return "IntegerDivisionByZeroException";
      }
    },
    Expando: {
      "^": "Object;name",
      toString$0: function(_) {
        return "Expando:" + H.S(this.name);
      },
      $index: function(_, object) {
        var values = H.Primitives_getProperty(object, "expando$values");
        return values == null ? null : H.Primitives_getProperty(values, this._getKey$0(0));
      },
      $indexSet: function(_, object, value) {
        var values = H.Primitives_getProperty(object, "expando$values");
        if (values == null) {
          values = new P.Object();
          H.Primitives_setProperty(object, "expando$values", values);
        }
        H.Primitives_setProperty(values, this._getKey$0(0), value);
      },
      _getKey$0: function(_) {
        var key, t1;
        key = H.Primitives_getProperty(this, "expando$key");
        if (key == null) {
          t1 = $.Expando__keyCount;
          $.Expando__keyCount = t1 + 1;
          key = "expando$key$" + t1;
          H.Primitives_setProperty(this, "expando$key", key);
        }
        return key;
      }
    },
    Function: {
      "^": "Object;"
    },
    $int: {
      "^": "num;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+int": 0,
    Iterable: {
      "^": "Object;",
      map$1: function(_, f) {
        return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "Iterable", 0), null);
      },
      where$1: ["super$Iterable$where", function(_, f) {
        return H.setRuntimeTypeInfo(new H.WhereIterable(this, f), [H.getRuntimeTypeArgument(this, "Iterable", 0)]);
      }],
      contains$1: function(_, element) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
          if (J.$eq$(t1.get$current(), element))
            return true;
        return false;
      },
      forEach$1: function(_, f) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
          f.call$1(t1.get$current());
      },
      toList$1$growable: function(_, growable) {
        return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "Iterable", 0));
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$length: function(_) {
        var it, count;
        it = this.get$iterator(this);
        for (count = 0; it.moveNext$0() === true;)
          ++count;
        return count;
      },
      get$isEmpty: function(_) {
        return this.get$iterator(this).moveNext$0() !== true;
      },
      get$isNotEmpty: function(_) {
        return this.get$isEmpty(this) !== true;
      },
      get$last: function(_) {
        var it, result;
        it = this.get$iterator(this);
        if (it.moveNext$0() !== true)
          throw H.wrapException(H.IterableElementError_noElement());
        do
          result = it.get$current();
        while (it.moveNext$0() === true);
        return result;
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0() === true;) {
          element = t1.get$current();
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToShortString(this, "(", ")");
      },
      $asIterable: null
    },
    Iterator: {
      "^": "Object;"
    },
    List: {
      "^": "Object;",
      $asList: null,
      $isIterable: 1,
      $isEfficientLength: 1
    },
    "+List": 0,
    Map: {
      "^": "Object;",
      $asMap: null
    },
    Null: {
      "^": "Object;",
      toString$0: function(_) {
        return "null";
      }
    },
    "+Null": 0,
    num: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+num": 0,
    Object: {
      "^": ";",
      $eq: function(_, other) {
        return this === other;
      },
      get$hashCode: function(_) {
        return H.Primitives_objectHashCode(this);
      },
      toString$0: ["super$Object$toString", function(_) {
        return H.Primitives_objectToHumanReadableString(this);
      }],
      noSuchMethod$1: ["super$Object$noSuchMethod", function(_, invocation) {
        throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }],
      addStream$2$cancelOnError: function($receiver, $0, $1) {
        return this.noSuchMethod$1($receiver, H.createInvocationMirror("addStream", "addStream$2$cancelOnError", 0, [$0, $1], ["cancelOnError"]));
      },
      bindCallback$2$runGuarded: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("bindCallback", "bindCallback$2$runGuarded", 0, [$0, $1], ["runGuarded"]));
      },
      bindUnaryCallback$2$runGuarded: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("bindUnaryCallback", "bindUnaryCallback$2$runGuarded", 0, [$0, $1], ["runGuarded"]));
      },
      call$0: function() {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$0", 0, [], []));
      },
      "+call:0": 0,
      call$1: function($0) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$1", 0, [$0], []));
      },
      "+call:1": 0,
      call$1$growable: function($0) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$1$growable", 0, [$0], ["growable"]));
      },
      "+call:0:growable": 0,
      call$1$host: function($0) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$1$host", 0, [$0], ["host"]));
      },
      "+call:0:host": 0,
      call$1$path: function($0) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$1$path", 0, [$0], ["path"]));
      },
      "+call:0:path": 0,
      call$1$scheme: function($0) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$1$scheme", 0, [$0], ["scheme"]));
      },
      "+call:0:scheme": 0,
      call$2: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$2", 0, [$0, $1], []));
      },
      "+call:2": 0,
      call$2$cancelOnError: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$2$cancelOnError", 0, [$0, $1], ["cancelOnError"]));
      },
      "+call:1:cancelOnError": 0,
      call$2$onError: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$2$onError", 0, [$0, $1], ["onError"]));
      },
      "+call:1:onError": 0,
      call$2$runGuarded: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$2$runGuarded", 0, [$0, $1], ["runGuarded"]));
      },
      "+call:1:runGuarded": 0,
      call$3: function($0, $1, $2) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$3", 0, [$0, $1, $2], []));
      },
      "+call:3": 0,
      call$3$async: function($0, $1, $2) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$3$async", 0, [$0, $1, $2], ["async"]));
      },
      "+call:2:async": 0,
      call$3$onDone$onError: function($0, $1, $2) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$3$onDone$onError", 0, [$0, $1, $2], ["onDone", "onError"]));
      },
      "+call:1:onDone:onError": 0,
      call$4: function($0, $1, $2, $3) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$4", 0, [$0, $1, $2, $3], []));
      },
      "+call:4": 0,
      call$4$cancelOnError$onDone$onError: function($0, $1, $2, $3) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$4$cancelOnError$onDone$onError", 0, [$0, $1, $2, $3], ["cancelOnError", "onDone", "onError"]));
      },
      "+call:1:cancelOnError:onDone:onError": 0,
      call$5: function($0, $1, $2, $3, $4) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("call", "call$5", 0, [$0, $1, $2, $3, $4], []));
      },
      "+call:5": 0,
      listen$4$cancelOnError$onDone$onError: function($0, $1, $2, $3) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("listen", "listen$4$cancelOnError$onDone$onError", 0, [$0, $1, $2, $3], ["cancelOnError", "onDone", "onError"]));
      },
      then$2$onError: function($0, $1) {
        return this.noSuchMethod$1(this, H.createInvocationMirror("then", "then$2$onError", 0, [$0, $1], ["onError"]));
      },
      toList$1$growable: function($receiver, $0) {
        return this.noSuchMethod$1($receiver, H.createInvocationMirror("toList", "toList$1$growable", 0, [$0], ["growable"]));
      },
      toString: function() {
        return this.toString$0(this);
      }
    },
    Match: {
      "^": "Object;"
    },
    StackTrace: {
      "^": "Object;"
    },
    String: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.String];
      }
    },
    "+String": 0,
    Runes: {
      "^": "Iterable;string",
      get$iterator: function(_) {
        return new P.RuneIterator(this.string, 0, 0, null);
      },
      get$last: function(_) {
        var t1, t2, code, previousCode;
        t1 = this.string;
        t2 = t1.length;
        if (t2 === 0)
          throw H.wrapException(new P.StateError("No elements."));
        code = C.JSString_methods.codeUnitAt$1(t1, t2 - 1);
        if ((code & 64512) === 56320 && t2 > 1) {
          previousCode = C.JSString_methods.codeUnitAt$1(t1, t2 - 2);
          if ((previousCode & 64512) === 55296)
            return P._combineSurrogatePair0(previousCode, code);
        }
        return code;
      },
      $asIterable: function() {
        return [P.$int];
      }
    },
    RuneIterator: {
      "^": "Object;string,_core$_position,_nextPosition,_currentCodePoint",
      get$current: function() {
        return this._currentCodePoint;
      },
      moveNext$0: function() {
        var t1, t2, t3, codeUnit, nextPosition, nextCodeUnit;
        t1 = this._nextPosition;
        this._core$_position = t1;
        t2 = this.string;
        t3 = t2.length;
        if (t1 === t3) {
          this._currentCodePoint = null;
          return false;
        }
        codeUnit = C.JSString_methods.codeUnitAt$1(t2, t1);
        nextPosition = this._core$_position + 1;
        if ((codeUnit & 64512) === 55296 && nextPosition < t3) {
          nextCodeUnit = C.JSString_methods.codeUnitAt$1(t2, nextPosition);
          if ((nextCodeUnit & 64512) === 56320) {
            this._nextPosition = nextPosition + 1;
            this._currentCodePoint = P._combineSurrogatePair0(codeUnit, nextCodeUnit);
            return true;
          }
        }
        this._nextPosition = nextPosition;
        this._currentCodePoint = codeUnit;
        return true;
      }
    },
    StringBuffer: {
      "^": "Object;_contents@",
      get$length: function(_) {
        return this._contents.length;
      },
      get$isEmpty: function(_) {
        return this._contents.length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._contents.length !== 0;
      },
      toString$0: function(_) {
        var t1 = this._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {StringBuffer__writeAll: function(string, objects, separator) {
          var iterator = J.get$iterator$ax(objects);
          if (iterator.moveNext$0() !== true)
            return string;
          if (separator.length === 0) {
            do
              string += H.S(iterator.get$current());
            while (iterator.moveNext$0() === true);
          } else {
            string += H.S(iterator.get$current());
            for (; iterator.moveNext$0() === true;)
              string = string + separator + H.S(iterator.get$current());
          }
          return string;
        }}
    },
    Symbol0: {
      "^": "Object;"
    },
    Uri: {
      "^": "Object;scheme,_userInfo,_host,_port,_path,_query,_fragment,_pathSegments,_queryParameters",
      get$host: function(_) {
        var t1 = this._host;
        if (t1 == null)
          return "";
        if (J.getInterceptor$s(t1).startsWith$1(t1, "["))
          return C.JSString_methods.substring$2(t1, 1, t1.length - 1);
        return t1;
      },
      get$port: function(_) {
        var t1 = this._port;
        if (t1 == null)
          return P.Uri__defaultPort(this.scheme);
        return t1;
      },
      replace$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo: function(_, fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
        var schemeChanged, isFile, host0, hasAuthority, t1;
        if (scheme != null) {
          scheme = P.Uri__makeScheme(scheme, 0, scheme.length);
          schemeChanged = true;
        } else {
          scheme = this.scheme;
          schemeChanged = false;
        }
        isFile = scheme === "file";
        userInfo = this._userInfo;
        port = this._port;
        if (schemeChanged)
          port = P.Uri__makePort(port, scheme);
        if (host != null)
          host = P.Uri__makeHost(host, 0, host.length, false);
        else {
          host0 = this._host;
          if (host0 != null)
            host = host0;
          else if (userInfo.length !== 0 || port != null || isFile)
            host = "";
        }
        hasAuthority = host != null;
        t1 = path == null;
        if (!t1 || false)
          path = P.Uri__makePath(path, 0, t1 ? 0 : path.length, pathSegments, scheme, hasAuthority);
        else {
          path = this._path;
          if (!isFile)
            t1 = hasAuthority && path.length !== 0;
          else
            t1 = true;
          if (t1 && !C.JSString_methods.startsWith$1(path, "/"))
            path = "/" + path;
        }
        query = this._query;
        return new P.Uri(scheme, userInfo, host, port, path, query, this._fragment, null, null);
      },
      replace$1$scheme: function($receiver, scheme) {
        return this.replace$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo($receiver, null, null, null, null, null, null, null, scheme, null);
      },
      replace$1$host: function($receiver, host) {
        return this.replace$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo($receiver, null, host, null, null, null, null, null, null, null);
      },
      replace$1$path: function($receiver, path) {
        return this.replace$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo($receiver, null, null, path, null, null, null, null, null, null);
      },
      toString$0: function(_) {
        var t1, t2, t3, t4;
        t1 = this.scheme;
        t2 = "" !== t1 ? t1 + ":" : "";
        t3 = this._host;
        t4 = t3 == null;
        if (!t4 || C.JSString_methods.startsWith$1(this._path, "//") || t1 === "file") {
          t1 = t2 + "//";
          t2 = this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += H.S(t3);
          t2 = this._port;
          if (t2 != null)
            t1 = t1 + ":" + H.S(t2);
        } else
          t1 = t2;
        t1 += this._path;
        t2 = this._query;
        if (t2 != null)
          t1 = t1 + "?" + H.S(t2);
        t2 = this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + H.S(t2);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      $eq: function(_, other) {
        var t1, t2, t3, t4;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isUri)
          return false;
        if (this.scheme === other.scheme)
          if (this._host != null === (other._host != null))
            if (this._userInfo === other._userInfo) {
              t2 = this.get$host(this);
              t3 = t1.get$host(other);
              if (t2 == null ? t3 == null : t2 === t3) {
                t2 = this.get$port(this);
                t1 = t1.get$port(other);
                if (t2 == null ? t1 == null : t2 === t1)
                  if (this._path === other._path) {
                    t1 = this._query;
                    t2 = t1 == null;
                    t3 = other._query;
                    t4 = t3 == null;
                    if (!t2 === !t4) {
                      if (t2)
                        t1 = "";
                      if (t1 == null ? (t4 ? "" : t3) == null : t1 === (t4 ? "" : t3)) {
                        t1 = this._fragment;
                        t2 = t1 == null;
                        t3 = other._fragment;
                        t4 = t3 == null;
                        if (!t2 === !t4) {
                          if (t2)
                            t1 = "";
                          t1 = t1 == null ? (t4 ? "" : t3) == null : t1 === (t4 ? "" : t3);
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2, t3, t4, t5;
        t1 = new P.Uri_hashCode_combine();
        t2 = this.get$host(this);
        t3 = this.get$port(this);
        t4 = this._query;
        if (t4 == null)
          t4 = "";
        t5 = this._fragment;
        return t1.call$2(this.scheme, t1.call$2(this._userInfo, t1.call$2(t2, t1.call$2(t3, t1.call$2(this._path, t1.call$2(t4, t1.call$2(t5 == null ? "" : t5, 1)))))));
      },
      static: {Uri__defaultPort: function(scheme) {
          if (scheme === "http")
            return 80;
          if (scheme === "https")
            return 443;
          return 0;
        }, Uri_parse: function(uri, start, end) {
          var t1, pathStart, state, i, t2, $char, index, path, numberSignIndex, query, fragment;
          t1 = {};
          t1._captured_end_0 = end;
          t1._captured_scheme_1 = "";
          t1._captured_userinfo_2 = "";
          t1._captured_host_3 = null;
          t1._captured_port_4 = null;
          t1._captured_end_0 = uri.length;
          t1._captured_index_5 = start;
          t1._captured_char_6 = -1;
          i = start;
          while (true) {
            t2 = t1._captured_end_0;
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2)) {
              pathStart = start;
              state = 0;
              break;
            }
            $char = C.JSString_methods.codeUnitAt$1(uri, i);
            t1._captured_char_6 = $char;
            if ($char === 63 || $char === 35) {
              pathStart = start;
              state = 0;
              break;
            }
            if ($char === 47) {
              state = i === start ? 2 : 1;
              pathStart = start;
              break;
            }
            if ($char === 58) {
              if (i === start)
                P.Uri__fail(uri, start, "Invalid empty scheme");
              t1._captured_scheme_1 = P.Uri__makeScheme(uri, start, i);
              ++i;
              if (i === t1._captured_end_0) {
                t1._captured_char_6 = -1;
                state = 0;
              } else {
                $char = C.JSString_methods.codeUnitAt$1(uri, i);
                t1._captured_char_6 = $char;
                if ($char === 63 || $char === 35)
                  state = 0;
                else
                  state = $char === 47 ? 2 : 1;
              }
              pathStart = i;
              break;
            }
            ++i;
            t1._captured_char_6 = -1;
          }
          t1._captured_index_5 = i;
          if (state === 2) {
            index = i + 1;
            t1._captured_index_5 = index;
            if (index === t1._captured_end_0) {
              t1._captured_char_6 = -1;
              state = 0;
            } else {
              $char = C.JSString_methods.codeUnitAt$1(uri, index);
              t1._captured_char_6 = $char;
              if ($char === 47) {
                t2 = t1._captured_index_5;
                if (typeof t2 !== "number")
                  return t2.$add();
                t1._captured_index_5 = t2 + 1;
                new P.Uri_parse_parseAuth(t1, uri, -1).call$0();
                pathStart = t1._captured_index_5;
              }
              t2 = t1._captured_char_6;
              state = t2 === 63 || t2 === 35 || t2 === -1 ? 0 : 1;
            }
          }
          if (state === 1)
            while (true) {
              t2 = t1._captured_index_5;
              if (typeof t2 !== "number")
                return t2.$add();
              index = t2 + 1;
              t1._captured_index_5 = index;
              t2 = t1._captured_end_0;
              if (typeof t2 !== "number")
                return H.iae(t2);
              if (!(index < t2))
                break;
              $char = C.JSString_methods.codeUnitAt$1(uri, index);
              t1._captured_char_6 = $char;
              if ($char === 63 || $char === 35)
                break;
              t1._captured_char_6 = -1;
            }
          t2 = t1._captured_host_3;
          path = P.Uri__makePath(uri, pathStart, t1._captured_index_5, null, t1._captured_scheme_1, t2 != null);
          t2 = t1._captured_char_6;
          if (t2 === 63) {
            t2 = t1._captured_index_5;
            if (typeof t2 !== "number")
              return t2.$add();
            i = t2 + 1;
            while (true) {
              t2 = t1._captured_end_0;
              if (typeof t2 !== "number")
                return H.iae(t2);
              if (!(i < t2)) {
                numberSignIndex = -1;
                break;
              }
              if (C.JSString_methods.codeUnitAt$1(uri, i) === 35) {
                numberSignIndex = i;
                break;
              }
              ++i;
            }
            t2 = t1._captured_index_5;
            if (numberSignIndex < 0) {
              if (typeof t2 !== "number")
                return t2.$add();
              query = P.Uri__makeQuery(uri, t2 + 1, t1._captured_end_0, null);
              fragment = null;
            } else {
              if (typeof t2 !== "number")
                return t2.$add();
              query = P.Uri__makeQuery(uri, t2 + 1, numberSignIndex, null);
              fragment = P.Uri__makeFragment(uri, numberSignIndex + 1, t1._captured_end_0);
            }
          } else {
            if (t2 === 35) {
              t2 = t1._captured_index_5;
              if (typeof t2 !== "number")
                return t2.$add();
              fragment = P.Uri__makeFragment(uri, t2 + 1, t1._captured_end_0);
            } else
              fragment = null;
            query = null;
          }
          return new P.Uri(t1._captured_scheme_1, t1._captured_userinfo_2, t1._captured_host_3, t1._captured_port_4, path, query, fragment, null, null);
        }, Uri__fail: function(uri, index, message) {
          throw H.wrapException(new P.FormatException(message, uri, index));
        }, Uri__makePort: function(port, scheme) {
          if (port != null && port === P.Uri__defaultPort(scheme))
            return;
          return port;
        }, Uri__makeHost: function(host, start, end, strictIPv6) {
          var t1, i;
          if (start == null ? end == null : start === end)
            return "";
          if (C.JSString_methods.codeUnitAt$1(host, start) === 91) {
            if (typeof end !== "number")
              return end.$sub();
            t1 = end - 1;
            if (C.JSString_methods.codeUnitAt$1(host, t1) !== 93)
              P.Uri__fail(host, start, "Missing end `]` to match `[` in host");
            if (typeof start !== "number")
              return start.$add();
            P.Uri_parseIPv6Address(host, start + 1, t1);
            return C.JSString_methods.substring$2(host, start, end).toLowerCase();
          }
          if (!strictIPv6) {
            i = start;
            while (true) {
              if (typeof i !== "number")
                return i.$lt();
              if (typeof end !== "number")
                return H.iae(end);
              if (!(i < end))
                break;
              if (C.JSString_methods.codeUnitAt$1(host, i) === 58) {
                P.Uri_parseIPv6Address(host, start, end);
                return "[" + host + "]";
              }
              ++i;
            }
          }
          return P.Uri__normalizeRegName(host, start, end);
        }, Uri__normalizeRegName: function(host, start, end) {
          var index, sectionStart, buffer, isNormalized, $char, replacement, t1, slice, sourceLength, tail;
          index = start;
          sectionStart = index;
          buffer = null;
          isNormalized = true;
          while (true) {
            if (typeof index !== "number")
              return index.$lt();
            if (typeof end !== "number")
              return H.iae(end);
            if (!(index < end))
              break;
            c$0: {
              $char = C.JSString_methods.codeUnitAt$1(host, index);
              if ($char === 37) {
                replacement = P.Uri__normalizeEscape(host, index, true);
                t1 = replacement == null;
                if (t1 && isNormalized) {
                  index += 3;
                  break c$0;
                }
                if (buffer == null)
                  buffer = new P.StringBuffer("");
                slice = C.JSString_methods.substring$2(host, sectionStart, index);
                if (!isNormalized)
                  slice = slice.toLowerCase();
                buffer._contents = buffer._contents + slice;
                if (t1) {
                  replacement = C.JSString_methods.substring$2(host, index, index + 3);
                  sourceLength = 3;
                } else if (replacement === "%") {
                  replacement = "%25";
                  sourceLength = 1;
                } else
                  sourceLength = 3;
                buffer._contents += replacement;
                index += sourceLength;
                sectionStart = index;
                isNormalized = true;
              } else {
                if ($char < 127) {
                  t1 = $char >>> 4;
                  if (t1 >= 8)
                    return H.ioore(C.List_qNA, t1);
                  t1 = (C.List_qNA[t1] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
                } else
                  t1 = false;
                if (t1) {
                  if (isNormalized && 65 <= $char && 90 >= $char) {
                    if (buffer == null)
                      buffer = new P.StringBuffer("");
                    if (typeof sectionStart !== "number")
                      return sectionStart.$lt();
                    if (sectionStart < index) {
                      t1 = C.JSString_methods.substring$2(host, sectionStart, index);
                      buffer._contents = buffer._contents + t1;
                      sectionStart = index;
                    }
                    isNormalized = false;
                  }
                  ++index;
                } else {
                  if ($char <= 93) {
                    t1 = $char >>> 4;
                    if (t1 >= 8)
                      return H.ioore(C.List_2Vk, t1);
                    t1 = (C.List_2Vk[t1] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
                  } else
                    t1 = false;
                  if (t1)
                    P.Uri__fail(host, index, "Invalid character");
                  else {
                    if (($char & 64512) === 55296 && index + 1 < end) {
                      tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
                      if ((tail & 64512) === 56320) {
                        $char = (65536 | ($char & 1023) << 10 | tail & 1023) >>> 0;
                        sourceLength = 2;
                      } else
                        sourceLength = 1;
                    } else
                      sourceLength = 1;
                    if (buffer == null)
                      buffer = new P.StringBuffer("");
                    slice = C.JSString_methods.substring$2(host, sectionStart, index);
                    if (!isNormalized)
                      slice = slice.toLowerCase();
                    buffer._contents = buffer._contents + slice;
                    buffer._contents += P.Uri__escapeChar($char);
                    index += sourceLength;
                    sectionStart = index;
                  }
                }
              }
            }
          }
          if (buffer == null)
            return C.JSString_methods.substring$2(host, start, end);
          if (typeof sectionStart !== "number")
            return sectionStart.$lt();
          if (sectionStart < end) {
            slice = C.JSString_methods.substring$2(host, sectionStart, end);
            buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          }
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__makeScheme: function(scheme, start, end) {
          var firstCodeUnit, t1, i, containsUpperCase, codeUnit;
          if (start === end)
            return "";
          firstCodeUnit = C.JSString_methods.codeUnitAt$1(scheme, start);
          if (!(firstCodeUnit >= 97 && firstCodeUnit <= 122))
            t1 = firstCodeUnit >= 65 && firstCodeUnit <= 90;
          else
            t1 = true;
          if (!t1)
            P.Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
          if (typeof end !== "number")
            return H.iae(end);
          i = start;
          containsUpperCase = false;
          for (; i < end; ++i) {
            codeUnit = C.JSString_methods.codeUnitAt$1(scheme, i);
            if (codeUnit < 128) {
              t1 = codeUnit >>> 4;
              if (t1 >= 8)
                return H.ioore(C.List_JYB, t1);
              t1 = (C.List_JYB[t1] & C.JSInt_methods._shlPositive$1(1, codeUnit & 15)) !== 0;
            } else
              t1 = false;
            if (!t1)
              P.Uri__fail(scheme, i, "Illegal scheme character");
            if (65 <= codeUnit && codeUnit <= 90)
              containsUpperCase = true;
          }
          scheme = C.JSString_methods.substring$2(scheme, start, end);
          return containsUpperCase ? scheme.toLowerCase() : scheme;
        }, Uri__makeUserInfo: function(userInfo, start, end) {
          return P.Uri__normalize(userInfo, start, end, C.List_gRj);
        }, Uri__makePath: function(path, start, end, pathSegments, scheme, hasAuthority) {
          var isFile, ensureLeadingSlash, t1, result;
          isFile = scheme === "file";
          ensureLeadingSlash = isFile || hasAuthority;
          t1 = path == null;
          if (t1 && true)
            return isFile ? "/" : "";
          t1 = !t1;
          if (t1)
            ;
          result = t1 ? P.Uri__normalize(path, start, end, C.List_qg4) : C.JSNull_methods.map$1(pathSegments, new P.Uri__makePath_closure()).join$1(0, "/");
          if (result.length === 0) {
            if (isFile)
              return "/";
          } else if (ensureLeadingSlash && !C.JSString_methods.startsWith$1(result, "/"))
            result = "/" + result;
          return P.Uri__normalizePath(result, scheme, hasAuthority);
        }, Uri__normalizePath: function(path, scheme, hasAuthority) {
          if (scheme.length === 0 && !hasAuthority && !C.JSString_methods.startsWith$1(path, "/"))
            return P.Uri__normalizeRelativePath(path);
          return P.Uri__removeDotSegments(path);
        }, Uri__makeQuery: function(query, start, end, queryParameters) {
          var t1, t2, result;
          t1 = {};
          t2 = query == null;
          if (t2 && true)
            return;
          t2 = !t2;
          if (t2)
            ;
          if (t2)
            return P.Uri__normalize(query, start, end, C.List_CVk);
          result = new P.StringBuffer("");
          t1._captured_first_0 = true;
          C.JSNull_methods.forEach$1(queryParameters, new P.Uri__makeQuery_closure(t1, result));
          t1 = result._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__makeFragment: function(fragment, start, end) {
          return P.Uri__normalize(fragment, start, end, C.List_CVk);
        }, Uri__isHexDigit: function($char) {
          if (57 >= $char)
            return 48 <= $char;
          $char |= 32;
          return 97 <= $char && 102 >= $char;
        }, Uri__hexValue: function($char) {
          if (57 >= $char)
            return $char - 48;
          return ($char | 32) - 87;
        }, Uri__normalizeEscape: function(source, index, lowerCase) {
          var t1, firstDigit, secondDigit, value;
          if (typeof index !== "number")
            return index.$add();
          t1 = index + 2;
          if (t1 >= source.length)
            return "%";
          firstDigit = C.JSString_methods.codeUnitAt$1(source, index + 1);
          secondDigit = C.JSString_methods.codeUnitAt$1(source, t1);
          if (!P.Uri__isHexDigit(firstDigit) || !P.Uri__isHexDigit(secondDigit))
            return "%";
          value = P.Uri__hexValue(firstDigit) * 16 + P.Uri__hexValue(secondDigit);
          if (value < 127) {
            t1 = C.JSInt_methods._shrOtherPositive$1(value, 4);
            if (t1 >= 8)
              return H.ioore(C.List_nxB, t1);
            t1 = (C.List_nxB[t1] & C.JSInt_methods._shlPositive$1(1, value & 15)) !== 0;
          } else
            t1 = false;
          if (t1)
            return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
          if (firstDigit >= 97 || secondDigit >= 97)
            return C.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
          return;
        }, Uri__escapeChar: function($char) {
          var codeUnits, flag, encodedBytes, t1, index, $byte, t2, t3;
          if ($char < 128) {
            codeUnits = new Array(3);
            codeUnits.fixed$length = Array;
            codeUnits[0] = 37;
            codeUnits[1] = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $char >>> 4);
            codeUnits[2] = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $char & 15);
          } else {
            if ($char > 2047)
              if ($char > 65535) {
                flag = 240;
                encodedBytes = 4;
              } else {
                flag = 224;
                encodedBytes = 3;
              }
            else {
              flag = 192;
              encodedBytes = 2;
            }
            t1 = 3 * encodedBytes;
            codeUnits = new Array(t1);
            codeUnits.fixed$length = Array;
            for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
              $byte = C.JSInt_methods._shrReceiverPositive$1($char, 6 * encodedBytes) & 63 | flag;
              if (index >= t1)
                return H.ioore(codeUnits, index);
              codeUnits[index] = 37;
              t2 = index + 1;
              t3 = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $byte >>> 4);
              if (t2 >= t1)
                return H.ioore(codeUnits, t2);
              codeUnits[t2] = t3;
              t3 = index + 2;
              t2 = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $byte & 15);
              if (t3 >= t1)
                return H.ioore(codeUnits, t3);
              codeUnits[t3] = t2;
              index += 3;
            }
          }
          return P.String_String$fromCharCodes(codeUnits, 0, null);
        }, Uri__normalize: function(component, start, end, charTable) {
          var index, sectionStart, buffer, $char, t1, replacement, sourceLength, tail;
          index = start;
          sectionStart = index;
          buffer = null;
          while (true) {
            if (typeof index !== "number")
              return index.$lt();
            if (typeof end !== "number")
              return H.iae(end);
            if (!(index < end))
              break;
            c$0: {
              $char = C.JSString_methods.codeUnitAt$1(component, index);
              if ($char < 127) {
                t1 = $char >>> 4;
                if (t1 >= 8)
                  return H.ioore(charTable, t1);
                t1 = (charTable[t1] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
              } else
                t1 = false;
              if (t1)
                ++index;
              else {
                if ($char === 37) {
                  replacement = P.Uri__normalizeEscape(component, index, false);
                  if (replacement == null) {
                    index += 3;
                    break c$0;
                  }
                  if ("%" === replacement) {
                    replacement = "%25";
                    sourceLength = 1;
                  } else
                    sourceLength = 3;
                } else {
                  if ($char <= 93) {
                    t1 = $char >>> 4;
                    if (t1 >= 8)
                      return H.ioore(C.List_2Vk, t1);
                    t1 = (C.List_2Vk[t1] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
                  } else
                    t1 = false;
                  if (t1) {
                    P.Uri__fail(component, index, "Invalid character");
                    replacement = null;
                    sourceLength = null;
                  } else {
                    if (($char & 64512) === 55296) {
                      t1 = index + 1;
                      if (t1 < end) {
                        tail = C.JSString_methods.codeUnitAt$1(component, t1);
                        if ((tail & 64512) === 56320) {
                          $char = (65536 | ($char & 1023) << 10 | tail & 1023) >>> 0;
                          sourceLength = 2;
                        } else
                          sourceLength = 1;
                      } else
                        sourceLength = 1;
                    } else
                      sourceLength = 1;
                    replacement = P.Uri__escapeChar($char);
                  }
                }
                if (buffer == null)
                  buffer = new P.StringBuffer("");
                t1 = C.JSString_methods.substring$2(component, sectionStart, index);
                buffer._contents = buffer._contents + t1;
                buffer._contents += H.S(replacement);
                if (typeof sourceLength !== "number")
                  return H.iae(sourceLength);
                index += sourceLength;
                sectionStart = index;
              }
            }
          }
          if (buffer == null)
            return C.JSString_methods.substring$2(component, start, end);
          if (typeof sectionStart !== "number")
            return sectionStart.$lt();
          if (sectionStart < end)
            buffer._contents += C.JSString_methods.substring$2(component, sectionStart, end);
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__mayContainDotSegments: function(path) {
          if (C.JSString_methods.startsWith$1(path, "."))
            return true;
          return C.JSString_methods.indexOf$1(path, "/.") !== -1;
        }, Uri__removeDotSegments: function(path) {
          var output, t1, t2, appendSlash, _i, segment, t3;
          if (!P.Uri__mayContainDotSegments(path))
            return path;
          output = [];
          for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
            segment = t1[_i];
            if (J.$eq$(segment, "..")) {
              t3 = output.length;
              if (t3 !== 0) {
                if (0 >= t3)
                  return H.ioore(output, -1);
                output.pop();
                if (output.length === 0)
                  output.push("");
              }
              appendSlash = true;
            } else if ("." === segment)
              appendSlash = true;
            else {
              output.push(segment);
              appendSlash = false;
            }
          }
          if (appendSlash)
            output.push("");
          return C.JSArray_methods.join$1(output, "/");
        }, Uri__normalizeRelativePath: function(path) {
          var output, t1, t2, appendSlash, _i, segment;
          if (!P.Uri__mayContainDotSegments(path))
            return path;
          output = [];
          for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
            segment = t1[_i];
            if (".." === segment)
              if (output.length !== 0 && !J.$eq$(C.JSArray_methods.get$last(output), "..")) {
                if (0 >= output.length)
                  return H.ioore(output, -1);
                output.pop();
                appendSlash = true;
              } else {
                output.push("..");
                appendSlash = false;
              }
            else if ("." === segment)
              appendSlash = true;
            else {
              output.push(segment);
              appendSlash = false;
            }
          }
          t1 = output.length;
          if (t1 !== 0)
            if (t1 === 1) {
              if (0 >= t1)
                return H.ioore(output, 0);
              t1 = J.get$isEmpty$asx(output[0]) === true;
            } else
              t1 = false;
          else
            t1 = true;
          if (t1)
            return "./";
          if (appendSlash || J.$eq$(C.JSArray_methods.get$last(output), ".."))
            output.push("");
          return C.JSArray_methods.join$1(output, "/");
        }, Uri_parseIPv4Address: function(host) {
          var t1, bytes;
          t1 = new P.Uri_parseIPv4Address_error();
          bytes = host.split(".");
          if (bytes.length !== 4)
            t1.call$1("IPv4 address should contain exactly 4 parts");
          return H.setRuntimeTypeInfo(new H.MappedListIterable(bytes, new P.Uri_parseIPv4Address_closure(t1)), [null, null]).toList$0(0);
        }, Uri_parseIPv6Address: function(host, start, end) {
          var error, parseHex, parts, partStart, last, i, wildcardSeen, t1, atEnd, isLastWildcard, exception, bytes, index, value, wildCardLength, j, t2;
          if (end == null)
            end = J.get$length$asx(host);
          error = new P.Uri_parseIPv6Address_error(host);
          parseHex = new P.Uri_parseIPv6Address_parseHex(host, error);
          if (J.get$length$asx(host) < 2)
            error.call$1("address is too short");
          parts = [];
          partStart = start;
          i = start;
          wildcardSeen = false;
          while (true) {
            t1 = end;
            if (typeof i !== "number")
              return i.$lt();
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            if (J.codeUnitAt$1$s(host, i) === 58) {
              if (i === start) {
                ++i;
                if (J.codeUnitAt$1$s(host, i) !== 58)
                  error.call$2("invalid start colon.", i);
                partStart = i;
              }
              if (i === partStart) {
                if (wildcardSeen)
                  error.call$2("only one wildcard `::` is allowed", i);
                J.add$1$ax(parts, -1);
                wildcardSeen = true;
              } else
                J.add$1$ax(parts, parseHex.call$2(partStart, i));
              partStart = i + 1;
            }
            ++i;
          }
          if (J.get$length$asx(parts) === 0)
            error.call$1("too few parts");
          atEnd = J.$eq$(partStart, end);
          isLastWildcard = J.$eq$(J.get$last$ax(parts), -1);
          if (atEnd && !isLastWildcard)
            error.call$2("expected a part after last `:`", end);
          if (!atEnd)
            try {
              J.add$1$ax(parts, parseHex.call$2(partStart, end));
            } catch (exception) {
              H.unwrapException(exception);
              try {
                last = P.Uri_parseIPv4Address(J.substring$2$s(host, partStart, end));
                J.add$1$ax(parts, J.$or$n(J.$shl$n(J.$index$asx(last, 0), 8), J.$index$asx(last, 1)));
                J.add$1$ax(parts, J.$or$n(J.$shl$n(J.$index$asx(last, 2), 8), J.$index$asx(last, 3)));
              } catch (exception) {
                H.unwrapException(exception);
                error.call$2("invalid end of IPv6 address.", partStart);
              }
            }
          if (wildcardSeen) {
            if (J.get$length$asx(parts) > 7)
              error.call$1("an address with a wildcard must have less than 7 parts");
          } else if (J.get$length$asx(parts) !== 8)
            error.call$1("an address without a wildcard must contain exactly 8 parts");
          bytes = H.setRuntimeTypeInfo(new Array(16), [P.$int]);
          i = 0;
          index = 0;
          while (true) {
            t1 = J.get$length$asx(parts);
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            value = J.$index$asx(parts, i);
            t1 = J.getInterceptor(value);
            if (t1.$eq(value, -1)) {
              wildCardLength = 9 - J.get$length$asx(parts);
              for (j = 0; j < wildCardLength; ++j) {
                if (index < 0 || index >= 16)
                  return H.ioore(bytes, index);
                bytes[index] = 0;
                t1 = index + 1;
                if (t1 >= 16)
                  return H.ioore(bytes, t1);
                bytes[t1] = 0;
                index += 2;
              }
            } else {
              t2 = t1.$shr(value, 8);
              if (index < 0 || index >= 16)
                return H.ioore(bytes, index);
              bytes[index] = t2;
              t2 = index + 1;
              t1 = t1.$and(value, 255);
              if (t2 >= 16)
                return H.ioore(bytes, t2);
              bytes[t2] = t1;
              index += 2;
            }
            ++i;
          }
          return bytes;
        }, Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
          var t1, result, bytes, t2, i, $byte, t3;
          t1 = new P.Uri__uriEncode_byteToHex();
          result = new P.StringBuffer("");
          bytes = encoding.get$encoder().convert$1(text);
          for (t2 = bytes.length, i = 0; i < t2; ++i) {
            $byte = bytes[i];
            if ($byte < 128) {
              t3 = $byte >>> 4;
              if (t3 >= 8)
                return H.ioore(canonicalTable, t3);
              t3 = (canonicalTable[t3] & C.JSInt_methods._shlPositive$1(1, $byte & 15)) !== 0;
            } else
              t3 = false;
            if (t3)
              result._contents += H.Primitives_stringFromCharCode($byte);
            else if (spaceToPlus && $byte === 32)
              result._contents += H.Primitives_stringFromCharCode(43);
            else {
              result._contents += H.Primitives_stringFromCharCode(37);
              t1.call$2($byte, result);
            }
          }
          t1 = result._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }}
    },
    Uri_parse_parseAuth: {
      "^": "Closure:2;_core$_box_0,_captured_uri_1,_captured_EOI_2",
      call$0: function() {
        var t1, hostStart, t2, $char, lastColon, lastAt, t3, t4, char0, endBracket, hostEnd, i, portNumber, digit;
        t1 = this._core$_box_0;
        hostStart = t1._captured_index_5;
        t2 = t1._captured_end_0;
        if (hostStart == null ? t2 == null : hostStart === t2) {
          t1._captured_char_6 = this._captured_EOI_2;
          return;
        }
        t2 = this._captured_uri_1;
        t1._captured_char_6 = C.JSString_methods.codeUnitAt$1(t2, hostStart);
        $char = this._captured_EOI_2;
        lastColon = -1;
        lastAt = -1;
        while (true) {
          t3 = t1._captured_index_5;
          t4 = t1._captured_end_0;
          if (typeof t3 !== "number")
            return t3.$lt();
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (!(t3 < t4))
            break;
          char0 = C.JSString_methods.codeUnitAt$1(t2, t3);
          t1._captured_char_6 = char0;
          if (char0 === 47 || char0 === 63 || char0 === 35)
            break;
          if (char0 === 64) {
            lastAt = t1._captured_index_5;
            lastColon = -1;
          } else if (char0 === 58)
            lastColon = t1._captured_index_5;
          else if (char0 === 91) {
            t3 = t1._captured_index_5;
            if (typeof t3 !== "number")
              return t3.$add();
            endBracket = C.JSString_methods.indexOf$2(t2, "]", t3 + 1);
            if (endBracket === -1) {
              t1._captured_index_5 = t1._captured_end_0;
              t1._captured_char_6 = $char;
              lastColon = -1;
              break;
            } else
              t1._captured_index_5 = endBracket;
            lastColon = -1;
          }
          t3 = t1._captured_index_5;
          if (typeof t3 !== "number")
            return t3.$add();
          t1._captured_index_5 = t3 + 1;
          t1._captured_char_6 = $char;
        }
        hostEnd = t1._captured_index_5;
        if (typeof lastAt !== "number")
          return lastAt.$ge();
        if (lastAt >= 0) {
          t1._captured_userinfo_2 = P.Uri__makeUserInfo(t2, hostStart, lastAt);
          hostStart = lastAt + 1;
        }
        if (typeof lastColon !== "number")
          return lastColon.$ge();
        if (lastColon >= 0) {
          i = lastColon + 1;
          t3 = t1._captured_index_5;
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (i < t3) {
            portNumber = 0;
            while (true) {
              t3 = t1._captured_index_5;
              if (typeof t3 !== "number")
                return H.iae(t3);
              if (!(i < t3))
                break;
              digit = C.JSString_methods.codeUnitAt$1(t2, i);
              if (48 > digit || 57 < digit)
                P.Uri__fail(t2, i, "Invalid port number");
              portNumber = portNumber * 10 + (digit - 48);
              ++i;
            }
          } else
            portNumber = null;
          t1._captured_port_4 = P.Uri__makePort(portNumber, t1._captured_scheme_1);
          hostEnd = lastColon;
        }
        t1._captured_host_3 = P.Uri__makeHost(t2, hostStart, hostEnd, true);
        t3 = t1._captured_index_5;
        t4 = t1._captured_end_0;
        if (typeof t3 !== "number")
          return t3.$lt();
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (t3 < t4)
          t1._captured_char_6 = C.JSString_methods.codeUnitAt$1(t2, t3);
      }
    },
    Uri__makePath_closure: {
      "^": "Closure:1;",
      call$1: function(s) {
        return P.Uri__uriEncode(C.List_qg40, s, C.Utf8Codec_false, false);
      }
    },
    Uri__makeQuery_closure: {
      "^": "Closure:3;_core$_box_0,_core$_captured_result_1",
      call$2: function(key, value) {
        var t1 = this._core$_box_0;
        if (!t1._captured_first_0)
          this._core$_captured_result_1._contents += "&";
        t1._captured_first_0 = false;
        t1 = this._core$_captured_result_1;
        t1._contents += P.Uri__uriEncode(C.List_nxB, key, C.Utf8Codec_false, true);
        if (!value.get$isEmpty(value)) {
          t1._contents += "=";
          t1._contents += P.Uri__uriEncode(C.List_nxB, value, C.Utf8Codec_false, true);
        }
      }
    },
    Uri_hashCode_combine: {
      "^": "Closure:46;",
      call$2: function(part, current) {
        return current * 31 + J.get$hashCode$(part) & 1073741823;
      }
    },
    Uri_parseIPv4Address_error: {
      "^": "Closure:37;",
      call$1: function(msg) {
        throw H.wrapException(new P.FormatException("Illegal IPv4 address, " + msg, null, null));
      }
    },
    Uri_parseIPv4Address_closure: {
      "^": "Closure:1;_captured_error_0",
      call$1: [function(byteString) {
        var $byte, t1;
        $byte = H.Primitives_parseInt(byteString, null, null);
        t1 = J.getInterceptor$n($byte);
        if (t1.$lt($byte, 0) === true || t1.$gt($byte, 255) === true)
          this._captured_error_0.call$1("each part must be in the range of `0..255`");
        return $byte;
      }, null, null, 2, 0, null, 56, "call"]
    },
    Uri_parseIPv6Address_error: {
      "^": "Closure:49;_captured_host_0",
      call$2: function(msg, position) {
        throw H.wrapException(new P.FormatException("Illegal IPv6 address, " + msg, this._captured_host_0, position));
      },
      call$1: function(msg) {
        return this.call$2(msg, null);
      }
    },
    Uri_parseIPv6Address_parseHex: {
      "^": "Closure:59;_captured_host_1,_captured_error_2",
      call$2: function(start, end) {
        var value, t1;
        if (typeof end !== "number")
          return end.$sub();
        if (typeof start !== "number")
          return H.iae(start);
        if (end - start > 4)
          this._captured_error_2.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
        value = H.Primitives_parseInt(C.JSString_methods.substring$2(this._captured_host_1, start, end), 16, null);
        t1 = J.getInterceptor$n(value);
        if (t1.$lt(value, 0) === true || t1.$gt(value, 65535) === true)
          this._captured_error_2.call$2("each part must be in the range of `0x0..0xFFFF`", start);
        return value;
      }
    },
    Uri__uriEncode_byteToHex: {
      "^": "Closure:3;",
      call$2: function($byte, buffer) {
        var t1 = J.getInterceptor$n($byte);
        buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$shr($byte, 4)));
        buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$and($byte, 15)));
      }
    }
  }], ["dart.dom.html", "dart:html",, W, {
    "^": "",
    CssStyleDeclaration__camelCase: function(hyphenated) {
      return hyphenated.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, C.JS_CONST_s8I);
    },
    HttpRequest_request: function(url, method, mimeType, onProgress, requestHeaders, responseType, sendData, withCredentials) {
      var completer, xhr, t1;
      completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [W.HttpRequest])), [W.HttpRequest]);
      xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, method, url, true);
      requestHeaders.forEach$1(0, new W.HttpRequest_request_closure(xhr));
      t1 = H.setRuntimeTypeInfo(new W._EventStream(xhr, "load", false), [null]);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(new W.HttpRequest_request_closure0(completer, xhr)), false), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = H.setRuntimeTypeInfo(new W._EventStream(xhr, "error", false), [null]);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(completer.get$completeError()), false), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      xhr.send();
      return completer.future;
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    _convertNativeToDart_Window: function(win) {
      if (win == null)
        return;
      return W._DOMWindowCrossFrame__createSafe(win);
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if (e == null)
        return;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        if (!!J.getInterceptor($window).$isEventTarget)
          return $window;
        return;
      } else
        return e;
    },
    _convertNativeToDart_XHR_Response: function(o) {
      var t1;
      if (!!J.getInterceptor(o).$isDocument)
        return o;
      t1 = new P._AcceptStructuredCloneDart2Js([], [], false);
      t1.mustCopy = true;
      return t1.walk$1(o);
    },
    _wrapZone: function(callback) {
      if (J.$eq$($.Zone__current, C.C__RootZone))
        return callback;
      if (callback == null)
        return;
      return $.Zone__current.bindUnaryCallback$2$runGuarded(callback, true);
    },
    HtmlElement: {
      "^": "Element;",
      $isHtmlElement: 1,
      $isElement: 1,
      $isObject: 1,
      "%": "HTMLAppletElement|HTMLBRElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFontElement|HTMLFrameElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLMarqueeElement|HTMLModElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPictureElement|HTMLPreElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|PluginPlaceholderElement;HTMLElement"
    },
    _EntryArray: {
      "^": "Interceptor;",
      $isList: 1,
      $asList: function() {
        return [W.Entry];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Entry];
      },
      "%": "EntryArray"
    },
    AnchorElement: {
      "^": "HtmlElement;target=,type=",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isInterceptor: 1,
      $isObject: 1,
      "%": "HTMLAnchorElement"
    },
    AnimationPlayer: {
      "^": "EventTarget;",
      cancel$0: function(receiver) {
        return receiver.cancel();
      },
      pause$0: function(receiver) {
        return receiver.pause();
      },
      "%": "AnimationPlayer"
    },
    AreaElement: {
      "^": "HtmlElement;target=",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isInterceptor: 1,
      $isObject: 1,
      "%": "HTMLAreaElement"
    },
    AudioTrack: {
      "^": "Interceptor;id=",
      "%": "AudioTrack"
    },
    AudioTrackList: {
      "^": "EventTarget;length=",
      "%": "AudioTrackList"
    },
    BaseElement: {
      "^": "HtmlElement;target=",
      "%": "HTMLBaseElement"
    },
    Blob: {
      "^": "Interceptor;type=",
      close$0: function(receiver) {
        return receiver.close();
      },
      $isBlob: 1,
      "%": ";Blob"
    },
    BodyElement: {
      "^": "HtmlElement;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "HTMLBodyElement"
    },
    ButtonElement: {
      "^": "HtmlElement;name=,type=,value=",
      "%": "HTMLButtonElement"
    },
    CacheStorage: {
      "^": "Interceptor;",
      keys$0: [function(receiver) {
        return receiver.keys();
      }, "call$0", "get$keys", 0, 0, 25],
      "%": "CacheStorage"
    },
    CanvasElement: {
      "^": "HtmlElement;",
      $isObject: 1,
      "%": "HTMLCanvasElement"
    },
    CanvasRenderingContext2D: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "CanvasRenderingContext2D"
    },
    CharacterData: {
      "^": "Node;length=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "CDATASection|Comment|Text;CharacterData"
    },
    Credential: {
      "^": "Interceptor;avatarUrl:avatarURL=,id=",
      "%": "Credential|FederatedCredential|LocalCredential"
    },
    CryptoKey: {
      "^": "Interceptor;type=",
      "%": "CryptoKey"
    },
    CssRule: {
      "^": "Interceptor;type=",
      $isObject: 1,
      "%": "CSSCharsetRule|CSSFontFaceRule|CSSImportRule|CSSKeyframeRule|CSSKeyframesRule|CSSMediaRule|CSSPageRule|CSSRule|CSSStyleRule|CSSSupportsRule|CSSUnknownRule|CSSViewportRule|MozCSSKeyframeRule|MozCSSKeyframesRule|WebKitCSSFilterRule|WebKitCSSKeyframeRule|WebKitCSSKeyframesRule"
    },
    CssStyleDeclaration: {
      "^": "Interceptor_CssStyleDeclarationBase;length=",
      getPropertyValue$1: function(receiver, propertyName) {
        var propValue = this._getPropertyValueHelper$1(receiver, propertyName);
        return propValue != null ? propValue : "";
      },
      _getPropertyValueHelper$1: function(receiver, propertyName) {
        if (W.CssStyleDeclaration__camelCase(propertyName) in receiver)
          return receiver.getPropertyValue(propertyName);
        else
          return receiver.getPropertyValue(P.Device_cssPrefix() + propertyName);
      },
      get$content: function(receiver) {
        return receiver.content;
      },
      "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
    },
    Interceptor_CssStyleDeclarationBase: {
      "^": "Interceptor+CssStyleDeclarationBase;"
    },
    CssStyleDeclarationBase: {
      "^": "Object;",
      get$content: function(receiver) {
        return this.getPropertyValue$1(receiver, "content");
      },
      get$locale: function(receiver) {
        return this.getPropertyValue$1(receiver, "locale");
      }
    },
    CustomEvent: {
      "^": "Event;",
      get$detail: function(receiver) {
        var t1, t2;
        t1 = receiver._dartDetail;
        if (t1 != null)
          return t1;
        t1 = receiver.detail;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = true;
        return t2.walk$1(t1);
      },
      "%": "CustomEvent"
    },
    DataTransfer: {
      "^": "Interceptor;dropEffect=,effectAllowed=,files=,types=",
      "%": "DataTransfer"
    },
    DataTransferItem: {
      "^": "Interceptor;type=",
      $isDataTransferItem: 1,
      $isObject: 1,
      "%": "DataTransferItem"
    },
    DataTransferItemList: {
      "^": "Interceptor;length=",
      add$2: function(receiver, data_OR_file, type) {
        return receiver.add(data_OR_file, type);
      },
      add$1: function($receiver, data_OR_file) {
        return $receiver.add(data_OR_file);
      },
      remove$1: function(receiver, index) {
        return receiver.remove(index);
      },
      $index: function(receiver, index) {
        return receiver[index];
      },
      "%": "DataTransferItemList"
    },
    DeviceLightEvent: {
      "^": "Event;value=",
      "%": "DeviceLightEvent"
    },
    Document: {
      "^": "Node;",
      $isDocument: 1,
      "%": "XMLDocument;Document"
    },
    DocumentFragment: {
      "^": "Node;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "DocumentFragment|ShadowRoot"
    },
    DomException: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "DOMException"
    },
    DomIterator: {
      "^": "Interceptor;",
      next$1: [function(receiver, value) {
        return receiver.next(value);
      }, function($receiver) {
        return $receiver.next();
      }, "next$0", "call$1", "call$0", "get$next", 0, 2, 28, 0],
      $isDomIterator: 1,
      $isObject: 1,
      "%": "Iterator"
    },
    DomRectReadOnly: {
      "^": "Interceptor;height=,left=,top=,width=",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
      },
      $eq: function(receiver, other) {
        var t1, t2, t3;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isRectangle)
          return false;
        t2 = receiver.left;
        t3 = t1.get$left(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.top;
          t3 = t1.get$top(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = this.get$width(receiver);
            t3 = t1.get$width(other);
            if (t2 == null ? t3 == null : t2 === t3) {
              t2 = this.get$height(receiver);
              t1 = t1.get$height(other);
              t1 = t2 == null ? t1 == null : t2 === t1;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(receiver) {
        var t1, t2, t3, t4;
        t1 = J.get$hashCode$(receiver.left);
        t2 = J.get$hashCode$(receiver.top);
        t3 = J.get$hashCode$(this.get$width(receiver));
        t4 = J.get$hashCode$(this.get$height(receiver));
        return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
      },
      $isRectangle: 1,
      $asRectangle: Isolate.functionThatReturnsNull,
      $isObject: 1,
      "%": ";DOMRectReadOnly"
    },
    DomSettableTokenList: {
      "^": "DomTokenList;value=",
      "%": "DOMSettableTokenList"
    },
    DomStringList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      contains$1: function(receiver, string) {
        return receiver.contains(string);
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "DOMStringList"
    },
    Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin: {
      "^": "Interceptor_ListMixin+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      }
    },
    DomTokenList: {
      "^": "Interceptor;length=",
      add$1: function(receiver, tokens) {
        return receiver.add(tokens);
      },
      contains$1: function(receiver, token) {
        return receiver.contains(token);
      },
      remove$1: function(receiver, tokens) {
        return receiver.remove(tokens);
      },
      "%": ";DOMTokenList"
    },
    Element: {
      "^": "Node;title=,id=",
      get$attributes: function(receiver) {
        return new W._ElementAttributeMap(receiver);
      },
      toString$0: function(receiver) {
        return receiver.localName;
      },
      $isElement: 1,
      $isObject: 1,
      $isInterceptor: 1,
      $isEventTarget: 1,
      "%": ";Element"
    },
    EmbedElement: {
      "^": "HtmlElement;name=,type=",
      "%": "HTMLEmbedElement"
    },
    Entry: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "DirectoryEntry|Entry|FileEntry"
    },
    ErrorEvent: {
      "^": "Event;error=",
      "%": "ErrorEvent"
    },
    Event: {
      "^": "Interceptor;bubbles=,cancelable=,clipboardData=,defaultPrevented=,eventPhase=,timeStamp=,type=",
      get$currentTarget: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.currentTarget);
      },
      get$target: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.target);
      },
      preventDefault$0: function(receiver) {
        return receiver.preventDefault();
      },
      stopPropagation$0: function(receiver) {
        return receiver.stopPropagation();
      },
      $isEvent: 1,
      $isObject: 1,
      "%": "AnimationPlayerEvent|ApplicationCacheErrorEvent|AudioProcessingEvent|AutocompleteErrorEvent|BeforeUnloadEvent|CloseEvent|DeviceMotionEvent|DeviceOrientationEvent|ExtendableEvent|FetchEvent|FontFaceSetLoadEvent|GamepadEvent|HashChangeEvent|IDBVersionChangeEvent|InstallEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaQueryListEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|ProgressEvent|PushEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|RTCPeerConnectionIceEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechRecognitionEvent|SpeechSynthesisEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent;ClipboardEvent|Event|InputEvent"
    },
    EventSource: {
      "^": "EventTarget;",
      close$0: function(receiver) {
        return receiver.close();
      },
      "%": "EventSource"
    },
    EventTarget: {
      "^": "Interceptor;",
      _addEventListener$3: function(receiver, type, listener, useCapture) {
        return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), false);
      },
      _removeEventListener$3: function(receiver, type, listener, useCapture) {
        return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), false);
      },
      $isEventTarget: 1,
      "%": "ApplicationCache|AudioContext|BatteryManager|DOMApplicationCache|MIDIAccess|MediaQueryList|MediaSource|OfflineAudioContext|OfflineResourceList|Performance|Presentation|RTCDTMFSender|ServiceWorkerRegistration|SpeechRecognition|SpeechSynthesisUtterance|webkitAudioContext;EventTarget;EventTarget_ListMixin|EventTarget_ListMixin_ImmutableListMixin|EventTarget_ListMixin0|EventTarget_ListMixin_ImmutableListMixin0"
    },
    FieldSetElement: {
      "^": "HtmlElement;name=,type=",
      "%": "HTMLFieldSetElement"
    },
    File: {
      "^": "Blob;",
      $isFile: 1,
      $isObject: 1,
      "%": "File"
    },
    FileList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin0;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isFileList: 1,
      $isList: 1,
      $asList: function() {
        return [W.File];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.File];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "FileList"
    },
    Interceptor_ListMixin0: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.File];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.File];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin0: {
      "^": "Interceptor_ListMixin0+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.File];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.File];
      }
    },
    FileReader: {
      "^": "EventTarget;error=",
      get$result: function(receiver) {
        var res = receiver.result;
        if (!!J.getInterceptor(res).$isByteBuffer)
          return new Uint8Array(res, 0);
        return res;
      },
      "%": "FileReader"
    },
    FileStream: {
      "^": "Interceptor;type=",
      "%": "Stream"
    },
    FileWriter: {
      "^": "EventTarget;error=,length=",
      "%": "FileWriter"
    },
    FocusEvent: {
      "^": "UIEvent;",
      get$relatedTarget: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.relatedTarget);
      },
      "%": "FocusEvent"
    },
    FontFace: {
      "^": "Interceptor;",
      $isFontFace: 1,
      $isObject: 1,
      "%": "FontFace"
    },
    FontFaceSet: {
      "^": "EventTarget;",
      add$1: function(receiver, fontFace) {
        return receiver.add(fontFace);
      },
      forEach$2: function(receiver, callback, thisArg) {
        return receiver.forEach(H.convertDartClosureToJS(callback, 3), thisArg);
      },
      forEach$1: function($receiver, callback) {
        callback = H.convertDartClosureToJS(callback, 3);
        return $receiver.forEach(callback);
      },
      "%": "FontFaceSet"
    },
    FormElement: {
      "^": "HtmlElement;length=,name=,target=",
      "%": "HTMLFormElement"
    },
    Gamepad: {
      "^": "Interceptor;id=",
      $isObject: 1,
      "%": "Gamepad"
    },
    GamepadButton: {
      "^": "Interceptor;value=",
      "%": "GamepadButton"
    },
    GeofencingRegion: {
      "^": "Interceptor;id=",
      "%": "CircularGeofencingRegion|GeofencingRegion"
    },
    Headers: {
      "^": "Interceptor;",
      forEach$2: function(receiver, callback, thisArg) {
        return receiver.forEach(H.convertDartClosureToJS(callback, 3), thisArg);
      },
      forEach$1: function($receiver, callback) {
        callback = H.convertDartClosureToJS(callback, 3);
        return $receiver.forEach(callback);
      },
      "%": "Headers"
    },
    History: {
      "^": "Interceptor;length=",
      get$state: function(receiver) {
        var t1, t2;
        t1 = receiver.state;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = true;
        return t2.walk$1(t1);
      },
      $isObject: 1,
      "%": "History"
    },
    HtmlCollection: {
      "^": "Interceptor_ListMixin_ImmutableListMixin1;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
    },
    Interceptor_ListMixin1: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin1: {
      "^": "Interceptor_ListMixin1+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    HtmlDocument: {
      "^": "Document;body=",
      get$title: function(receiver) {
        return receiver.title;
      },
      "%": "HTMLDocument"
    },
    HttpRequest: {
      "^": "HttpRequestEventTarget;",
      open$5$async$password$user: function(receiver, method, url, async, password, user) {
        return receiver.open(method, url, true, user, password);
      },
      open$3$async: function($receiver, method, url, async) {
        return $receiver.open(method, url, async);
      },
      get$response: function(receiver) {
        return W._convertNativeToDart_XHR_Response(receiver.response);
      },
      send$1: function(receiver, data) {
        return receiver.send(data);
      },
      $isHttpRequest: 1,
      $isObject: 1,
      "%": "XMLHttpRequest"
    },
    HttpRequest_request_closure: {
      "^": "Closure:3;_captured_xhr_0",
      call$2: function(header, value) {
        this._captured_xhr_0.setRequestHeader(header, value);
      }
    },
    HttpRequest_request_closure0: {
      "^": "Closure:1;_html$_captured_completer_1,_captured_xhr_2",
      call$1: [function(e) {
        var t1, t2, accepted, unknownRedirect, t3;
        t1 = this._captured_xhr_2;
        t2 = t1.status;
        if (typeof t2 !== "number")
          return t2.$ge();
        accepted = t2 >= 200 && t2 < 300;
        unknownRedirect = t2 > 307 && t2 < 400;
        t2 = accepted || t2 === 0 || t2 === 304 || unknownRedirect;
        t3 = this._html$_captured_completer_1;
        if (t2)
          t3.complete$1(0, t1);
        else
          t3.completeError$1(e);
      }, null, null, 2, 0, null, 1, "call"]
    },
    HttpRequestEventTarget: {
      "^": "EventTarget;",
      "%": "XMLHttpRequestUpload;XMLHttpRequestEventTarget"
    },
    IFrameElement: {
      "^": "HtmlElement;name=",
      "%": "HTMLIFrameElement"
    },
    ImageData: {
      "^": "Interceptor;",
      $isImageData: 1,
      "%": "ImageData"
    },
    ImageElement: {
      "^": "HtmlElement;",
      complete$1: function($receiver, arg0) {
        return $receiver.complete.call$1(arg0);
      },
      complete$0: function($receiver) {
        return $receiver.complete.call$0();
      },
      $isObject: 1,
      "%": "HTMLImageElement"
    },
    InputElement: {
      "^": "HtmlElement;checked=,files=,name=,type=,value=",
      $isElement: 1,
      $isInterceptor: 1,
      $isObject: 1,
      $isEventTarget: 1,
      $isNode: 1,
      "%": "HTMLInputElement"
    },
    InputMethodContext: {
      "^": "EventTarget;locale=,target=",
      "%": "InputMethodContext"
    },
    KeyboardEvent: {
      "^": "UIEvent;altKey=,ctrlKey=,location=,metaKey=,repeat=,shiftKey=",
      get$keyCode: function(receiver) {
        return receiver.keyCode;
      },
      get$charCode: function(receiver) {
        return receiver.charCode;
      },
      $isKeyboardEvent: 1,
      $isEvent: 1,
      $isObject: 1,
      "%": "KeyboardEvent"
    },
    KeygenElement: {
      "^": "HtmlElement;name=,type=",
      "%": "HTMLKeygenElement"
    },
    LIElement: {
      "^": "HtmlElement;value=",
      "%": "HTMLLIElement"
    },
    LinkElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLLinkElement"
    },
    Location: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isObject: 1,
      "%": "Location"
    },
    MapElement: {
      "^": "HtmlElement;name=",
      "%": "HTMLMapElement"
    },
    MediaController: {
      "^": "EventTarget;",
      pause$0: function(receiver) {
        return receiver.pause();
      },
      "%": "MediaController"
    },
    MediaElement: {
      "^": "HtmlElement;error=",
      pause$0: function(receiver) {
        return receiver.pause();
      },
      "%": "HTMLAudioElement;HTMLMediaElement"
    },
    MediaKeySession: {
      "^": "EventTarget;error=",
      "%": "MediaKeySession"
    },
    MediaList: {
      "^": "Interceptor;length=",
      "%": "MediaList"
    },
    MediaStream: {
      "^": "EventTarget;id=",
      "%": "MediaStream"
    },
    MediaStreamEvent: {
      "^": "Event;stream=",
      "%": "MediaStreamEvent"
    },
    MediaStreamTrack: {
      "^": "EventTarget;id=",
      "%": "MediaStreamTrack"
    },
    MenuElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLMenuElement"
    },
    MenuItemElement: {
      "^": "HtmlElement;checked=,type=",
      "%": "HTMLMenuItemElement"
    },
    MessagePort: {
      "^": "EventTarget;",
      close$0: function(receiver) {
        return receiver.close();
      },
      "%": "MessagePort"
    },
    MetaElement: {
      "^": "HtmlElement;content=,name=",
      "%": "HTMLMetaElement"
    },
    MeterElement: {
      "^": "HtmlElement;value=",
      "%": "HTMLMeterElement"
    },
    MidiInputMap: {
      "^": "Interceptor;",
      keys$0: [function(receiver) {
        return receiver.keys();
      }, "call$0", "get$keys", 0, 0, 20],
      "%": "MIDIInputMap"
    },
    MidiOutput: {
      "^": "MidiPort;",
      send$2: function(receiver, data, timestamp) {
        return receiver.send(data, timestamp);
      },
      send$1: function($receiver, data) {
        return $receiver.send(data);
      },
      "%": "MIDIOutput"
    },
    MidiOutputMap: {
      "^": "Interceptor;",
      keys$0: [function(receiver) {
        return receiver.keys();
      }, "call$0", "get$keys", 0, 0, 20],
      "%": "MIDIOutputMap"
    },
    MidiPort: {
      "^": "EventTarget;id=,type=",
      "%": "MIDIInput;MIDIPort"
    },
    MimeType: {
      "^": "Interceptor;description=,type=",
      $isObject: 1,
      "%": "MimeType"
    },
    MimeTypeArray: {
      "^": "Interceptor_ListMixin_ImmutableListMixin2;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.MimeType];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.MimeType];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "MimeTypeArray"
    },
    Interceptor_ListMixin2: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.MimeType];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.MimeType];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin2: {
      "^": "Interceptor_ListMixin2+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.MimeType];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.MimeType];
      }
    },
    MouseEvent: {
      "^": "UIEvent;altKey=,button=,ctrlKey=,dataTransfer=,metaKey=,shiftKey=",
      get$relatedTarget: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.relatedTarget);
      },
      "%": ";DragEvent|MSPointerEvent|MouseEvent|PointerEvent"
    },
    MutationRecord: {
      "^": "Interceptor;target=,type=",
      "%": "MutationRecord"
    },
    Navigator: {
      "^": "Interceptor;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "Navigator"
    },
    NetworkInformation: {
      "^": "EventTarget;type=",
      "%": "NetworkInformation"
    },
    Node: {
      "^": "EventTarget;",
      toString$0: function(receiver) {
        var value = receiver.nodeValue;
        return value == null ? this.super$Interceptor$toString(receiver) : value;
      },
      contains$1: function(receiver, other) {
        return receiver.contains(other);
      },
      $isNode: 1,
      $isObject: 1,
      "%": ";Node"
    },
    NodeList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin3;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "NodeList|RadioNodeList"
    },
    Interceptor_ListMixin3: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin3: {
      "^": "Interceptor_ListMixin3+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Notification: {
      "^": "EventTarget;body=,title=",
      close$0: function(receiver) {
        return receiver.close();
      },
      "%": "Notification"
    },
    OListElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLOListElement"
    },
    ObjectElement: {
      "^": "HtmlElement;name=,type=",
      "%": "HTMLObjectElement"
    },
    OptionElement: {
      "^": "HtmlElement;value=",
      "%": "HTMLOptionElement"
    },
    OutputElement: {
      "^": "HtmlElement;name=,type=,value=",
      "%": "HTMLOutputElement"
    },
    ParamElement: {
      "^": "HtmlElement;name=,value=",
      "%": "HTMLParamElement"
    },
    Path2D: {
      "^": "Interceptor;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "Path2D"
    },
    PerformanceNavigation: {
      "^": "Interceptor;type=",
      "%": "PerformanceNavigation"
    },
    Plugin: {
      "^": "Interceptor;description=,length=",
      $isObject: 1,
      "%": "Plugin"
    },
    PluginArray: {
      "^": "Interceptor_ListMixin_ImmutableListMixin4;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Plugin];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Plugin];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "PluginArray"
    },
    Interceptor_ListMixin4: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Plugin];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Plugin];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin4: {
      "^": "Interceptor_ListMixin4+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Plugin];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Plugin];
      }
    },
    PopStateEvent: {
      "^": "Event;",
      get$state: function(receiver) {
        var t1, t2;
        t1 = receiver.state;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = true;
        return t2.walk$1(t1);
      },
      "%": "PopStateEvent"
    },
    ProcessingInstruction: {
      "^": "CharacterData;target=",
      "%": "ProcessingInstruction"
    },
    ProgressElement: {
      "^": "HtmlElement;value=",
      "%": "HTMLProgressElement"
    },
    ReadableStream: {
      "^": "Interceptor;state=",
      "%": "ReadableStream"
    },
    RelatedEvent: {
      "^": "Event;",
      get$relatedTarget: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.relatedTarget);
      },
      "%": "RelatedEvent"
    },
    RtcDataChannel: {
      "^": "EventTarget;id=",
      close$0: function(receiver) {
        return receiver.close();
      },
      send$1: function(receiver, data) {
        return receiver.send(data);
      },
      "%": "DataChannel|RTCDataChannel"
    },
    RtcPeerConnection: {
      "^": "EventTarget;",
      addStream$2: function(receiver, stream, mediaConstraints) {
        receiver.addStream(stream);
        return;
      },
      addStream$1: function($receiver, stream) {
        return this.addStream$2($receiver, stream, null);
      },
      close$0: function(receiver) {
        return receiver.close();
      },
      "%": "RTCPeerConnection|mozRTCPeerConnection"
    },
    RtcSessionDescription: {
      "^": "Interceptor;type=",
      "%": "RTCSessionDescription|mozRTCSessionDescription"
    },
    RtcStatsReport: {
      "^": "Interceptor;id=,type=",
      $isRtcStatsReport: 1,
      $isObject: 1,
      "%": "RTCStatsReport"
    },
    RtcStatsResponse: {
      "^": "Interceptor;",
      result$0: [function(receiver) {
        return receiver.result();
      }, "call$0", "get$result", 0, 0, 30],
      "%": "RTCStatsResponse"
    },
    ScreenOrientation: {
      "^": "EventTarget;type=",
      "%": "ScreenOrientation"
    },
    ScriptElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLScriptElement"
    },
    SelectElement: {
      "^": "HtmlElement;length=,name=,type=,value=",
      "%": "HTMLSelectElement"
    },
    Selection: {
      "^": "Interceptor;type=",
      "%": "Selection"
    },
    ServiceWorkerClient: {
      "^": "Interceptor;id=",
      "%": "ServiceWorkerClient"
    },
    SharedWorker: {
      "^": "EventTarget;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SharedWorker"
    },
    SourceBuffer: {
      "^": "EventTarget;",
      $isObject: 1,
      "%": "SourceBuffer"
    },
    SourceBufferList: {
      "^": "EventTarget_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.SourceBuffer];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SourceBuffer];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "SourceBufferList"
    },
    EventTarget_ListMixin: {
      "^": "EventTarget+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SourceBuffer];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SourceBuffer];
      }
    },
    EventTarget_ListMixin_ImmutableListMixin: {
      "^": "EventTarget_ListMixin+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SourceBuffer];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SourceBuffer];
      }
    },
    SourceElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLSourceElement"
    },
    SourceInfo: {
      "^": "Interceptor;id=",
      "%": "SourceInfo"
    },
    SpeechGrammar: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "SpeechGrammar"
    },
    SpeechGrammarList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin5;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechGrammar];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechGrammar];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "SpeechGrammarList"
    },
    Interceptor_ListMixin5: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechGrammar];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechGrammar];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin5: {
      "^": "Interceptor_ListMixin5+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechGrammar];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechGrammar];
      }
    },
    SpeechRecognitionError: {
      "^": "Event;error=",
      "%": "SpeechRecognitionError"
    },
    SpeechRecognitionResult: {
      "^": "Interceptor;length=",
      $isObject: 1,
      "%": "SpeechRecognitionResult"
    },
    SpeechSynthesis: {
      "^": "EventTarget;",
      cancel$0: function(receiver) {
        return receiver.cancel();
      },
      pause$0: function(receiver) {
        return receiver.pause();
      },
      resume$0: function(receiver) {
        return receiver.resume();
      },
      "%": "SpeechSynthesis"
    },
    Storage: {
      "^": "Interceptor;",
      containsKey$1: function(receiver, key) {
        return receiver.getItem(key) != null;
      },
      $index: function(receiver, key) {
        return receiver.getItem(key);
      },
      $indexSet: function(receiver, key, value) {
        receiver.setItem(key, value);
      },
      putIfAbsent$2: function(receiver, key, ifAbsent) {
        if (receiver.getItem(key) == null)
          receiver.setItem(key, ifAbsent.call$0());
        return receiver.getItem(key);
      },
      remove$1: function(receiver, key) {
        var value = receiver.getItem(key);
        receiver.removeItem(key);
        return value;
      },
      forEach$1: function(receiver, f) {
        var i, key;
        for (i = 0; true; ++i) {
          key = receiver.key(i);
          if (key == null)
            return;
          f.call$2(key, receiver.getItem(key));
        }
      },
      get$keys: function(receiver) {
        var keys = [];
        this.forEach$1(receiver, new W.Storage_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      get$isEmpty: function(receiver) {
        return receiver.key(0) == null;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.key(0) != null;
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, P.String];
      },
      $isObject: 1,
      "%": "Storage"
    },
    Storage_keys_closure: {
      "^": "Closure:3;_captured_keys_0",
      call$2: function(k, v) {
        return this._captured_keys_0.push(k);
      }
    },
    StorageEvent: {
      "^": "Event;key=",
      "%": "StorageEvent"
    },
    StyleElement: {
      "^": "HtmlElement;type=",
      "%": "HTMLStyleElement"
    },
    StyleMedia: {
      "^": "Interceptor;type=",
      "%": "StyleMedia"
    },
    StyleSheet: {
      "^": "Interceptor;title=,type=",
      $isObject: 1,
      "%": "CSSStyleSheet|StyleSheet"
    },
    TemplateElement: {
      "^": "HtmlElement;content=",
      "%": "HTMLTemplateElement"
    },
    TextAreaElement: {
      "^": "HtmlElement;name=,type=,value=",
      "%": "HTMLTextAreaElement"
    },
    TextTrack: {
      "^": "EventTarget;id=",
      $isObject: 1,
      "%": "TextTrack"
    },
    TextTrackCue: {
      "^": "EventTarget;id=",
      $isObject: 1,
      "%": "TextTrackCue|VTTCue"
    },
    TextTrackCueList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin6;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [W.TextTrackCue];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrackCue];
      },
      "%": "TextTrackCueList"
    },
    Interceptor_ListMixin6: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.TextTrackCue];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrackCue];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin6: {
      "^": "Interceptor_ListMixin6+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.TextTrackCue];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrackCue];
      }
    },
    TextTrackList: {
      "^": "EventTarget_ListMixin_ImmutableListMixin0;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.TextTrack];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrack];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "TextTrackList"
    },
    EventTarget_ListMixin0: {
      "^": "EventTarget+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.TextTrack];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrack];
      }
    },
    EventTarget_ListMixin_ImmutableListMixin0: {
      "^": "EventTarget_ListMixin0+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.TextTrack];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrack];
      }
    },
    TimeRanges: {
      "^": "Interceptor;length=",
      "%": "TimeRanges"
    },
    Touch: {
      "^": "Interceptor;",
      get$target: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.target);
      },
      $isObject: 1,
      "%": "Touch"
    },
    TouchEvent: {
      "^": "UIEvent;altKey=,changedTouches=,ctrlKey=,metaKey=,shiftKey=,targetTouches=,touches=",
      "%": "TouchEvent"
    },
    TouchList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin7;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Touch];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Touch];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "TouchList"
    },
    Interceptor_ListMixin7: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Touch];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Touch];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin7: {
      "^": "Interceptor_ListMixin7+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Touch];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Touch];
      }
    },
    UIEvent: {
      "^": "Event;detail=",
      get$view: function(receiver) {
        return W._convertNativeToDart_Window(receiver.view);
      },
      "%": "CompositionEvent|SVGZoomEvent|TextEvent;UIEvent"
    },
    Url: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isInterceptor: 1,
      $isObject: 1,
      "%": "URL"
    },
    VideoElement: {
      "^": "MediaElement;",
      $isObject: 1,
      "%": "HTMLVideoElement"
    },
    VideoTrack: {
      "^": "Interceptor;id=",
      "%": "VideoTrack"
    },
    VideoTrackList: {
      "^": "EventTarget;length=",
      "%": "VideoTrackList"
    },
    VttRegion: {
      "^": "Interceptor;id=",
      "%": "VTTRegion"
    },
    VttRegionList: {
      "^": "Interceptor;length=",
      "%": "VTTRegionList"
    },
    WebSocket: {
      "^": "EventTarget;",
      close$2: function(receiver, code, reason) {
        return receiver.close(code, reason);
      },
      close$0: function($receiver) {
        return $receiver.close();
      },
      send$1: function(receiver, data) {
        return receiver.send(data);
      },
      "%": "WebSocket"
    },
    WheelEvent: {
      "^": "MouseEvent;deltaZ=",
      get$deltaY: function(receiver) {
        if (receiver.deltaY !== undefined)
          return receiver.deltaY;
        throw H.wrapException(new P.UnsupportedError("deltaY is not supported"));
      },
      get$deltaX: function(receiver) {
        if (receiver.deltaX !== undefined)
          return receiver.deltaX;
        throw H.wrapException(new P.UnsupportedError("deltaX is not supported"));
      },
      get$deltaMode: function(receiver) {
        if (!!receiver.deltaMode)
          return receiver.deltaMode;
        return 0;
      },
      "%": "WheelEvent"
    },
    Window: {
      "^": "EventTarget;screenX=,screenY=",
      get$animationFrame: function(receiver) {
        var completer = H.setRuntimeTypeInfo(new P._SyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [P.num])), [P.num]);
        this._ensureRequestAnimationFrame$0(receiver);
        this._requestAnimationFrame$1(receiver, W._wrapZone(new W.Window_animationFrame_closure(completer)));
        return completer.future;
      },
      open$3: function(receiver, url, $name, options) {
        return W._DOMWindowCrossFrame__createSafe(receiver.open(url, $name));
      },
      open$2: function($receiver, url, $name) {
        return this.open$3($receiver, url, $name, null);
      },
      get$location: function(receiver) {
        return receiver.location;
      },
      _requestAnimationFrame$1: function(receiver, callback) {
        return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
      },
      _ensureRequestAnimationFrame$0: function(receiver) {
        if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
          return;
        (function($this) {
          var vendors = ['ms', 'moz', 'webkit', 'o'];
          for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
            $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
            $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
          }
          if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
            return;
          $this.requestAnimationFrame = function(callback) {
            return window.setTimeout(function() {
              callback(Date.now());
            }, 16);
          };
          $this.cancelAnimationFrame = function(id) {
            clearTimeout(id);
          };
        })(receiver);
      },
      close$0: function(receiver) {
        return receiver.close();
      },
      $isWindow: 1,
      $isInterceptor: 1,
      $isObject: 1,
      $isEventTarget: 1,
      "%": "DOMWindow|Window"
    },
    Window_animationFrame_closure: {
      "^": "Closure:1;_html$_captured_completer_0",
      call$1: [function(time) {
        this._html$_captured_completer_0.complete$1(0, time);
      }, null, null, 2, 0, null, 62, "call"]
    },
    Worker: {
      "^": "EventTarget;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "Worker"
    },
    WorkerGlobalScope: {
      "^": "EventTarget;location=",
      close$0: function(receiver) {
        return receiver.close();
      },
      $isInterceptor: 1,
      $isObject: 1,
      "%": "DedicatedWorkerGlobalScope|ServiceWorkerGlobalScope|SharedWorkerGlobalScope|WorkerGlobalScope"
    },
    _Attr: {
      "^": "Node;name=,value=",
      "%": "Attr"
    },
    _CSSValue: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "CSSPrimitiveValue;CSSValue;_CSSValue_ListMixin|_CSSValue_ListMixin_ImmutableListMixin"
    },
    _ClientRect: {
      "^": "Interceptor;height=,left=,top=,width=",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
      },
      $eq: function(receiver, other) {
        var t1, t2, t3;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isRectangle)
          return false;
        t2 = receiver.left;
        t3 = t1.get$left(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.top;
          t3 = t1.get$top(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = receiver.width;
            t3 = t1.get$width(other);
            if (t2 == null ? t3 == null : t2 === t3) {
              t2 = receiver.height;
              t1 = t1.get$height(other);
              t1 = t2 == null ? t1 == null : t2 === t1;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(receiver) {
        var t1, t2, t3, t4;
        t1 = J.get$hashCode$(receiver.left);
        t2 = J.get$hashCode$(receiver.top);
        t3 = J.get$hashCode$(receiver.width);
        t4 = J.get$hashCode$(receiver.height);
        return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
      },
      $isRectangle: 1,
      $asRectangle: Isolate.functionThatReturnsNull,
      $isObject: 1,
      "%": "ClientRect"
    },
    _ClientRectList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin8;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.Rectangle];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Rectangle];
      },
      "%": "ClientRectList|DOMRectList"
    },
    Interceptor_ListMixin8: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Rectangle];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Rectangle];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin8: {
      "^": "Interceptor_ListMixin8+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Rectangle];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Rectangle];
      }
    },
    _CssRuleList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin9;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.CssRule];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.CssRule];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "CSSRuleList"
    },
    Interceptor_ListMixin9: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.CssRule];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.CssRule];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin9: {
      "^": "Interceptor_ListMixin9+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.CssRule];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.CssRule];
      }
    },
    _CssValueList: {
      "^": "_CSSValue_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W._CSSValue];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W._CSSValue];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue"
    },
    _CSSValue_ListMixin: {
      "^": "_CSSValue+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W._CSSValue];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W._CSSValue];
      }
    },
    _CSSValue_ListMixin_ImmutableListMixin: {
      "^": "_CSSValue_ListMixin+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W._CSSValue];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W._CSSValue];
      }
    },
    _DocumentType: {
      "^": "Node;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "DocumentType"
    },
    _DomRect: {
      "^": "DomRectReadOnly;",
      get$height: function(receiver) {
        return receiver.height;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      "%": "DOMRect"
    },
    _GamepadList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin10;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Gamepad];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Gamepad];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "GamepadList"
    },
    Interceptor_ListMixin10: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Gamepad];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Gamepad];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin10: {
      "^": "Interceptor_ListMixin10+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Gamepad];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Gamepad];
      }
    },
    _HTMLFrameSetElement: {
      "^": "HtmlElement;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "HTMLFrameSetElement"
    },
    _NamedNodeMap: {
      "^": "Interceptor_ListMixin_ImmutableListMixin11;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "MozNamedAttrMap|NamedNodeMap"
    },
    Interceptor_ListMixin11: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin11: {
      "^": "Interceptor_ListMixin11+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    _ServiceWorker: {
      "^": "EventTarget;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "ServiceWorker"
    },
    _SpeechRecognitionResultList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin12;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "SpeechRecognitionResultList"
    },
    Interceptor_ListMixin12: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin12: {
      "^": "Interceptor_ListMixin12+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      }
    },
    _StyleSheetList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin13;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index < 0 || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.StyleSheet];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.StyleSheet];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "StyleSheetList"
    },
    Interceptor_ListMixin13: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.StyleSheet];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.StyleSheet];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin13: {
      "^": "Interceptor_ListMixin13+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.StyleSheet];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.StyleSheet];
      }
    },
    _WorkerLocation: {
      "^": "Interceptor;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "WorkerLocation"
    },
    _WorkerNavigator: {
      "^": "Interceptor;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "WorkerNavigator"
    },
    _AttributeMap: {
      "^": "Object;",
      putIfAbsent$2: function(_, key, ifAbsent) {
        if (this.containsKey$1(0, key) !== true)
          this.$indexSet(0, key, ifAbsent.call$0());
        return this.$index(0, key);
      },
      forEach$1: function(_, f) {
        var t1, t2, _i, key;
        for (t1 = this.get$keys(this), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          f.call$2(key, this.$index(0, key));
        }
      },
      get$keys: function(_) {
        var attributes, keys, len, i;
        attributes = this._element.attributes;
        keys = H.setRuntimeTypeInfo([], [P.String]);
        for (len = attributes.length, i = 0; i < len; ++i) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          if (this._matches$1(attributes[i])) {
            if (i >= attributes.length)
              return H.ioore(attributes, i);
            keys.push(J.get$name$x(attributes[i]));
          }
        }
        return keys;
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, P.String];
      }
    },
    _ElementAttributeMap: {
      "^": "_AttributeMap;_element",
      containsKey$1: function(_, key) {
        return this._element.hasAttribute(key);
      },
      $index: function(_, key) {
        return this._element.getAttribute(key);
      },
      $indexSet: function(_, key, value) {
        this._element.setAttribute(key, value);
      },
      remove$1: function(_, key) {
        var t1, value;
        t1 = this._element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        return value;
      },
      get$length: function(_) {
        return this.get$keys(this).length;
      },
      _matches$1: function(node) {
        return node.namespaceURI == null;
      }
    },
    _EventStream: {
      "^": "Stream;_html$_target,_eventType,_useCapture",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = new W._EventStreamSubscription(0, this._html$_target, this._eventType, W._wrapZone(onData), false);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        t1._tryResume$0();
        return t1;
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      }
    },
    _EventStreamSubscription: {
      "^": "StreamSubscription;_pauseCount,_html$_target,_eventType,_onData,_useCapture",
      cancel$0: function(_) {
        if (this._html$_target == null)
          return;
        this._unlisten$0();
        this._html$_target = null;
        this._onData = null;
        return;
      },
      pause$1: function(_, resumeSignal) {
        if (this._html$_target == null)
          return;
        ++this._pauseCount;
        this._unlisten$0();
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      get$isPaused: function() {
        return this._pauseCount > 0;
      },
      resume$0: function(_) {
        if (this._html$_target == null || this._pauseCount <= 0)
          return;
        --this._pauseCount;
        this._tryResume$0();
      },
      _tryResume$0: function() {
        var t1, t2, t3;
        t1 = this._onData;
        t2 = t1 != null;
        if (t2 && this._pauseCount <= 0) {
          t3 = this._html$_target;
          t3.toString;
          if (t2)
            J._addEventListener$3$x(t3, this._eventType, t1, false);
        }
      },
      _unlisten$0: function() {
        var t1, t2, t3;
        t1 = this._onData;
        t2 = t1 != null;
        if (t2) {
          t3 = this._html$_target;
          t3.toString;
          if (t2)
            J._removeEventListener$3$x(t3, this._eventType, t1, false);
        }
      }
    },
    ImmutableListMixin: {
      "^": "Object;",
      get$iterator: function(receiver) {
        return H.setRuntimeTypeInfo(new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null), [H.getRuntimeTypeArgument(receiver, "ImmutableListMixin", 0)]);
      },
      add$1: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to immutable List."));
      },
      sort$1: function(receiver, compare) {
        throw H.wrapException(new P.UnsupportedError("Cannot sort immutable List."));
      },
      remove$1: function(receiver, object) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from immutable List."));
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnsupportedError("Cannot setRange on immutable List."));
      },
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    FixedSizeListIterator: {
      "^": "Object;_array,_length,_position,_html$_current",
      moveNext$0: function() {
        var nextPosition, t1;
        nextPosition = this._position + 1;
        t1 = this._length;
        if (nextPosition < t1) {
          this._html$_current = J.$index$asx(this._array, nextPosition);
          this._position = nextPosition;
          return true;
        }
        this._html$_current = null;
        this._position = t1;
        return false;
      },
      get$current: function() {
        return this._html$_current;
      }
    },
    _DOMWindowCrossFrame: {
      "^": "Object;_window",
      get$location: function(_) {
        return W._LocationCrossFrame__createSafe(this._window.location);
      },
      close$0: function(_) {
        return this._window.close();
      },
      $isEventTarget: 1,
      $isInterceptor: 1,
      static: {_DOMWindowCrossFrame__createSafe: function(w) {
          if (w === window)
            return w;
          else
            return new W._DOMWindowCrossFrame(w);
        }}
    },
    _LocationCrossFrame: {
      "^": "Object;_location",
      static: {_LocationCrossFrame__createSafe: function($location) {
          if ($location === window.location)
            return $location;
          else
            return new W._LocationCrossFrame($location);
        }}
    }
  }], ["dart.dom.indexed_db", "dart:indexed_db",, P, {
    "^": "",
    _completeRequest: function(request) {
      var completer, t1;
      completer = H.setRuntimeTypeInfo(new P._SyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null])), [null]);
      request.toString;
      t1 = H.setRuntimeTypeInfo(new W._EventStream(request, "success", false), [null]);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(new P._completeRequest_closure(request, completer)), false), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = H.setRuntimeTypeInfo(new W._EventStream(request, "error", false), [null]);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(completer.get$completeError()), false), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      return completer.future;
    },
    Cursor: {
      "^": "Interceptor;key=",
      next$1: [function(receiver, key) {
        receiver.continue(key);
      }, function($receiver) {
        return this.next$1($receiver, null);
      }, "next$0", "call$1", "call$0", "get$next", 0, 2, 31, 0],
      "%": ";IDBCursor"
    },
    CursorWithValue: {
      "^": "Cursor;",
      get$value: function(receiver) {
        var t1, t2;
        t1 = receiver.value;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = false;
        return t2.walk$1(t1);
      },
      "%": "IDBCursorWithValue"
    },
    Database: {
      "^": "EventTarget;",
      close$0: function(receiver) {
        return receiver.close();
      },
      "%": "IDBDatabase"
    },
    _completeRequest_closure: {
      "^": "Closure:1;_captured_request_0,_indexed_db$_captured_completer_1",
      call$1: [function(e) {
        var t1, t2;
        t1 = this._captured_request_0.result;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = false;
        this._indexed_db$_captured_completer_1.complete$1(0, t2.walk$1(t1));
      }, null, null, 2, 0, null, 1, "call"]
    },
    Index: {
      "^": "Interceptor;",
      $isIndex: 1,
      $isObject: 1,
      "%": "IDBIndex"
    },
    KeyRange: {
      "^": "Interceptor;",
      $isKeyRange: 1,
      "%": "IDBKeyRange"
    },
    ObjectStore: {
      "^": "Interceptor;",
      add$2: function(receiver, value, key) {
        var request, e, stacktrace, t1, exception;
        try {
          request = null;
          if (key != null)
            request = this._indexed_db$_add$2(receiver, value, key);
          else
            request = this._indexed_db$_add$1(receiver, value);
          t1 = P._completeRequest(request);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          stacktrace = H.getTraceFromException(exception);
          return P.Future_Future$error(e, stacktrace, null);
        }
      },
      add$1: function($receiver, value) {
        return this.add$2($receiver, value, null);
      },
      _indexed_db$_add$2: function(receiver, value, key) {
        return receiver.add(new P._StructuredCloneDart2Js([], []).walk$1(value));
      },
      _indexed_db$_add$1: function($receiver, value) {
        return this._indexed_db$_add$2($receiver, value, null);
      },
      "%": "IDBObjectStore"
    },
    Request: {
      "^": "EventTarget;error=",
      get$result: function(receiver) {
        var t1, t2;
        t1 = receiver.result;
        t2 = new P._AcceptStructuredCloneDart2Js([], [], false);
        t2.mustCopy = false;
        return t2.walk$1(t1);
      },
      "%": "IDBOpenDBRequest|IDBRequest|IDBVersionChangeRequest"
    },
    Transaction: {
      "^": "EventTarget;error=",
      "%": "IDBTransaction"
    }
  }], ["dart.dom.svg", "dart:svg",, P, {
    "^": "",
    AElement: {
      "^": "GraphicsElement;target=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGAElement"
    },
    AltGlyphElement: {
      "^": "TextPositioningElement;",
      format$1: function($receiver, arg0) {
        return $receiver.format.call$1(arg0);
      },
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGAltGlyphElement"
    },
    Angle: {
      "^": "Interceptor;value=",
      "%": "SVGAngle"
    },
    AnimationElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGSetElement"
    },
    FEBlendElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEBlendElement"
    },
    FEColorMatrixElement: {
      "^": "SvgElement;type=,result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEColorMatrixElement"
    },
    FEComponentTransferElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEComponentTransferElement"
    },
    FECompositeElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFECompositeElement"
    },
    FEConvolveMatrixElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEConvolveMatrixElement"
    },
    FEDiffuseLightingElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEDiffuseLightingElement"
    },
    FEDisplacementMapElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEDisplacementMapElement"
    },
    FEFloodElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEFloodElement"
    },
    FEGaussianBlurElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEGaussianBlurElement"
    },
    FEImageElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEImageElement"
    },
    FEMergeElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEMergeElement"
    },
    FEMorphologyElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEMorphologyElement"
    },
    FEOffsetElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEOffsetElement"
    },
    FESpecularLightingElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFESpecularLightingElement"
    },
    FETileElement: {
      "^": "SvgElement;result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFETileElement"
    },
    FETurbulenceElement: {
      "^": "SvgElement;type=,result=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFETurbulenceElement"
    },
    FilterElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFilterElement"
    },
    GraphicsElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGForeignObjectElement|SVGGElement|SVGGeometryElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGSwitchElement;SVGGraphicsElement"
    },
    ImageElement0: {
      "^": "GraphicsElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGImageElement"
    },
    Length: {
      "^": "Interceptor;value=",
      $isObject: 1,
      "%": "SVGLength"
    },
    LengthList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin14;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver.getItem(index);
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.Length];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Length];
      },
      "%": "SVGLengthList"
    },
    Interceptor_ListMixin14: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Length];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Length];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin14: {
      "^": "Interceptor_ListMixin14+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Length];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Length];
      }
    },
    MarkerElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGMarkerElement"
    },
    MaskElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGMaskElement"
    },
    Number: {
      "^": "Interceptor;value=",
      $isObject: 1,
      "%": "SVGNumber"
    },
    NumberList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin15;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver.getItem(index);
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.Number];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Number];
      },
      "%": "SVGNumberList"
    },
    Interceptor_ListMixin15: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Number];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Number];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin15: {
      "^": "Interceptor_ListMixin15+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Number];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Number];
      }
    },
    PathSeg: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegMovetoAbs|SVGPathSegMovetoRel"
    },
    PathSegList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin16;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver.getItem(index);
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.PathSeg];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.PathSeg];
      },
      "%": "SVGPathSegList"
    },
    Interceptor_ListMixin16: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.PathSeg];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.PathSeg];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin16: {
      "^": "Interceptor_ListMixin16+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.PathSeg];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.PathSeg];
      }
    },
    PatternElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGPatternElement"
    },
    PointList: {
      "^": "Interceptor;length=",
      "%": "SVGPointList"
    },
    ScriptElement0: {
      "^": "SvgElement;type=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGScriptElement"
    },
    StringList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin17;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver.getItem(index);
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      "%": "SVGStringList"
    },
    Interceptor_ListMixin17: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin17: {
      "^": "Interceptor_ListMixin17+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      }
    },
    StyleElement0: {
      "^": "SvgElement;type=",
      get$title: function(receiver) {
        return receiver.title;
      },
      "%": "SVGStyleElement"
    },
    SvgElement: {
      "^": "Element;",
      $isEventTarget: 1,
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGDiscardElement|SVGFEDistantLightElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGHKernElement|SVGMetadataElement|SVGMissingGlyphElement|SVGStopElement|SVGTitleElement|SVGVKernElement;SVGElement"
    },
    SvgSvgElement: {
      "^": "GraphicsElement;currentView=",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGSVGElement"
    },
    SymbolElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGSymbolElement"
    },
    TextContentElement: {
      "^": "GraphicsElement;",
      "%": ";SVGTextContentElement"
    },
    TextPathElement: {
      "^": "TextContentElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGTextPathElement"
    },
    TextPositioningElement: {
      "^": "TextContentElement;",
      "%": "SVGTSpanElement|SVGTextElement;SVGTextPositioningElement"
    },
    Transform: {
      "^": "Interceptor;type=",
      $isObject: 1,
      "%": "SVGTransform"
    },
    TransformList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin18;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver.getItem(index);
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.Transform];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Transform];
      },
      "%": "SVGTransformList"
    },
    Interceptor_ListMixin18: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Transform];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Transform];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin18: {
      "^": "Interceptor_ListMixin18+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Transform];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Transform];
      }
    },
    UseElement: {
      "^": "GraphicsElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGUseElement"
    },
    ViewElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGViewElement"
    },
    ViewSpec: {
      "^": "Interceptor;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGViewSpec"
    },
    _GradientElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement"
    },
    _SVGCursorElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGCursorElement"
    },
    _SVGFEDropShadowElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGFEDropShadowElement"
    },
    _SVGGlyphRefElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGGlyphRefElement"
    },
    _SVGMPathElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      $isObject: 1,
      "%": "SVGMPathElement"
    }
  }], ["dart.dom.web_audio", "dart:web_audio",, P, {
    "^": "",
    AudioBuffer: {
      "^": "Interceptor;length=",
      "%": "AudioBuffer"
    },
    AudioNode: {
      "^": "EventTarget;context=",
      "%": "AnalyserNode|AudioChannelMerger|AudioChannelSplitter|AudioDestinationNode|AudioGainNode|AudioPannerNode|ChannelMergerNode|ChannelSplitterNode|ConvolverNode|DelayNode|DynamicsCompressorNode|GainNode|JavaScriptAudioNode|PannerNode|RealtimeAnalyserNode|ScriptProcessorNode|WaveShaperNode|webkitAudioPannerNode;AudioNode"
    },
    AudioParam: {
      "^": "Interceptor;value=",
      "%": "AudioParam"
    },
    AudioSourceNode: {
      "^": "AudioNode;",
      "%": "AudioBufferSourceNode|MediaElementAudioSourceNode|MediaStreamAudioSourceNode;AudioSourceNode"
    },
    BiquadFilterNode: {
      "^": "AudioNode;type=",
      "%": "BiquadFilterNode"
    },
    MediaStreamAudioDestinationNode: {
      "^": "AudioNode;stream=",
      "%": "MediaStreamAudioDestinationNode"
    },
    OscillatorNode: {
      "^": "AudioSourceNode;type=",
      "%": "Oscillator|OscillatorNode"
    }
  }], ["dart.dom.web_gl", "dart:web_gl",, P, {
    "^": "",
    ActiveInfo: {
      "^": "Interceptor;type=",
      "%": "WebGLActiveInfo"
    },
    RenderingContext: {
      "^": "Interceptor;",
      $isObject: 1,
      "%": "WebGLRenderingContext"
    }
  }], ["dart.dom.web_sql", "dart:web_sql",, P, {
    "^": "",
    SqlResultSetRowList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin19;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return P.convertNativeToDart_Dictionary(receiver.item(index));
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isList: 1,
      $asList: function() {
        return [P.Map];
      },
      $isEfficientLength: 1,
      $isObject: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Map];
      },
      "%": "SQLResultSetRowList"
    },
    Interceptor_ListMixin19: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Map];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Map];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin19: {
      "^": "Interceptor_ListMixin19+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.Map];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.Map];
      }
    }
  }], ["dart.isolate", "dart:isolate",, P, {
    "^": "",
    Capability: {
      "^": "Object;"
    }
  }], ["dart.js", "dart:js",, P, {
    "^": "",
    _callDartFunction: [function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      if (captureThis === true) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$ax($arguments, P.js___convertToDart$closure()), true, null);
      return P._convertToJS(H.Primitives_applyFunctionWithPositionalArguments(callback, dartArgs));
    }, null, null, 8, 0, null, 12, 34, 20, 13],
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return;
    },
    _convertToJS: [function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor(o);
      if (!!t1.$isJsObject)
        return o._jsObject;
      if (!!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isTypedData || !!t1.$isWindow)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    }, "call$1", "js___convertToJS$closure", 2, 0, 1, 14],
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: [function(o) {
      var t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else {
        if (o instanceof Object) {
          t1 = J.getInterceptor(o);
          t1 = !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isTypedData || !!t1.$isWindow;
        } else
          t1 = false;
        if (t1)
          return o;
        else if (o instanceof Date)
          return P.DateTime$fromMillisecondsSinceEpoch(o.getTime(), false);
        else if (o.constructor === $.$get$_dartProxyCtor())
          return o.o;
        else
          return P._wrapToDart(o);
      }
    }, "call$1", "js___convertToDart$closure", 2, 0, 14, 14],
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var existing, ret;
      existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _convertDartFunctionFastCaptureThis: function(f) {
      var existing, ret;
      existing = f._$dart_jsFunctionCaptureThis;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFastCaptureThis, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f._$dart_jsFunctionCaptureThis = ret;
      return ret;
    },
    _callDartFunctionFast: [function(callback, $arguments) {
      return H.Primitives_applyFunctionWithPositionalArguments(callback, $arguments);
    }, null, null, 4, 0, null, 12, 13],
    _callDartFunctionFastCaptureThis: [function(callback, $self, $arguments) {
      var t1 = [$self];
      C.JSArray_methods.addAll$1(t1, $arguments);
      return H.Primitives_applyFunctionWithPositionalArguments(callback, t1);
    }, null, null, 6, 0, null, 12, 20, 13],
    allowInterop: function(f) {
      if (typeof f == "function")
        return f;
      else
        return P._convertDartFunctionFast(f);
    },
    allowInteropCaptureThis: function(f) {
      if (typeof f == "function")
        throw H.wrapException(P.ArgumentError$("Function is already a JS function so cannot capture this."));
      else
        return P._convertDartFunctionFastCaptureThis(f);
    },
    JsObject: {
      "^": "Object;_jsObject",
      $index: ["super$JsObject$$index", function(_, property) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        return P._convertToDart(this._jsObject[property]);
      }],
      $indexSet: ["super$JsObject$$indexSet", function(_, property, value) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        this._jsObject[property] = P._convertToJS(value);
      }],
      get$hashCode: function(_) {
        return 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof P.JsObject && this._jsObject === other._jsObject;
      },
      toString$0: function(_) {
        var t1, exception;
        try {
          t1 = String(this._jsObject);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          return this.super$Object$toString(this);
        }
      },
      callMethod$2: function(method, args) {
        var t1, t2;
        t1 = this._jsObject;
        t2 = args == null ? null : P.List_List$from(H.setRuntimeTypeInfo(new H.MappedListIterable(args, P.js___convertToJS$closure()), [null, null]), true, null);
        return P._convertToDart(t1[method].apply(t1, t2));
      },
      static: {JsObject_JsObject: function($constructor, $arguments) {
          var constr = P._convertToJS($constructor);
          return P._wrapToDart(new constr());
        }, JsObject_JsObject$fromBrowserObject: function(object) {
          if (typeof object === "number" || typeof object === "string" || typeof object === "boolean" || object == null)
            throw H.wrapException(P.ArgumentError$("object cannot be a num, string, bool, or null"));
          return P._wrapToDart(P._convertToJS(object));
        }, JsObject__convertDataTree: function(data) {
          return new P.JsObject__convertDataTree__convert(H.setRuntimeTypeInfo(new P._IdentityHashMap(0, null, null, null, null), [null, null])).call$1(data);
        }}
    },
    JsObject__convertDataTree__convert: {
      "^": "Closure:1;_captured__convertedObjects_0",
      call$1: [function(o) {
        var t1, t2, convertedMap, key, convertedList;
        t1 = this._captured__convertedObjects_0;
        if (t1.containsKey$1(0, o))
          return t1.$index(0, o);
        t2 = J.getInterceptor(o);
        if (!!t2.$isMap) {
          convertedMap = {};
          t1.$indexSet(0, o, convertedMap);
          for (t1 = J.get$iterator$ax(t2.get$keys(o)); t1.moveNext$0() === true;) {
            key = t1.get$current();
            convertedMap[key] = this.call$1(t2.$index(o, key));
          }
          return convertedMap;
        } else if (!!t2.$isIterable) {
          convertedList = [];
          t1.$indexSet(0, o, convertedList);
          C.JSArray_methods.addAll$1(convertedList, t2.map$1(o, this));
          return convertedList;
        } else
          return P._convertToJS(o);
      }, null, null, 2, 0, null, 14, "call"]
    },
    JsFunction: {
      "^": "JsObject;_jsObject"
    },
    JsArray: {
      "^": "JsObject_ListMixin;_jsObject",
      $index: function(_, index) {
        var t1;
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
          if (typeof index === "number" && Math.floor(index) === index)
            t1 = index < 0 || index >= this.get$length(this);
          else
            t1 = false;
          if (t1)
            H.throwExpression(P.RangeError$range(index, 0, this.get$length(this), null, null));
        }
        return this.super$JsObject$$index(this, index);
      },
      $indexSet: function(_, index, value) {
        var t1;
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
          if (typeof index === "number" && Math.floor(index) === index)
            t1 = index < 0 || index >= this.get$length(this);
          else
            t1 = false;
          if (t1)
            H.throwExpression(P.RangeError$range(index, 0, this.get$length(this), null, null));
        }
        this.super$JsObject$$indexSet(this, index, value);
      },
      get$length: function(_) {
        var len = this._jsObject.length;
        if (typeof len === "number" && len >>> 0 === len)
          return len;
        throw H.wrapException(new P.StateError("Bad JsArray length"));
      },
      set$length: function(_, $length) {
        this.super$JsObject$$indexSet(this, "length", $length);
      },
      add$1: function(_, value) {
        this.callMethod$2("push", [value]);
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        var $length, args, t1, t2, t3;
        P.JsArray__checkRange(start, end, this.get$length(this));
        $length = end - start;
        if ($length === 0)
          return;
        args = [start, $length];
        t1 = H.setRuntimeTypeInfo(new H.SubListIterable(iterable, skipCount, null), [H.getRuntimeTypeArgument(iterable, "ListMixin", 0)]);
        t2 = t1._start;
        if (t2 < 0)
          H.throwExpression(P.RangeError$range(t2, 0, null, "start", null));
        t3 = t1._endOrLength;
        if (t3 != null) {
          if (typeof t3 !== "number")
            return t3.$lt();
          if (t3 < 0)
            H.throwExpression(P.RangeError$range(t3, 0, null, "end", null));
          if (t2 > t3)
            H.throwExpression(P.RangeError$range(t2, 0, t3, "start", null));
        }
        C.JSArray_methods.addAll$1(args, t1.take$1(0, $length));
        this.callMethod$2("splice", args);
      },
      sort$1: function(_, compare) {
        this.callMethod$2("sort", [compare]);
      },
      static: {JsArray__checkRange: function(start, end, $length) {
          if (start > $length)
            throw H.wrapException(P.RangeError$range(start, 0, $length, null, null));
          if (end < start || end > $length)
            throw H.wrapException(P.RangeError$range(end, start, $length, null, null));
        }}
    },
    JsObject_ListMixin: {
      "^": "JsObject+ListMixin;",
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    _convertToJS_closure: {
      "^": "Closure:1;",
      call$1: function(o) {
        var jsFunction = function(_call, f, captureThis) {
          return function() {
            return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
          };
        }(P._callDartFunction, o, false);
        P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
        return jsFunction;
      }
    },
    _convertToJS_closure0: {
      "^": "Closure:1;_captured_ctor_0",
      call$1: function(o) {
        return new this._captured_ctor_0(o);
      }
    },
    _wrapToDart_closure: {
      "^": "Closure:1;",
      call$1: function(o) {
        return new P.JsFunction(o);
      }
    },
    _wrapToDart_closure0: {
      "^": "Closure:1;",
      call$1: function(o) {
        return H.setRuntimeTypeInfo(new P.JsArray(o), [null]);
      }
    },
    _wrapToDart_closure1: {
      "^": "Closure:1;",
      call$1: function(o) {
        return new P.JsObject(o);
      }
    }
  }], ["dart.math", "dart:math",, P, {
    "^": "",
    _RectangleBase: {
      "^": "Object;"
    },
    Rectangle: {
      "^": "_RectangleBase;",
      $asRectangle: null
    }
  }], ["dart.typed_data.implementation", "dart:_native_typed_data",, H, {
    "^": "",
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: {
      "^": "Interceptor;",
      $isNativeByteBuffer: 1,
      $isByteBuffer: 1,
      $isObject: 1,
      "%": "ArrayBuffer"
    },
    NativeTypedData: {
      "^": "Interceptor;",
      _invalidPosition$3: function(receiver, position, $length, $name) {
        throw H.wrapException(P.RangeError$range(position, 0, $length, $name, null));
      },
      _checkPosition$3: function(receiver, position, $length, $name) {
        if (position >>> 0 !== position || position > $length)
          this._invalidPosition$3(receiver, position, $length, $name);
      },
      $isNativeTypedData: 1,
      $isTypedData: 1,
      $isObject: 1,
      "%": ";ArrayBufferView;NativeTypedArray|NativeTypedArray_ListMixin|NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|NativeTypedArray_ListMixin0|NativeTypedArray_ListMixin_FixedLengthListMixin0|NativeTypedArrayOfInt"
    },
    NativeByteData: {
      "^": "NativeTypedData;",
      $isTypedData: 1,
      $isObject: 1,
      "%": "DataView"
    },
    NativeTypedArray: {
      "^": "NativeTypedData;",
      get$length: function(receiver) {
        return receiver.length;
      },
      _setRangeFast$4: function(receiver, start, end, source, skipCount) {
        var targetLength, count, sourceLength;
        targetLength = receiver.length;
        this._checkPosition$3(receiver, start, targetLength, "start");
        this._checkPosition$3(receiver, end, targetLength, "end");
        if (start > end)
          throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
        count = end - start;
        sourceLength = source.length;
        if (sourceLength - skipCount < count)
          throw H.wrapException(new P.StateError("Not enough elements"));
        if (skipCount !== 0 || sourceLength !== count)
          source = source.subarray(skipCount, skipCount + count);
        receiver.set(source, start);
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1
    },
    NativeTypedArrayOfDouble: {
      "^": "NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        if (!!J.getInterceptor(iterable).$isNativeTypedArrayOfDouble) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
      }
    },
    NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      }
    },
    NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "NativeTypedArray_ListMixin+FixedLengthListMixin;"
    },
    NativeTypedArrayOfInt: {
      "^": "NativeTypedArray_ListMixin_FixedLengthListMixin0;",
      $indexSet: function(receiver, index, value) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        if (!!J.getInterceptor(iterable).$isNativeTypedArrayOfInt) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
      },
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      }
    },
    NativeTypedArray_ListMixin0: {
      "^": "NativeTypedArray+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      }
    },
    NativeTypedArray_ListMixin_FixedLengthListMixin0: {
      "^": "NativeTypedArray_ListMixin0+FixedLengthListMixin;"
    },
    NativeFloat32List: {
      "^": "NativeTypedArrayOfDouble;",
      sublist$2: function(receiver, start, end) {
        return new Float32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      },
      "%": "Float32Array"
    },
    NativeFloat64List: {
      "^": "NativeTypedArrayOfDouble;",
      sublist$2: function(receiver, start, end) {
        return new Float64Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      },
      "%": "Float64Array"
    },
    NativeInt16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int16Array"
    },
    NativeInt32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int32Array"
    },
    NativeInt8List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int8Array"
    },
    NativeUint16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Uint16Array"
    },
    NativeUint32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Uint32Array"
    },
    NativeUint8ClampedList: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8ClampedArray(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "CanvasPixelArray|Uint8ClampedArray"
    },
    NativeUint8List: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isObject: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": ";Uint8Array"
    }
  }], ["dart2js._js_primitives", "dart:_js_primitives",, H, {
    "^": "",
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  }], ["date_format_internal", "package:intl/src/date_format_internal.dart",, A, {}], ["date_symbols", "package:intl/date_symbols.dart",, B, {
    "^": "",
    DateSymbols: {
      "^": "Object;NAME,ERAS<,ERANAMES<,NARROWMONTHS<,STANDALONENARROWMONTHS<,MONTHS<,STANDALONEMONTHS<,SHORTMONTHS<,STANDALONESHORTMONTHS<,WEEKDAYS<,STANDALONEWEEKDAYS<,SHORTWEEKDAYS<,STANDALONESHORTWEEKDAYS<,NARROWWEEKDAYS,STANDALONENARROWWEEKDAYS<,SHORTQUARTERS<,QUARTERS<,AMPMS<,DATEFORMATS,TIMEFORMATS,DATETIMEFORMATS,AVAILABLEFORMATS,FIRSTDAYOFWEEK,WEEKENDRANGE,FIRSTWEEKCUTOFFDAY",
      toString$0: function(_) {
        return this.NAME;
      }
    }
  }], ["fluri", "package:fluri/fluri.dart",, K, {
    "^": "",
    Fluri: {
      "^": "FluriMixin;_uri",
      toString$0: function(_) {
        return this._uri.toString$0(0);
      },
      Fluri$1: function(uri) {
        var t1 = P.Uri_parse("", 0, null);
        this._uri = t1;
      },
      static: {Fluri$: function(uri) {
          var t1 = new K.Fluri(P.Uri_parse("", 0, null));
          t1.Fluri$1(uri);
          return t1;
        }}
    },
    FluriMixin: {
      "^": "Object;"
    }
  }], ["html_common", "dart:html_common",, P, {
    "^": "",
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return;
      dict = P.LinkedHashMap__makeEmpty();
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    convertNativePromiseToDartFuture: function(promise) {
      var completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null), [null])), [null]);
      promise.then(H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure(completer), 1)).catch(H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure0(completer), 1));
      return completer.future;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
        $.Device__isOpera = t1;
      }
      return t1;
    },
    Device_cssPrefix: function() {
      var prefix, t1;
      prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0);
        $.Device__isFirefox = t1;
      }
      if (t1 === true)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null) {
          t1 = P.Device_isOpera() !== true && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
          $.Device__isIE = t1;
        }
        if (t1 === true)
          prefix = "-ms-";
        else
          prefix = P.Device_isOpera() === true ? "-o-" : "-webkit-";
      }
      $.Device__cachedCssPrefix = prefix;
      return prefix;
    },
    _StructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i)
          if (t1[i] === value)
            return i;
        t1.push(value);
        this.copies.push(null);
        return $length;
      },
      walk$1: function(e) {
        var t1, t2, slot, t3, copy;
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        t2 = J.getInterceptor(e);
        if (!!t2.$isDateTime)
          return new Date(e.millisecondsSinceEpoch);
        if (!!t2.$isRegExp)
          throw H.wrapException(new P.UnimplementedError("structured clone of RegExp"));
        if (!!t2.$isFile)
          return e;
        if (!!t2.$isBlob)
          return e;
        if (!!t2.$isFileList)
          return e;
        if (!!t2.$isImageData)
          return e;
        if (this.cloneNotRequired$1(e))
          return e;
        if (!!t2.$isMap) {
          slot = this.findSlot$1(e);
          t3 = this.copies;
          if (slot >= t3.length)
            return H.ioore(t3, slot);
          copy = t3[slot];
          t1._captured_copy_0 = copy;
          if (copy != null)
            return copy;
          copy = this.newJsMap$0();
          t1._captured_copy_0 = copy;
          if (slot >= t3.length)
            return H.ioore(t3, slot);
          t3[slot] = copy;
          t2.forEach$1(e, new P._StructuredClone_walk_closure(t1, this));
          return t1._captured_copy_0;
        }
        if (!!t2.$isList) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          return this.copyList$2(e, slot);
        }
        throw H.wrapException(new P.UnimplementedError("structured clone of other type"));
      },
      copyList$2: function(e, slot) {
        var t1, $length, copy, t2, i;
        t1 = J.getInterceptor$asx(e);
        $length = t1.get$length(e);
        copy = this.newJsList$1($length);
        t2 = this.copies;
        if (slot >= t2.length)
          return H.ioore(t2, slot);
        t2[slot] = copy;
        for (i = 0; i < $length; ++i) {
          t2 = this.walk$1(t1.$index(e, i));
          if (i >= copy.length)
            return H.ioore(copy, i);
          copy[i] = t2;
        }
        return copy;
      }
    },
    _StructuredClone_walk_closure: {
      "^": "Closure:3;_html_common$_box_0,_captured_this_1",
      call$2: function(key, value) {
        var t1 = this._captured_this_1;
        t1.putIntoMap$3(this._html_common$_box_0._captured_copy_0, key, t1.walk$1(value));
      }
    },
    _AcceptStructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          if (this.identicalInJs$2(t1[i], value))
            return i;
        }
        t1.push(value);
        this.copies.push(null);
        return $length;
      },
      walk$1: function(e) {
        var t1, proto, slot, t2, t3, copy, $length, i;
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          return P.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
        if (e instanceof RegExp)
          throw H.wrapException(new P.UnimplementedError("structured clone of RegExp"));
        if (typeof Promise != "undefined" && e instanceof Promise)
          return P.convertNativePromiseToDartFuture(e);
        proto = Object.getPrototypeOf(e);
        if (proto === Object.prototype || proto === null) {
          slot = this.findSlot$1(e);
          t2 = this.copies;
          t3 = t2.length;
          if (slot >= t3)
            return H.ioore(t2, slot);
          copy = t2[slot];
          t1._captured_copy_0 = copy;
          if (copy != null)
            return copy;
          copy = P.LinkedHashMap__makeEmpty();
          t1._captured_copy_0 = copy;
          if (slot >= t3)
            return H.ioore(t2, slot);
          t2[slot] = copy;
          this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(t1, this));
          return t1._captured_copy_0;
        }
        if (e instanceof Array) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          t2 = J.getInterceptor$asx(e);
          $length = t2.get$length(e);
          copy = this.mustCopy ? this.newDartList$1($length) : e;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          t1[slot] = copy;
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = J.getInterceptor$ax(copy);
          i = 0;
          for (; i < $length; ++i)
            t1.$indexSet(copy, i, this.walk$1(t2.$index(e, i)));
          return copy;
        }
        return e;
      }
    },
    _AcceptStructuredClone_walk_closure: {
      "^": "Closure:3;_html_common$_box_0,_captured_this_1",
      call$2: function(key, value) {
        var t1, t2;
        t1 = this._html_common$_box_0._captured_copy_0;
        t2 = this._captured_this_1.walk$1(value);
        J.$indexSet$ax(t1, key, t2);
        return t2;
      }
    },
    _StructuredCloneDart2Js: {
      "^": "_StructuredClone;values,copies",
      newJsMap$0: function() {
        return {};
      },
      putIntoMap$3: function(map, key, value) {
        return map[key] = value;
      },
      newJsList$1: function($length) {
        return new Array($length);
      },
      cloneNotRequired$1: function(e) {
        var t1 = J.getInterceptor(e);
        return !!t1.$isNativeByteBuffer || !!t1.$isNativeTypedData;
      }
    },
    _AcceptStructuredCloneDart2Js: {
      "^": "_AcceptStructuredClone;values,copies,mustCopy",
      newDartList$1: function($length) {
        return new Array($length);
      },
      identicalInJs$2: function(a, b) {
        return a == null ? b == null : a === b;
      },
      forEachJsField$2: function(object, action) {
        var t1, t2, _i, key;
        for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          action.call$2(key, object[key]);
        }
      }
    },
    convertNativePromiseToDartFuture_closure: {
      "^": "Closure:1;_captured_completer_0",
      call$1: [function(result) {
        return this._captured_completer_0.complete$1(0, result);
      }, null, null, 2, 0, null, 9, "call"]
    },
    convertNativePromiseToDartFuture_closure0: {
      "^": "Closure:1;_captured_completer_1",
      call$1: [function(result) {
        return this._captured_completer_1.completeError$1(result);
      }, null, null, 2, 0, null, 9, "call"]
    }
  }], ["intl", "package:intl/intl.dart",, T, {
    "^": "",
    Intl_defaultLocale: function() {
      var zoneLocale = J.$index$asx($.Zone__current, C.Symbol_89P);
      return zoneLocale == null ? $.Intl__defaultLocale : zoneLocale;
    },
    Intl_verifiedLocale: function(newLocale, localeExists, onFailure) {
      var t1, _i, each;
      if (newLocale == null)
        return T.Intl_verifiedLocale(T.Intl_getCurrentLocale(), localeExists, onFailure);
      if (localeExists.call$1(newLocale) === true)
        return newLocale;
      for (t1 = [T.Intl_canonicalizedLocale(newLocale), T.Intl_shortLocale(newLocale), "fallback"], _i = 0; _i < 3; ++_i) {
        each = t1[_i];
        if (localeExists.call$1(each) === true)
          return each;
      }
      return onFailure.call$1(newLocale);
    },
    Intl__throwLocaleError: [function(localeName) {
      throw H.wrapException(P.ArgumentError$("Invalid locale '" + H.S(localeName) + "'"));
    }, "call$1", "intl_Intl__throwLocaleError$closure", 2, 0, 61],
    Intl_shortLocale: function(aLocale) {
      var t1 = J.getInterceptor$asx(aLocale);
      if (J.$lt$n(t1.get$length(aLocale), 2) === true)
        return aLocale;
      return J.toLowerCase$0$s(t1.substring$2(aLocale, 0, 2));
    },
    Intl_canonicalizedLocale: function(aLocale) {
      var t1, region, t2;
      if (aLocale == null)
        return T.Intl_getCurrentLocale();
      t1 = J.getInterceptor(aLocale);
      if (t1.$eq(aLocale, "C"))
        return "en_ISO";
      if (J.$lt$n(t1.get$length(aLocale), 5) === true)
        return aLocale;
      if (!J.$eq$(t1.$index(aLocale, 2), "-") && !J.$eq$(t1.$index(aLocale, 2), "_"))
        return aLocale;
      region = t1.substring$1(aLocale, 3);
      t2 = J.getInterceptor$asx(region);
      if (J.$le$n(t2.get$length(region), 3) === true)
        region = t2.toUpperCase$0(region);
      return H.S(t1.$index(aLocale, 0)) + H.S(t1.$index(aLocale, 1)) + "_" + H.S(region);
    },
    Intl_getCurrentLocale: function() {
      if (T.Intl_defaultLocale() == null)
        $.Intl__defaultLocale = $.Intl_systemLocale;
      return T.Intl_defaultLocale();
    },
    DateFormat: {
      "^": "Object;_locale,_intl$_pattern,_formatFieldsPrivate",
      format$1: function(_, date) {
        var result, t1;
        result = new P.StringBuffer("");
        t1 = this._formatFieldsPrivate;
        if (t1 == null) {
          if (this._intl$_pattern == null) {
            this.addPattern$1("yMMMMd");
            this.addPattern$1("jms");
          }
          t1 = this.parsePattern$1(this._intl$_pattern);
          this._formatFieldsPrivate = t1;
        }
        (t1 && C.JSArray_methods).forEach$1(t1, new T.DateFormat_format_closure(date, result));
        t1 = result._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      get$locale: function(_) {
        return this._locale;
      },
      _appendPattern$2: function(inputPattern, separator) {
        var t1 = this._intl$_pattern;
        this._intl$_pattern = t1 == null ? inputPattern : H.S(t1) + separator + H.S(inputPattern);
      },
      addPattern$2: function(inputPattern, separator) {
        var t1, t2;
        this._formatFieldsPrivate = null;
        t1 = $.$get$dateTimePatterns();
        t2 = this._locale;
        t1.toString;
        if (!(J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).containsKey$1(0, inputPattern))
          this._appendPattern$2(inputPattern, separator);
        else {
          t1 = $.$get$dateTimePatterns();
          t2 = this._locale;
          t1.toString;
          this._appendPattern$2((J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).$index(0, inputPattern), separator);
        }
        return this;
      },
      addPattern$1: function(inputPattern) {
        return this.addPattern$2(inputPattern, " ");
      },
      parsePattern$1: function(pattern) {
        var t1;
        if (pattern == null)
          return;
        t1 = this._parsePatternHelper$1(pattern);
        return H.setRuntimeTypeInfo(new H.ReversedListIterable(t1), [H.getTypeArgumentByIndex(t1, 0)]).toList$0(0);
      },
      _parsePatternHelper$1: function(pattern) {
        var t1, matched, parsed;
        t1 = J.getInterceptor$asx(pattern);
        if (t1.get$isEmpty(pattern) === true)
          return [];
        matched = this._intl$_match$1(pattern);
        if (matched == null)
          return [];
        parsed = this._parsePatternHelper$1(t1.substring$1(pattern, J.get$length$asx(matched.fullPattern$0())));
        parsed.push(matched);
        return parsed;
      },
      _intl$_match$1: function(pattern) {
        var i, t1, match, t2;
        for (i = 0; t1 = $.$get$DateFormat__matchers(), i < 3; ++i) {
          match = t1[i].firstMatch$1(pattern);
          if (match != null) {
            t1 = T.DateFormat__fieldConstructors()[i];
            t2 = match._match;
            if (0 >= t2.length)
              return H.ioore(t2, 0);
            return t1.call$2(t2[0], this);
          }
        }
      },
      static: {DateFormat_localeExists: [function(localeName) {
          var t1;
          if (localeName == null)
            return false;
          t1 = $.$get$dateTimeSymbols();
          t1.toString;
          return J.$eq$(localeName, "en_US") ? true : t1._throwException$0();
        }, "call$1", "intl_DateFormat_localeExists$closure", 2, 0, 62], DateFormat__fieldConstructors: function() {
          return [new T.DateFormat__fieldConstructors_closure(), new T.DateFormat__fieldConstructors_closure0(), new T.DateFormat__fieldConstructors_closure1()];
        }}
    },
    DateFormat_format_closure: {
      "^": "Closure:1;_captured_date_0,_intl$_captured_result_1",
      call$1: function(field) {
        this._intl$_captured_result_1._contents += H.S(J.format$1$x(field, this._captured_date_0));
        return;
      }
    },
    DateFormat__fieldConstructors_closure: {
      "^": "Closure:3;",
      call$2: function(pattern, $parent) {
        var t1 = new T._DateFormatQuotedField(null, pattern, $parent);
        t1._fullPattern = pattern;
        t1.patchQuotes$0();
        return t1;
      }
    },
    DateFormat__fieldConstructors_closure0: {
      "^": "Closure:3;",
      call$2: function(pattern, $parent) {
        return new T._DateFormatPatternField(pattern, $parent);
      }
    },
    DateFormat__fieldConstructors_closure1: {
      "^": "Closure:3;",
      call$2: function(pattern, $parent) {
        return new T._DateFormatLiteralField(pattern, $parent);
      }
    },
    _DateFormatField: {
      "^": "Object;",
      fullPattern$0: function() {
        return this.pattern;
      },
      toString$0: function(_) {
        return this.pattern;
      },
      format$1: function(_, date) {
        return this.pattern;
      }
    },
    _DateFormatLiteralField: {
      "^": "_DateFormatField;pattern,parent"
    },
    _DateFormatQuotedField: {
      "^": "_DateFormatField;_fullPattern,pattern,parent",
      fullPattern$0: function() {
        return this._fullPattern;
      },
      patchQuotes$0: function() {
        var t1, t2;
        if (J.$eq$(this.pattern, "''"))
          this.pattern = "'";
        else {
          t1 = this.pattern;
          t2 = J.getInterceptor$asx(t1);
          this.pattern = t2.substring$2(t1, 1, J.$sub$n(t2.get$length(t1), 1));
          t1 = H.JSSyntaxRegExp_makeNative("''", false, true, false);
          this.pattern = J.replaceAll$2$s(this.pattern, new H.JSSyntaxRegExp("''", t1, null, null), "'");
        }
      }
    },
    _DateFormatPatternField: {
      "^": "_DateFormatField;pattern,parent",
      format$1: function(_, date) {
        return this.formatField$1(date);
      },
      formatField$1: function(date) {
        var index, t1, t2, era, hours, year;
        switch (J.$index$asx(this.pattern, 0)) {
          case "a":
            date.toString;
            H.Primitives_getHours(date);
            index = H.Primitives_getHours(date) >= 12 && H.Primitives_getHours(date) < 24 ? 1 : 0;
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            return (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$AMPMS()[index];
          case "c":
            return this.formatStandaloneDay$1(date);
          case "d":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getDay(date));
          case "D":
            return this.padTo$2(J.get$length$asx(this.pattern), this.dayNumberInYear$1(date));
          case "E":
            t1 = this.parent;
            if (J.$ge$n(J.get$length$asx(this.pattern), 4) === true) {
              t2 = $.$get$dateTimeSymbols();
              t1 = t1._locale;
              t2.toString;
              t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$WEEKDAYS();
              t1 = t2;
            } else {
              t2 = $.$get$dateTimeSymbols();
              t1 = t1._locale;
              t2.toString;
              t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$SHORTWEEKDAYS();
              t1 = t2;
            }
            date.toString;
            return t1[C.JSInt_methods.$mod(H.Primitives_getWeekday(date), 7)];
          case "G":
            date.toString;
            era = H.Primitives_getYear(date) > 0 ? 1 : 0;
            t1 = this.parent;
            if (J.$ge$n(J.get$length$asx(this.pattern), 4) === true) {
              t2 = $.$get$dateTimeSymbols();
              t1 = t1._locale;
              t2.toString;
              t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$ERANAMES()[era];
              t1 = t2;
            } else {
              t2 = $.$get$dateTimeSymbols();
              t1 = t1._locale;
              t2.toString;
              t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$ERAS()[era];
              t1 = t2;
            }
            return t1;
          case "h":
            date.toString;
            hours = H.Primitives_getHours(date);
            if (H.Primitives_getHours(date) > 12)
              hours -= 12;
            if (hours === 0)
              hours = 12;
            return this.padTo$2(J.get$length$asx(this.pattern), hours);
          case "H":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getHours(date));
          case "K":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, C.JSInt_methods.$mod(H.Primitives_getHours(date), 12));
          case "k":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getHours(date));
          case "L":
            return this.formatStandaloneMonth$1(date);
          case "M":
            return this.formatMonth$1(date);
          case "m":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getMinutes(date));
          case "Q":
            return this.formatQuarter$1(date);
          case "S":
            return this.formatFractionalSeconds$1(date);
          case "s":
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getSeconds(date));
          case "v":
            return this.formatTimeZoneId$1(date);
          case "y":
            date.toString;
            year = H.Primitives_getYear(date);
            if (year < 0)
              year = -year;
            return J.$eq$(J.get$length$asx(this.pattern), 2) ? this.padTo$2(2, C.JSInt_methods.$mod(year, 100)) : this.padTo$2(J.get$length$asx(this.pattern), year);
          case "z":
            return this.formatTimeZone$1(date);
          case "Z":
            return this.formatTimeZoneRFC$1(date);
          default:
            return "";
        }
      },
      formatMonth$1: function(date) {
        var t1, t2, t3;
        switch (J.get$length$asx(this.pattern)) {
          case 5:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$NARROWMONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          case 4:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$MONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          case 3:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$SHORTMONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          default:
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getMonth(date));
        }
      },
      formatFractionalSeconds$1: function(date) {
        var basic;
        date.toString;
        basic = this.padTo$2(3, H.Primitives_getMilliseconds(date));
        if (J.$gt$n(J.$sub$n(J.get$length$asx(this.pattern), 3), 0) === true)
          return basic + this.padTo$2(J.$sub$n(J.get$length$asx(this.pattern), 3), 0);
        else
          return basic;
      },
      formatStandaloneDay$1: function(date) {
        var t1, t2;
        switch (J.get$length$asx(this.pattern)) {
          case 5:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONENARROWWEEKDAYS();
            date.toString;
            return t1[C.JSInt_methods.$mod(H.Primitives_getWeekday(date), 7)];
          case 4:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONEWEEKDAYS();
            date.toString;
            return t1[C.JSInt_methods.$mod(H.Primitives_getWeekday(date), 7)];
          case 3:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONESHORTWEEKDAYS();
            date.toString;
            return t1[C.JSInt_methods.$mod(H.Primitives_getWeekday(date), 7)];
          default:
            date.toString;
            return this.padTo$2(1, H.Primitives_getDay(date));
        }
      },
      formatStandaloneMonth$1: function(date) {
        var t1, t2, t3;
        switch (J.get$length$asx(this.pattern)) {
          case 5:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONENARROWMONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          case 4:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONEMONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          case 3:
            t1 = $.$get$dateTimeSymbols();
            t2 = this.parent._locale;
            t1.toString;
            t1 = (J.$eq$(t2, "en_US") ? t1.fallbackData : t1._throwException$0()).get$STANDALONESHORTMONTHS();
            date.toString;
            t3 = H.Primitives_getMonth(date) - 1;
            if (t3 < 0 || t3 >= 12)
              return H.ioore(t1, t3);
            return t1[t3];
          default:
            t1 = J.get$length$asx(this.pattern);
            date.toString;
            return this.padTo$2(t1, H.Primitives_getMonth(date));
        }
      },
      formatQuarter$1: function(date) {
        var quarter, t1, t2;
        date.toString;
        quarter = C.JSDouble_methods.toInt$0((H.Primitives_getMonth(date) - 1) / 3);
        t1 = this.parent;
        if (J.$lt$n(J.get$length$asx(this.pattern), 4) === true) {
          t2 = $.$get$dateTimeSymbols();
          t1 = t1._locale;
          t2.toString;
          t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$SHORTQUARTERS();
          if (quarter < 0 || quarter >= 4)
            return H.ioore(t2, quarter);
          return t2[quarter];
        } else {
          t2 = $.$get$dateTimeSymbols();
          t1 = t1._locale;
          t2.toString;
          t2 = (J.$eq$(t1, "en_US") ? t2.fallbackData : t2._throwException$0()).get$QUARTERS();
          if (quarter < 0 || quarter >= 4)
            return H.ioore(t2, quarter);
          return t2[quarter];
        }
      },
      dayNumberInYear$1: function(date) {
        var t1, t2, t3;
        date.toString;
        if (H.Primitives_getMonth(date) === 1)
          return H.Primitives_getDay(date);
        if (H.Primitives_getMonth(date) === 2)
          return H.Primitives_getDay(date) + 31;
        t1 = C.JSNumber_methods.toInt$0(Math.floor(30.6 * H.Primitives_getMonth(date) - 91.4));
        t2 = H.Primitives_getDay(date);
        t3 = H.Primitives_getYear(date);
        t3 = H.Primitives_getMonth(new P.DateTime(H.checkInt(H.Primitives_valueFromDecomposedDate(t3, 2, 29, 0, 0, 0, 0, false)), false)) === 2 ? 1 : 0;
        return t1 + t2 + 59 + t3;
      },
      formatTimeZoneId$1: function(date) {
        throw H.wrapException(new P.UnimplementedError(null));
      },
      formatTimeZone$1: function(date) {
        throw H.wrapException(new P.UnimplementedError(null));
      },
      formatTimeZoneRFC$1: function(date) {
        throw H.wrapException(new P.UnimplementedError(null));
      },
      padTo$2: function(width, toBePrinted) {
        var basicString, t1, i, t2;
        basicString = C.JSInt_methods.toString$0(toBePrinted);
        t1 = basicString.length;
        if (typeof width !== "number")
          return H.iae(width);
        if (t1 >= width)
          return basicString;
        for (t1 = width - t1, i = 0, t2 = ""; i < t1; ++i)
          t2 += "0";
        t1 = t2 + basicString;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    }
  }], ["intl_helpers", "package:intl/src/intl_helpers.dart",, X, {
    "^": "",
    UninitializedLocaleData: {
      "^": "Object;message,fallbackData",
      $index: function(_, key) {
        return J.$eq$(key, "en_US") ? this.fallbackData : this._throwException$0();
      },
      get$keys: function(_) {
        return this._throwException$0();
      },
      containsKey$1: function(_, key) {
        return J.$eq$(key, "en_US") ? true : this._throwException$0();
      },
      _throwException$0: function() {
        throw H.wrapException(new X.LocaleDataException("Locale data has not been initialized, call " + this.message + "."));
      }
    },
    LocaleDataException: {
      "^": "Object;message",
      toString$0: function(_) {
        return "LocaleDataException: " + this.message;
      }
    }
  }], ["", "package:wChaser/src/components/label.dart",, U, {
    "^": "",
    closure10: {
      "^": "Closure:0;",
      call$0: [function() {
        return new U._Label(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Label: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      render$0: function(_) {
        return $.span.call$2(P.LinkedHashMap__makeLiteral(["className", "label label-danger"]), J.$index$asx(this.props, "text"));
      }
    }
  }], ["lawndart", "package:lawndart/lawndart.dart",, X, {
    "^": "",
    Store0: {
      "^": "Object;"
    },
    _MapStore: {
      "^": "Store0;",
      _open$0: function(_) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1, $async$temp2;
        var $async$_open$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp2 = $async$self;
                $async$temp1.storage = $async$temp2._generateMap$0();
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_open$0, $async$completer, null);
      },
      keys$0: [function(_) {
        var $async$keys$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          switch ($async$errorCode) {
            case 2:
              $async$next = $async$nextWhenCanceled;
              $async$goto = $async$next.pop();
              break;
            case 1:
              $async$currentError = $async$result;
              $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = t1 = $async$temp1.storage;
                $async$temp2 = t1;
                if ($async$temp2) {
                  // goto then
                  $async$goto = 3;
                  break;
                } else
                  $async$result = $async$temp2;
                // goto join
                $async$goto = 4;
                break;
              case 3:
                // then
                $async$temp2 = C;
                $async$result = $async$temp2.Storage_methods;
              case 4:
                // join
                $async$temp2 = $async$result;
                $async$temp1, t1 = $async$temp2.get$keys(t1), t2 = t1.length, _i = 0;
              case 5:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 7;
                  break;
                }
                $async$goto = 8;
                $async$nextWhenCanceled = [1];
                return P._asyncStarHelper(P._IterationMarker_yieldSingle(t1[_i]), $async$keys$0, $async$controller);
              case 8:
                // after yield
              case 6:
                // for update
                $async$temp1 = t1.length === t2;
                if ($async$temp1)
                  $async$result = $async$temp1;
                else {
                  // goto then
                  $async$goto = 9;
                  break;
                }
                // goto join
                $async$goto = 10;
                break;
              case 9:
                // then
                $async$temp1 = H;
                $async$result = (0, $async$temp1.throwConcurrentModificationError)(t1);
              case 10:
                // join
                $async$result, ++_i;
                // goto for condition
                $async$goto = 5;
                break;
              case 7:
                // after for
              case 1:
                // return
                return P._asyncStarHelper(null, 0, $async$controller);
              case 2:
                // rethrow
                return P._asyncStarHelper($async$currentError, 1, $async$controller);
            }
        });
        var $async$goto = 0, $async$controller = P._AsyncStarStreamController$($async$keys$0), $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, t2, _i, $async$temp1, $async$temp2;
        return P._streamOfController($async$controller);
      }, "call$0", "get$keys", 0, 0, 32],
      save$2: function(_, obj, key) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1;
        var $async$save$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.storage;
                $async$temp1.setItem(key, obj);
                $async$returnValue = key;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$save$2, $async$completer, null);
      },
      getByKey$1: function(key) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1;
        var $async$getByKey$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.storage;
                $async$returnValue = $async$temp1.getItem(key);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getByKey$1, $async$completer, null);
      }
    },
    LocalStorageStore: {
      "^": "_MapStore;storage",
      _generateMap$0: function() {
        return window.localStorage;
      },
      static: {LocalStorageStore_open: function() {
          var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, store, $async$temp1;
          var $async$LocalStorageStore_open = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
            if ($async$errorCode === 1) {
              $async$currentError = $async$result;
              $async$goto = $async$handler;
            }
            while (true)
              switch ($async$goto) {
                case 0:
                  // Function start
                  $async$temp1 = X;
                  store = new $async$temp1.LocalStorageStore(null);
                  $async$temp1 = store;
                  $async$goto = 3;
                  return P._asyncHelper($async$temp1._open$0(0), $async$LocalStorageStore_open, $async$completer);
                case 3:
                  // returning from await.
                  $async$returnValue = store;
                  // goto return
                  $async$goto = 1;
                  break;
                case 1:
                  // return
                  return P._asyncHelper($async$returnValue, 0, $async$completer, null);
                case 2:
                  // rethrow
                  return P._asyncHelper($async$currentError, 1, $async$completer);
              }
          });
          return P._asyncHelper(null, $async$LocalStorageStore_open, $async$completer, null);
        }}
    }
  }], ["", "main.dart",, F, {
    "^": "",
    main: [function() {
      var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, locationStorageService, t1, t2, chaserActions, chaserStores, gitHubService, t3, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5, $async$temp6, $async$temp7, $async$temp8;
      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$temp1.setClientConfiguration();
              $async$temp1 = L;
              $async$temp1 = $async$temp1;
              $async$temp2 = [];
              $async$temp3 = P;
              locationStorageService = new $async$temp1.LocationStorageService(null, $async$temp2, new $async$temp3.DateTime(Date.now(), false), null);
              $async$temp1 = locationStorageService;
              $async$goto = 2;
              return P._asyncHelper($async$temp1.load$0(0), $async$main, $async$completer);
            case 2:
              // returning from await.
              $async$temp1 = H;
              $async$temp1 = $async$temp1;
              $async$temp2 = G;
              $async$temp2 = new $async$temp2.Action([]);
              $async$temp3 = P;
              t1 = $async$temp1.setRuntimeTypeInfo($async$temp2, [$async$temp3.bool]);
              $async$temp1 = H;
              $async$temp1 = $async$temp1;
              $async$temp2 = G;
              $async$temp2 = new $async$temp2.Action([]);
              $async$temp3 = P;
              t2 = $async$temp1.setRuntimeTypeInfo($async$temp2, [$async$temp3.String]);
              $async$temp1 = A;
              $async$temp1 = $async$temp1;
              $async$temp2 = A;
              $async$temp2 = new $async$temp2.AtMentionActions(t1);
              $async$temp3 = A;
              $async$temp3 = $async$temp3;
              $async$temp4 = t2;
              $async$temp5 = H;
              $async$temp5 = $async$temp5;
              $async$temp6 = G;
              $async$temp6 = new $async$temp6.Action([]);
              $async$temp7 = P;
              $async$temp3 = new $async$temp3.AuthActions($async$temp4, $async$temp5.setRuntimeTypeInfo($async$temp6, [$async$temp7.bool]));
              $async$temp4 = A;
              $async$temp4 = $async$temp4;
              $async$temp5 = H;
              $async$temp5 = $async$temp5;
              $async$temp6 = G;
              $async$temp5 = $async$temp5.setRuntimeTypeInfo(new $async$temp6.Action([]), [null]);
              $async$temp6 = H;
              $async$temp6 = $async$temp6;
              $async$temp7 = G;
              $async$temp6 = $async$temp6.setRuntimeTypeInfo(new $async$temp7.Action([]), [null]);
              $async$temp7 = H;
              $async$temp7 = $async$temp7;
              $async$temp8 = G;
              $async$temp4 = new $async$temp4.LocationActions($async$temp5, $async$temp6, $async$temp7.setRuntimeTypeInfo(new $async$temp8.Action([]), [null]));
              $async$temp5 = A;
              $async$temp5 = $async$temp5;
              $async$temp6 = H;
              $async$temp6 = $async$temp6;
              $async$temp7 = G;
              $async$temp7 = new $async$temp7.Action([]);
              $async$temp8 = A;
              $async$temp6 = $async$temp6.setRuntimeTypeInfo($async$temp7, [$async$temp8.PopoverProps]);
              $async$temp7 = H;
              $async$temp7 = $async$temp7;
              $async$temp8 = G;
              chaserActions = new $async$temp1.ChaserActions($async$temp2, $async$temp3, $async$temp4, new $async$temp5.PopoverActions($async$temp6, $async$temp7.setRuntimeTypeInfo(new $async$temp8.Action([]), [null])));
              $async$temp1 = L;
              chaserStores = new $async$temp1.ChaserStores(null, null, null, locationStorageService, null, null, null);
              $async$temp1 = A;
              t1 = $async$temp1.StatusService$();
              $async$temp1 = chaserStores;
              $async$temp1.statusService = t1;
              $async$temp1 = D;
              gitHubService = new $async$temp1.GitHubService(null, null);
              $async$temp1 = gitHubService;
              $async$temp1._statusService = t1;
              $async$temp1 = L;
              t3 = new $async$temp1.UserStore(false, null, false, gitHubService, chaserActions, null, null, null);
              $async$temp1 = t3;
              $async$temp1.Store$0();
              $async$temp1 = t3;
              $async$temp1.load$0(0);
              $async$temp1 = t2;
              $async$temp1 = $async$temp1;
              $async$temp2 = t3;
              $async$temp1.listen$1($async$temp2.get$_authUser());
              $async$temp1 = chaserStores;
              $async$temp1.userStore = t3;
              $async$temp1 = L;
              t2 = $async$temp1.LocationStore$(chaserActions);
              $async$temp1 = chaserStores;
              $async$temp1.locationStore = t2;
              $async$temp1 = chaserStores;
              $async$temp2 = L;
              $async$temp1.atMentionStore = $async$temp2.AtMentionStore$(chaserActions, gitHubService, t3, t2, t1, locationStorageService);
              $async$temp1 = chaserStores;
              $async$temp2 = L;
              $async$temp1.pullRequestsStore = $async$temp2.PullRequestsStore$(chaserActions, gitHubService, t3, t2, t1, locationStorageService);
              $async$temp1 = $;
              $async$temp1 = $async$temp1.$get$render();
              $async$temp1 = $async$temp1;
              $async$temp2 = $;
              $async$temp2 = $async$temp2.$get$ChaserApp();
              $async$temp2 = $async$temp2;
              $async$temp3 = P;
              $async$temp2 = $async$temp2.call$1($async$temp3.LinkedHashMap__makeLiteral(["store", chaserStores, "actions", chaserActions]));
              $async$temp3 = document;
              $async$temp1.call$2($async$temp2, $async$temp3.querySelector("#output"));
              // implicit return
              return P._asyncHelper(null, 0, $async$completer, null);
            case 1:
              // rethrow
              return P._asyncHelper($async$currentError, 1, $async$completer);
          }
      });
      return P._asyncHelper(null, $async$main, $async$completer, null);
    }, "call$0", "main__main$closure", 0, 0, 0]
  }, 1], ["react", "package:react/react.dart",, V, {
    "^": "",
    Component: {
      "^": "Object;props*,ref',state>,nextProps@",
      get$displayName: function(_) {
        return new H.TypeImpl(H.getRuntimeTypeString(this), null).toString$0(0);
      },
      initComponentInternal$5: function(props, _jsRedraw, ref, getDOMNode, _jsThis) {
        var t1;
        this._jsRedraw = _jsRedraw;
        this.ref = ref;
        this.getDOMNode = getDOMNode;
        this._jsThis = _jsThis;
        t1 = P.LinkedHashMap_LinkedHashMap$from(props, null, null);
        this.props = t1;
        this.nextProps = t1;
      },
      initStateInternal$0: function() {
        this.state = P.LinkedHashMap_LinkedHashMap$from(this.getInitialState$0(), null, null);
        this.transferComponentState$0();
      },
      get$prevState: function() {
        return this._prevState;
      },
      get$nextState: function() {
        var t1 = this._nextState;
        return t1 == null ? this.state : t1;
      },
      transferComponentState$0: function() {
        var t1, t2;
        t1 = this.state;
        this._prevState = t1;
        t2 = this._nextState;
        if (t2 != null) {
          this.state = t2;
          t1 = t2;
        }
        this._nextState = P.LinkedHashMap_LinkedHashMap$from(t1, null, null);
      },
      redraw$0: function() {
        this.setState$1(0, P.LinkedHashMap__makeEmpty());
      },
      setState$1: function(_, newState) {
        if (newState != null)
          this._nextState.addAll$1(0, newState);
        this._jsRedraw$0();
      },
      componentWillMount$0: function() {
      },
      componentDidMount$0: function() {
      },
      componentWillReceiveProps$1: function(newProps) {
      },
      shouldComponentUpdate$2: function(nextProps, nextState) {
        return true;
      },
      componentWillUpdate$2: function(nextProps, nextState) {
      },
      componentDidUpdate$2: function(prevProps, prevState) {
      },
      componentWillUnmount$0: function() {
      },
      getInitialState$0: function() {
        return P.LinkedHashMap__makeEmpty();
      },
      getDefaultProps$0: function() {
        return P.LinkedHashMap__makeEmpty();
      },
      ref$1: function($receiver, arg0) {
        return this.ref.call$1(arg0);
      },
      _jsRedraw$0: function() {
        return this._jsRedraw.call$0();
      }
    },
    SyntheticEvent: {
      "^": "Object;bubbles>,cancelable>,currentTarget>,eventPhase>,isTrusted>,nativeEvent>,target>,timeStamp>,type>",
      get$defaultPrevented: function(_) {
        return this._defaultPrevented;
      },
      preventDefault$0: function(_) {
        this._defaultPrevented = true;
        this._preventDefault$0();
      },
      _preventDefault$0: function() {
        return this._preventDefault.call$0();
      },
      stopPropagation$0: function($receiver) {
        return this.stopPropagation.call$0();
      }
    },
    SyntheticClipboardEvent: {
      "^": "SyntheticEvent;clipboardData>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticKeyboardEvent: {
      "^": "SyntheticEvent;altKey>,$char>,ctrlKey>,locale>,location>,key>,metaKey>,repeat>,shiftKey>,keyCode>,charCode>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticFocusEvent: {
      "^": "SyntheticEvent;relatedTarget>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticFormEvent: {
      "^": "SyntheticEvent;bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticDataTransfer: {
      "^": "Object;dropEffect>,effectAllowed>,files>,types>"
    },
    SyntheticMouseEvent: {
      "^": "SyntheticEvent;altKey>,button>,buttons>,clientX>,clientY>,ctrlKey>,dataTransfer>,metaKey>,pageX>,pageY>,relatedTarget>,screenX>,screenY>,shiftKey>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticTouchEvent: {
      "^": "SyntheticEvent;altKey>,changedTouches>,ctrlKey>,metaKey>,shiftKey>,targetTouches>,touches>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticUIEvent: {
      "^": "SyntheticEvent;detail>,view>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    SyntheticWheelEvent: {
      "^": "SyntheticEvent;deltaX>,deltaMode>,deltaY>,deltaZ>,bubbles,cancelable,currentTarget,_defaultPrevented,_preventDefault,stopPropagation,eventPhase,isTrusted,nativeEvent,target,timeStamp,type"
    },
    closure1: {
      "^": "Closure:3;",
      call$2: function(component, element) {
        throw H.wrapException(P.Exception_Exception("setClientConfiguration must be called before render."));
      }
    },
    closure0: {
      "^": "Closure:11;",
      call$2: [function(componentFactory, skipMethods) {
        throw H.wrapException(P.Exception_Exception("setClientConfiguration must be called before registerComponent."));
      }, function(componentFactory) {
        return this.call$2(componentFactory, null);
      }, "call$1", null, null, null, 2, 2, null, 0, 17, 22, "call"]
    }
  }], ["react_client", "package:react/react_client.dart",, A, {
    "^": "",
    listifyChildren: function(children) {
      var t1 = J.getInterceptor(children);
      if (!!t1.$isIterable && !t1.$isList)
        return t1.toList$1$growable(children, false);
      else
        return children;
    },
    _registerComponent: [function(componentFactory, skipMethods) {
      var zone, getDefaultProps, getInitialState, componentWillMount, componentDidMount, t1, componentWillReceiveProps, shouldComponentUpdate, componentWillUpdate, componentDidUpdate, componentWillUnmount, render, t2, t3, reactComponentClass;
      zone = $.Zone__current;
      getDefaultProps = P.allowInterop(new A._registerComponent_closure(zone));
      getInitialState = P.allowInteropCaptureThis(new A._registerComponent_closure0(componentFactory, zone));
      componentWillMount = P.allowInteropCaptureThis(new A._registerComponent_closure1(zone));
      componentDidMount = P.allowInteropCaptureThis(new A._registerComponent_closure2(zone));
      t1 = new A._registerComponent__afterPropsChange();
      componentWillReceiveProps = P.allowInteropCaptureThis(new A._registerComponent_closure3(zone, new A._registerComponent__getNextProps()));
      shouldComponentUpdate = P.allowInteropCaptureThis(new A._registerComponent_closure4(zone, t1));
      componentWillUpdate = P.allowInteropCaptureThis(new A._registerComponent_closure5(zone, t1));
      componentDidUpdate = P.allowInteropCaptureThis(new A._registerComponent_closure6(zone));
      componentWillUnmount = P.allowInteropCaptureThis(new A._registerComponent_closure7(zone));
      render = P.allowInteropCaptureThis(new A._registerComponent_closure8(zone));
      t1 = J.get$displayName$x(componentFactory.call$0());
      t2 = J.getInterceptor$asx(skipMethods);
      t3 = t2.contains$1(skipMethods, "componentDidMount") === true ? null : componentDidMount;
      t2 = t2.contains$1(skipMethods, "componentDidUpdate") === true ? null : componentDidUpdate;
      t1 = {componentDidMount: t3, componentDidUpdate: t2, componentWillMount: componentWillMount, componentWillReceiveProps: componentWillReceiveProps, componentWillUnmount: componentWillUnmount, componentWillUpdate: componentWillUpdate, displayName: t1, getDefaultProps: getDefaultProps, getInitialState: getInitialState, render: render, shouldComponentUpdate: shouldComponentUpdate};
      reactComponentClass = self.React.createClass(t1);
      t1 = J.getInterceptor$x(reactComponentClass);
      t1.set$dartDefaultProps(reactComponentClass, H.ConstantMap_ConstantMap$from(componentFactory.call$0().getDefaultProps$0(), null, null));
      return H.setRuntimeTypeInfo(new A.ReactDartComponentFactoryProxy(reactComponentClass, self.React.createFactory(reactComponentClass), t1.get$dartDefaultProps(reactComponentClass)), [null]);
    }, function(componentFactory) {
      return A._registerComponent(componentFactory, C.List_empty);
    }, "call$2", "call$1", "react_client___registerComponent$closure", 2, 2, 63, 40, 17, 22],
    _reactDom: [function($name) {
      return new A.ReactDomComponentFactoryProxy($name, self.React.createFactory($name));
    }, "call$1", "react_client___reactDom$closure", 2, 0, 24],
    _getValueFromDom: function(domElem) {
      var t1 = J.getInterceptor$x(domElem);
      if (J.$eq$(J.$index$asx(t1.get$attributes(domElem), "type"), "checkbox"))
        return t1.get$checked(domElem);
      else
        return t1.get$value(domElem);
    },
    _convertBoundValues: function(args) {
      var t1, boundValue, t2, t3;
      t1 = J.getInterceptor$asx(args);
      boundValue = t1.$index(args, "value");
      t2 = J.getInterceptor(boundValue);
      if (!!t2.$isList) {
        t3 = t2.$index(boundValue, 0);
        if (J.$eq$(t1.$index(args, "type"), "checkbox")) {
          if (t3 === true)
            t1.$indexSet(args, "checked", true);
          else if (t1.containsKey$1(args, "checked") === true)
            t1.remove$1(args, "checked");
        } else
          t1.$indexSet(args, "value", t3);
        t1.$indexSet(args, "value", t2.$index(boundValue, 0));
        t1.$indexSet(args, "onChange", new A._convertBoundValues_closure(boundValue, t1.$index(args, "onChange")));
      }
    },
    _convertEventHandlers: function(args) {
      J.forEach$1$ax(args, new A._convertEventHandlers_closure(args, $.Zone__current));
    },
    syntheticClipboardEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticClipboardEvent(t1.get$clipboardData(e), t2, t3, t4, t5, new A.syntheticClipboardEventFactory_closure(e), new A.syntheticClipboardEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticClipboardEventFactory$closure", 2, 0, 64],
    syntheticKeyboardEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      t12 = t1.get$altKey(e);
      t13 = t1.get$$char(e);
      t14 = t1.get$charCode(e);
      t15 = t1.get$ctrlKey(e);
      t16 = t1.get$locale(e);
      t17 = t1.get$location(e);
      t18 = t1.get$key(e);
      t19 = t1.get$keyCode(e);
      return new V.SyntheticKeyboardEvent(t12, t13, t15, t16, t17, t18, t1.get$metaKey(e), t1.get$repeat(e), t1.get$shiftKey(e), t19, t14, t2, t3, t4, t5, new A.syntheticKeyboardEventFactory_closure(e), new A.syntheticKeyboardEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticKeyboardEventFactory$closure", 2, 0, 65],
    syntheticFocusEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticFocusEvent(t1.get$relatedTarget(e), t2, t3, t4, t5, new A.syntheticFocusEventFactory_closure(e), new A.syntheticFocusEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticFocusEventFactory$closure", 2, 0, 66],
    syntheticFormEventFactory: [function(e) {
      var t1 = J.getInterceptor$x(e);
      return new V.SyntheticFormEvent(t1.get$bubbles(e), t1.get$cancelable(e), t1.get$currentTarget(e), t1.get$defaultPrevented(e), new A.syntheticFormEventFactory_closure(e), new A.syntheticFormEventFactory_closure0(e), t1.get$eventPhase(e), t1.get$isTrusted(e), t1.get$nativeEvent(e), t1.get$target(e), t1.get$timeStamp(e), t1.get$type(e));
    }, "call$1", "react_client__syntheticFormEventFactory$closure", 2, 0, 67],
    syntheticDataTransferFactory: function(dt) {
      var effectAllowed, files, i, t1, types, exception;
      if (dt == null)
        return;
      files = [];
      if (J.get$files$x(dt) != null) {
        i = 0;
        while (true) {
          t1 = J.get$length$asx(J.get$files$x(dt));
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          files.push(J.$index$asx(J.get$files$x(dt), i));
          ++i;
        }
      }
      types = [];
      if (J.get$types$x(dt) != null) {
        i = 0;
        while (true) {
          t1 = J.get$length$asx(J.get$types$x(dt));
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          types.push(J.$index$asx(J.get$types$x(dt), i));
          ++i;
        }
      }
      effectAllowed = null;
      try {
        effectAllowed = J.get$effectAllowed$x(dt);
      } catch (exception) {
        H.unwrapException(exception);
        effectAllowed = "uninitialized";
      }
      return new V.SyntheticDataTransfer(J.get$dropEffect$x(dt), effectAllowed, files, types);
    },
    syntheticMouseEventFactory: [function(e) {
      var t1, dt, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      dt = A.syntheticDataTransferFactory(t1.get$dataTransfer(e));
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticMouseEvent(t1.get$altKey(e), t1.get$button(e), t1.get$buttons(e), t1.get$clientX(e), t1.get$clientY(e), t1.get$ctrlKey(e), dt, t1.get$metaKey(e), t1.get$pageX(e), t1.get$pageY(e), t1.get$relatedTarget(e), t1.get$screenX(e), t1.get$screenY(e), t1.get$shiftKey(e), t2, t3, t4, t5, new A.syntheticMouseEventFactory_closure(e), new A.syntheticMouseEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticMouseEventFactory$closure", 2, 0, 68, 1],
    syntheticTouchEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticTouchEvent(t1.get$altKey(e), t1.get$changedTouches(e), t1.get$ctrlKey(e), t1.get$metaKey(e), t1.get$shiftKey(e), t1.get$targetTouches(e), t1.get$touches(e), t2, t3, t4, t5, new A.syntheticTouchEventFactory_closure(e), new A.syntheticTouchEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticTouchEventFactory$closure", 2, 0, 69],
    syntheticUIEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticUIEvent(t1.get$detail(e), t1.get$view(e), t2, t3, t4, t5, new A.syntheticUIEventFactory_closure(e), new A.syntheticUIEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticUIEventFactory$closure", 2, 0, 70],
    syntheticWheelEventFactory: [function(e) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$bubbles(e);
      t3 = t1.get$cancelable(e);
      t4 = t1.get$currentTarget(e);
      t5 = t1.get$defaultPrevented(e);
      t6 = t1.get$eventPhase(e);
      t7 = t1.get$isTrusted(e);
      t8 = t1.get$nativeEvent(e);
      t9 = t1.get$target(e);
      t10 = t1.get$timeStamp(e);
      t11 = t1.get$type(e);
      return new V.SyntheticWheelEvent(t1.get$deltaX(e), t1.get$deltaMode(e), t1.get$deltaY(e), t1.get$deltaZ(e), t2, t3, t4, t5, new A.syntheticWheelEventFactory_closure(e), new A.syntheticWheelEventFactory_closure0(e), t6, t7, t8, t9, t10, t11);
    }, "call$1", "react_client__syntheticWheelEventFactory$closure", 2, 0, 71],
    _findDomNode: [function(component) {
      var t1 = component instanceof V.Component ? component._jsThis : component;
      return self.ReactDOM.findDOMNode(t1);
    }, "call$1", "react_client___findDomNode$closure", 2, 0, 1],
    setClientConfiguration: function() {
      var exception;
      try {
        self.React.isValidElement(null);
        self.ReactDOM.findDOMNode(null);
      } catch (exception) {
        if (!!J.getInterceptor(H.unwrapException(exception)).$isNoSuchMethodError)
          throw H.wrapException(P.Exception_Exception("react.js and react_dom.js must be loaded."));
        else
          throw exception;
      }
      $.registerComponent = A.react_client___registerComponent$closure();
      $.render = K.react_interop_ReactDom_render$closure();
      $.renderToString = K.react_interop_ReactDomServer_renderToString$closure();
      $.renderToStaticMarkup = K.react_interop_ReactDomServer_renderToStaticMarkup$closure();
      $.unmountComponentAtNode = K.react_interop_ReactDom_unmountComponentAtNode$closure();
      $.findDOMNode = A.react_client___findDomNode$closure();
      $.a = A.react_client___reactDom$closure().call$1("a");
      $.abbr = A.react_client___reactDom$closure().call$1("abbr");
      $.address = A.react_client___reactDom$closure().call$1("address");
      $.area = A.react_client___reactDom$closure().call$1("area");
      $.article = A.react_client___reactDom$closure().call$1("article");
      $.aside = A.react_client___reactDom$closure().call$1("aside");
      $.audio = A.react_client___reactDom$closure().call$1("audio");
      $.b = A.react_client___reactDom$closure().call$1("b");
      $.base = A.react_client___reactDom$closure().call$1("base");
      $.bdi = A.react_client___reactDom$closure().call$1("bdi");
      $.bdo = A.react_client___reactDom$closure().call$1("bdo");
      $.big = A.react_client___reactDom$closure().call$1("big");
      $.blockquote = A.react_client___reactDom$closure().call$1("blockquote");
      $.body = A.react_client___reactDom$closure().call$1("body");
      $.br = A.react_client___reactDom$closure().call$1("br");
      $.button = A.react_client___reactDom$closure().call$1("button");
      $.canvas = A.react_client___reactDom$closure().call$1("canvas");
      $.caption = A.react_client___reactDom$closure().call$1("caption");
      $.cite = A.react_client___reactDom$closure().call$1("cite");
      $.code = A.react_client___reactDom$closure().call$1("code");
      $.col = A.react_client___reactDom$closure().call$1("col");
      $.colgroup = A.react_client___reactDom$closure().call$1("colgroup");
      $.data = A.react_client___reactDom$closure().call$1("data");
      $.datalist = A.react_client___reactDom$closure().call$1("datalist");
      $.dd = A.react_client___reactDom$closure().call$1("dd");
      $.del = A.react_client___reactDom$closure().call$1("del");
      $.details = A.react_client___reactDom$closure().call$1("details");
      $.dfn = A.react_client___reactDom$closure().call$1("dfn");
      $.dialog = A.react_client___reactDom$closure().call$1("dialog");
      $.div = A.react_client___reactDom$closure().call$1("div");
      $.dl = A.react_client___reactDom$closure().call$1("dl");
      $.dt = A.react_client___reactDom$closure().call$1("dt");
      $.em = A.react_client___reactDom$closure().call$1("em");
      $.embed = A.react_client___reactDom$closure().call$1("embed");
      $.fieldset = A.react_client___reactDom$closure().call$1("fieldset");
      $.figcaption = A.react_client___reactDom$closure().call$1("figcaption");
      $.figure = A.react_client___reactDom$closure().call$1("figure");
      $.footer = A.react_client___reactDom$closure().call$1("footer");
      $.form = A.react_client___reactDom$closure().call$1("form");
      $.h1 = A.react_client___reactDom$closure().call$1("h1");
      $.h2 = A.react_client___reactDom$closure().call$1("h2");
      $.h3 = A.react_client___reactDom$closure().call$1("h3");
      $.h4 = A.react_client___reactDom$closure().call$1("h4");
      $.h5 = A.react_client___reactDom$closure().call$1("h5");
      $.h6 = A.react_client___reactDom$closure().call$1("h6");
      $.head = A.react_client___reactDom$closure().call$1("head");
      $.header = A.react_client___reactDom$closure().call$1("header");
      $.hr = A.react_client___reactDom$closure().call$1("hr");
      $.html = A.react_client___reactDom$closure().call$1("html");
      $.i = A.react_client___reactDom$closure().call$1("i");
      $.iframe = A.react_client___reactDom$closure().call$1("iframe");
      $.img = A.react_client___reactDom$closure().call$1("img");
      $.input = A.react_client___reactDom$closure().call$1("input");
      $.ins = A.react_client___reactDom$closure().call$1("ins");
      $.kbd = A.react_client___reactDom$closure().call$1("kbd");
      $.keygen = A.react_client___reactDom$closure().call$1("keygen");
      $.label = A.react_client___reactDom$closure().call$1("label");
      $.legend = A.react_client___reactDom$closure().call$1("legend");
      $.li = A.react_client___reactDom$closure().call$1("li");
      $.link = A.react_client___reactDom$closure().call$1("link");
      $.main0 = A.react_client___reactDom$closure().call$1("main");
      $.map = A.react_client___reactDom$closure().call$1("map");
      $.mark = A.react_client___reactDom$closure().call$1("mark");
      $.menu = A.react_client___reactDom$closure().call$1("menu");
      $.menuitem = A.react_client___reactDom$closure().call$1("menuitem");
      $.meta = A.react_client___reactDom$closure().call$1("meta");
      $.meter = A.react_client___reactDom$closure().call$1("meter");
      $.nav = A.react_client___reactDom$closure().call$1("nav");
      $.noscript = A.react_client___reactDom$closure().call$1("noscript");
      $.object = A.react_client___reactDom$closure().call$1("object");
      $.ol = A.react_client___reactDom$closure().call$1("ol");
      $.optgroup = A.react_client___reactDom$closure().call$1("optgroup");
      $.option = A.react_client___reactDom$closure().call$1("option");
      $.output = A.react_client___reactDom$closure().call$1("output");
      $.p = A.react_client___reactDom$closure().call$1("p");
      $.param = A.react_client___reactDom$closure().call$1("param");
      $.picture = A.react_client___reactDom$closure().call$1("picture");
      $.pre = A.react_client___reactDom$closure().call$1("pre");
      $.progress = A.react_client___reactDom$closure().call$1("progress");
      $.q = A.react_client___reactDom$closure().call$1("q");
      $.rp = A.react_client___reactDom$closure().call$1("rp");
      $.rt = A.react_client___reactDom$closure().call$1("rt");
      $.ruby = A.react_client___reactDom$closure().call$1("ruby");
      $.s = A.react_client___reactDom$closure().call$1("s");
      $.samp = A.react_client___reactDom$closure().call$1("samp");
      $.script = A.react_client___reactDom$closure().call$1("script");
      $.section = A.react_client___reactDom$closure().call$1("section");
      $.select = A.react_client___reactDom$closure().call$1("select");
      $.small = A.react_client___reactDom$closure().call$1("small");
      $.source = A.react_client___reactDom$closure().call$1("source");
      $.span = A.react_client___reactDom$closure().call$1("span");
      $.strong = A.react_client___reactDom$closure().call$1("strong");
      $.style = A.react_client___reactDom$closure().call$1("style");
      $.sub = A.react_client___reactDom$closure().call$1("sub");
      $.summary = A.react_client___reactDom$closure().call$1("summary");
      $.sup = A.react_client___reactDom$closure().call$1("sup");
      $.table = A.react_client___reactDom$closure().call$1("table");
      $.tbody = A.react_client___reactDom$closure().call$1("tbody");
      $.td = A.react_client___reactDom$closure().call$1("td");
      $.textarea = A.react_client___reactDom$closure().call$1("textarea");
      $.tfoot = A.react_client___reactDom$closure().call$1("tfoot");
      $.th = A.react_client___reactDom$closure().call$1("th");
      $.thead = A.react_client___reactDom$closure().call$1("thead");
      $.time = A.react_client___reactDom$closure().call$1("time");
      $.title = A.react_client___reactDom$closure().call$1("title");
      $.tr = A.react_client___reactDom$closure().call$1("tr");
      $.track = A.react_client___reactDom$closure().call$1("track");
      $.u = A.react_client___reactDom$closure().call$1("u");
      $.ul = A.react_client___reactDom$closure().call$1("ul");
      $.variable = A.react_client___reactDom$closure().call$1("var");
      $.video = A.react_client___reactDom$closure().call$1("video");
      $.wbr = A.react_client___reactDom$closure().call$1("wbr");
      $.circle = A.react_client___reactDom$closure().call$1("circle");
      $.clipPath = A.react_client___reactDom$closure().call$1("clipPath");
      $.defs = A.react_client___reactDom$closure().call$1("defs");
      $.ellipse = A.react_client___reactDom$closure().call$1("ellipse");
      $.g = A.react_client___reactDom$closure().call$1("g");
      $.image = A.react_client___reactDom$closure().call$1("image");
      $.line = A.react_client___reactDom$closure().call$1("line");
      $.linearGradient = A.react_client___reactDom$closure().call$1("linearGradient");
      $.mask = A.react_client___reactDom$closure().call$1("mask");
      $.path = A.react_client___reactDom$closure().call$1("path");
      $.pattern = A.react_client___reactDom$closure().call$1("pattern");
      $.polygon = A.react_client___reactDom$closure().call$1("polygon");
      $.polyline = A.react_client___reactDom$closure().call$1("polyline");
      $.radialGradient = A.react_client___reactDom$closure().call$1("radialGradient");
      $.rect = A.react_client___reactDom$closure().call$1("rect");
      $.stop = A.react_client___reactDom$closure().call$1("stop");
      $.svg = A.react_client___reactDom$closure().call$1("svg");
      $.text = A.react_client___reactDom$closure().call$1("text");
      $.tspan = A.react_client___reactDom$closure().call$1("tspan");
      $.render0 = K.react_interop_ReactDom_render$closure();
      $.unmountComponentAtNode0 = K.react_interop_ReactDom_unmountComponentAtNode$closure();
      $.findDOMNode0 = A.react_client___findDomNode$closure();
      $.renderToString0 = K.react_interop_ReactDomServer_renderToString$closure();
      $.renderToStaticMarkup0 = K.react_interop_ReactDomServer_renderToStaticMarkup$closure();
    },
    ReactComponentFactoryProxy: {
      "^": "Object:21;",
      $isFunction: 1
    },
    ReactDartComponentFactoryProxy: {
      "^": "ReactComponentFactoryProxy;reactClass,reactComponentFactory,defaultProps",
      get$type: function(_) {
        return this.reactClass;
      },
      call$2: [function(props, children) {
        children = A.listifyChildren(children);
        return H.subtypeCast(this.reactComponentFactory$2(A.ReactDartComponentFactoryProxy_generateExtendedJsProps(props, children, this.defaultProps), children), "$isReactElement", [H.getTypeArgumentByIndex(this, 0)], "$asReactElement");
      }, function(props) {
        return this.call$2(props, null);
      }, "call$1", null, null, "get$$call", 2, 2, null, 0, 23, 24],
      noSuchMethod$1: [function(_, invocation) {
        var props, children;
        if (J.$eq$(invocation.get$memberName(), C.Symbol_call) && invocation.get$isMethod() === true) {
          props = J.$index$asx(invocation.get$positionalArguments(), 0);
          children = A.listifyChildren(J.sublist$1$ax(invocation.get$positionalArguments(), 1));
          K.markChildrenValidated(children);
          return this.reactComponentFactory$2(A.ReactDartComponentFactoryProxy_generateExtendedJsProps(props, children, this.defaultProps), children);
        }
        return this.super$Object$noSuchMethod(this, invocation);
      }, null, "get$noSuchMethod", 2, 0, null, 10],
      reactComponentFactory$2: function(arg0, arg1) {
        return this.reactComponentFactory.call$2(arg0, arg1);
      },
      $signature: function() {
        return H.computeSignature(function(TComponent) {
          return {func: 1, ret: [K.ReactElement, TComponent], args: [P.Map], opt: [,]};
        }, this, "ReactDartComponentFactoryProxy");
      },
      static: {ReactDartComponentFactoryProxy_generateExtendedJsProps: function(props, children, defaultProps) {
          var extendedProps, internal, interopProps, t1, ref, t2;
          if (children == null)
            children = [];
          else if (!J.getInterceptor(children).$isIterable)
            children = [children];
          extendedProps = defaultProps != null ? P.LinkedHashMap_LinkedHashMap$from(defaultProps, null, null) : P.LinkedHashMap__makeEmpty();
          extendedProps.addAll$1(0, props);
          extendedProps.$indexSet(0, "children", children);
          extendedProps.remove$1(0, "key");
          extendedProps.remove$1(0, "ref");
          internal = new K.ReactDartComponentInternal(null, null, null);
          internal.props = extendedProps;
          interopProps = {internal: internal};
          t1 = J.getInterceptor$x(props);
          if (t1.containsKey$1(props, "key") === true)
            J.set$key$x(interopProps, t1.$index(props, "key"));
          if (t1.containsKey$1(props, "ref") === true) {
            ref = t1.$index(props, "ref");
            t1 = H.getDynamicRuntimeType();
            t1 = H.buildFunctionType(t1, [t1])._isTest$1(ref);
            t2 = J.getInterceptor$x(interopProps);
            if (t1)
              t2.set$ref(interopProps, P.allowInterop(new A.ReactDartComponentFactoryProxy_generateExtendedJsProps_closure(ref)));
            else
              t2.set$ref(interopProps, ref);
          }
          return interopProps;
        }}
    },
    ReactDartComponentFactoryProxy_generateExtendedJsProps_closure: {
      "^": "Closure:4;_captured_ref_0",
      call$1: [function(instance) {
        var t1 = instance == null ? null : J.get$internal$x(J.get$props$x(instance)).get$component();
        return this._captured_ref_0.call$1(t1);
      }, null, null, 2, 0, null, 43, "call"]
    },
    _registerComponent_closure: {
      "^": "Closure:0;_captured_zone_0",
      call$0: [function() {
        return this._captured_zone_0.run$1(new A._registerComponent__closure8());
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent__closure8: {
      "^": "Closure:0;",
      call$0: [function() {
        return {};
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure0: {
      "^": "Closure:4;_captured_componentFactory_1,_captured_zone_2",
      call$1: [function(jsThis) {
        return this._captured_zone_2.run$1(new A._registerComponent__closure7(this._captured_componentFactory_1, jsThis));
      }, null, null, 2, 0, null, 6, "call"]
    },
    _registerComponent__closure7: {
      "^": "Closure:0;_captured_componentFactory_3,_captured_jsThis_4",
      call$0: [function() {
        var t1, internal, component, t2;
        t1 = this._captured_jsThis_4;
        internal = J.get$internal$x(J.get$props$x(t1));
        component = this._captured_componentFactory_3.call$0();
        t2 = J.getInterceptor$x(internal);
        component.initComponentInternal$5(t2.get$props(internal), new A._registerComponent___closure(t1, internal), new A._registerComponent___closure0(t1), new A._registerComponent___closure1(t1), t1);
        internal.set$component(component);
        t2.set$isMounted(internal, false);
        t2.set$props(internal, J.get$props$x(component));
        component.initStateInternal$0();
        return {};
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent___closure: {
      "^": "Closure:0;_captured_jsThis_5,_captured_internal_6",
      call$0: [function() {
        if (J.get$isMounted$x(this._captured_internal_6) === true)
          J.setState$1$x(this._captured_jsThis_5, $.$get$emptyJsMap());
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent___closure0: {
      "^": "Closure:1;_captured_jsThis_7",
      call$1: [function($name) {
        var ref, t1;
        ref = $.$get$getProperty().call$2(J.get$refs$x(this._captured_jsThis_7), $name);
        if (ref == null)
          return;
        if (!!J.getInterceptor(ref).$isElement)
          return ref;
        H.interceptedTypeCast(ref, "$isReactComponent");
        t1 = C.ReactComponent_methods.get$props(ref);
        t1 = t1 == null ? t1 : J.get$internal$x(t1);
        t1 = t1 == null ? t1 : t1.get$component();
        return t1 == null ? ref : t1;
      }, null, null, 2, 0, null, 45, "call"]
    },
    _registerComponent___closure1: {
      "^": "Closure:0;_captured_jsThis_8",
      call$0: [function() {
        return self.ReactDOM.findDOMNode(this._captured_jsThis_8);
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure1: {
      "^": "Closure:4;_captured_zone_9",
      call$1: [function(jsThis) {
        return this._captured_zone_9.run$1(new A._registerComponent__closure6(jsThis));
      }, null, null, 2, 0, null, 6, "call"]
    },
    _registerComponent__closure6: {
      "^": "Closure:0;_captured_jsThis_10",
      call$0: [function() {
        var internal, t1;
        internal = J.get$internal$x(J.get$props$x(this._captured_jsThis_10));
        J.set$isMounted$x(internal, true);
        t1 = internal.get$component();
        t1.componentWillMount$0();
        t1.transferComponentState$0();
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure2: {
      "^": "Closure:4;_captured_zone_11",
      call$1: [function(jsThis) {
        return this._captured_zone_11.run$1(new A._registerComponent__closure5(jsThis));
      }, null, null, 2, 0, null, 6, "call"]
    },
    _registerComponent__closure5: {
      "^": "Closure:0;_captured_jsThis_12",
      call$0: [function() {
        J.get$internal$x(J.get$props$x(this._captured_jsThis_12)).get$component().componentDidMount$0();
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent__getNextProps: {
      "^": "Closure:22;",
      call$2: function(component, newArgs) {
        var newProps = J.get$props$x(J.get$internal$x(newArgs));
        return newProps != null ? P.LinkedHashMap_LinkedHashMap$from(newProps, null, null) : P.LinkedHashMap__makeEmpty();
      }
    },
    _registerComponent__afterPropsChange: {
      "^": "Closure:22;",
      call$2: function(component, newArgs) {
        J.get$internal$x(newArgs).set$component(component);
        J.set$props$x(component, component.get$nextProps());
        component.transferComponentState$0();
      }
    },
    _registerComponent_closure3: {
      "^": "Closure:36;_captured_zone_13,_captured__getNextProps_14",
      call$3: [function(jsThis, newArgs, reactInternal) {
        return this._captured_zone_13.run$1(new A._registerComponent__closure4(this._captured__getNextProps_14, jsThis, newArgs));
      }, function(jsThis, newArgs) {
        return this.call$3(jsThis, newArgs, null);
      }, "call$2", null, null, null, 4, 2, null, 0, 6, 15, 26, "call"]
    },
    _registerComponent__closure4: {
      "^": "Closure:0;_captured__getNextProps_15,_captured_jsThis_16,_captured_newArgs_17",
      call$0: [function() {
        var component, nextProps;
        component = J.get$internal$x(J.get$props$x(this._captured_jsThis_16)).get$component();
        nextProps = this._captured__getNextProps_15.call$2(component, this._captured_newArgs_17);
        component.set$nextProps(nextProps);
        component.componentWillReceiveProps$1(nextProps);
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure4: {
      "^": "Closure:13;_captured_zone_18,_captured__afterPropsChange_19",
      call$4: [function(jsThis, newArgs, nextState, nextContext) {
        return this._captured_zone_18.run$1(new A._registerComponent__closure3(this._captured__afterPropsChange_19, jsThis, newArgs));
      }, null, null, 8, 0, null, 6, 15, 27, 28, "call"]
    },
    _registerComponent__closure3: {
      "^": "Closure:0;_captured__afterPropsChange_20,_captured_jsThis_21,_captured_newArgs_22",
      call$0: [function() {
        var component = J.get$internal$x(J.get$props$x(this._captured_jsThis_21)).get$component();
        if (component.shouldComponentUpdate$2(component.get$nextProps(), component.get$nextState()) === true)
          return true;
        else {
          this._captured__afterPropsChange_20.call$2(component, this._captured_newArgs_22);
          return false;
        }
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure5: {
      "^": "Closure:38;_captured_zone_23,_captured__afterPropsChange_24",
      call$4: [function(jsThis, newArgs, nextState, nextContext) {
        return this._captured_zone_23.run$1(new A._registerComponent__closure2(this._captured__afterPropsChange_24, jsThis, newArgs));
      }, function(jsThis, newArgs, nextState) {
        return this.call$4(jsThis, newArgs, nextState, null);
      }, "call$3", null, null, null, 6, 2, null, 0, 6, 15, 27, 28, "call"]
    },
    _registerComponent__closure2: {
      "^": "Closure:0;_captured__afterPropsChange_25,_captured_jsThis_26,_captured_newArgs_27",
      call$0: [function() {
        var component = J.get$internal$x(J.get$props$x(this._captured_jsThis_26)).get$component();
        component.componentWillUpdate$2(component.get$nextProps(), component.get$nextState());
        this._captured__afterPropsChange_25.call$2(component, this._captured_newArgs_27);
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure6: {
      "^": "Closure:13;_captured_zone_28",
      call$4: [function(jsThis, prevProps, prevState, prevContext) {
        return this._captured_zone_28.run$1(new A._registerComponent__closure1(jsThis, prevProps));
      }, null, null, 8, 0, null, 6, 76, 51, 52, "call"]
    },
    _registerComponent__closure1: {
      "^": "Closure:0;_captured_jsThis_29,_captured_prevProps_30",
      call$0: [function() {
        var prevInternalProps, component;
        prevInternalProps = J.get$props$x(J.get$internal$x(this._captured_prevProps_30));
        component = J.get$internal$x(J.get$props$x(this._captured_jsThis_29)).get$component();
        component.componentDidUpdate$2(prevInternalProps, component.get$prevState());
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure7: {
      "^": "Closure:39;_captured_zone_31",
      call$2: [function(jsThis, reactInternal) {
        return this._captured_zone_31.run$1(new A._registerComponent__closure0(jsThis));
      }, function(jsThis) {
        return this.call$2(jsThis, null);
      }, "call$1", null, null, null, 2, 2, null, 0, 6, 26, "call"]
    },
    _registerComponent__closure0: {
      "^": "Closure:0;_captured_jsThis_32",
      call$0: [function() {
        var internal = J.get$internal$x(J.get$props$x(this._captured_jsThis_32));
        J.set$isMounted$x(internal, false);
        internal.get$component().componentWillUnmount$0();
      }, null, null, 0, 0, null, "call"]
    },
    _registerComponent_closure8: {
      "^": "Closure:4;_captured_zone_33",
      call$1: [function(jsThis) {
        return this._captured_zone_33.run$1(new A._registerComponent__closure(jsThis));
      }, null, null, 2, 0, null, 6, "call"]
    },
    _registerComponent__closure: {
      "^": "Closure:0;_captured_jsThis_34",
      call$0: [function() {
        return J.render$0$x(J.get$internal$x(J.get$props$x(this._captured_jsThis_34)).get$component());
      }, null, null, 0, 0, null, "call"]
    },
    ReactDomComponentFactoryProxy: {
      "^": "ReactComponentFactoryProxy:21;name,factory",
      get$type: function(_) {
        return this.name;
      },
      call$2: [function(props, children) {
        A._convertBoundValues(props);
        A._convertEventHandlers(props);
        return this.factory$2(R.jsify0(props), A.listifyChildren(children));
      }, function(props) {
        return this.call$2(props, null);
      }, "call$1", null, null, "get$$call", 2, 2, null, 0, 23, 24],
      noSuchMethod$1: [function(_, invocation) {
        var props, children;
        if (J.$eq$(invocation.get$memberName(), C.Symbol_call) && invocation.get$isMethod() === true) {
          props = J.$index$asx(invocation.get$positionalArguments(), 0);
          children = A.listifyChildren(J.sublist$1$ax(invocation.get$positionalArguments(), 1));
          A._convertBoundValues(props);
          A._convertEventHandlers(props);
          K.markChildrenValidated(children);
          return this.factory$2(R.jsify0(props), children);
        }
        return this.super$Object$noSuchMethod(this, invocation);
      }, null, "get$noSuchMethod", 2, 0, null, 10],
      factory$2: function(arg0, arg1) {
        return this.factory.call$2(arg0, arg1);
      }
    },
    _convertBoundValues_closure: {
      "^": "Closure:1;_captured_boundValue_0,_captured_onChange_1",
      call$1: [function($event) {
        var t1;
        J.$index$asx(this._captured_boundValue_0, 1).call$1(A._getValueFromDom(J.get$target$x($event)));
        t1 = this._captured_onChange_1;
        if (t1 != null)
          return t1.call$1($event);
      }, null, null, 2, 0, null, 29, "call"]
    },
    _convertEventHandlers_closure: {
      "^": "Closure:3;_captured_args_0,_captured_zone_1",
      call$2: [function(propKey, value) {
        var eventFactory = C.Map_Ag2No.$index(0, propKey);
        if (eventFactory != null && value != null)
          J.$indexSet$ax(this._captured_args_0, propKey, new A._convertEventHandlers__closure(this._captured_zone_1, value, eventFactory));
      }, null, null, 4, 0, null, 54, 5, "call"]
    },
    _convertEventHandlers__closure: {
      "^": "Closure:40;_captured_zone_2,_react_client$_captured_value_3,_captured_eventFactory_4",
      call$3: [function(e, domId, $event) {
        return this._captured_zone_2.run$1(new A._convertEventHandlers___closure(this._react_client$_captured_value_3, this._captured_eventFactory_4, e));
      }, function(e) {
        return this.call$3(e, null, null);
      }, "call$1", function(e, domId) {
        return this.call$3(e, domId, null);
      }, "call$2", null, null, null, null, 2, 4, null, 0, 0, 1, 75, 29, "call"]
    },
    _convertEventHandlers___closure: {
      "^": "Closure:0;_react_client$_captured_value_5,_captured_eventFactory_6,_captured_e_7",
      call$0: [function() {
        this._react_client$_captured_value_5.call$1(this._captured_eventFactory_6.call$1(this._captured_e_7));
      }, null, null, 0, 0, null, "call"]
    },
    syntheticClipboardEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticClipboardEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticKeyboardEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticKeyboardEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticFocusEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticFocusEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticFormEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticFormEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticMouseEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticMouseEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticTouchEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticTouchEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticUIEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticUIEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    },
    syntheticWheelEventFactory_closure: {
      "^": "Closure:0;_captured_e_0",
      call$0: function() {
        return J.preventDefault$0$x(this._captured_e_0);
      }
    },
    syntheticWheelEventFactory_closure0: {
      "^": "Closure:0;_captured_e_1",
      call$0: [function() {
        return J.stopPropagation$0$x(this._captured_e_1);
      }, null, null, 0, 0, null, "call"]
    }
  }], ["react_client.js_interop_helpers", "package:react/react_client/js_interop_helpers.dart",, R, {
    "^": "",
    _getProperty: [function(jsObj, key) {
      return self._getProperty(jsObj, key);
    }, "call$2", "js_interop_helpers___getProperty$closure", 4, 0, 19, 31, 7],
    _setProperty: [function(jsObj, key, value) {
      return self._setProperty(jsObj, key, value);
    }, "call$3", "js_interop_helpers___setProperty$closure", 6, 0, 72, 31, 7, 5],
    jsify0: function(map) {
      var jsMap = {};
      J.forEach$1$ax(map, new R.jsify_closure(jsMap));
      return jsMap;
    },
    _MissingJsMemberError: {
      "^": "Error;name,message",
      toString$0: function(_) {
        return "_MissingJsMemberError: The JS member `" + this.name + "` is missing and thus cannot be used as expected. " + this.message;
      }
    },
    closure14: {
      "^": "Closure:0;",
      call$0: function() {
        var t1, exception;
        try {
          t1 = {};
          self._getProperty(t1, null);
        } catch (exception) {
          H.unwrapException(exception);
          throw H.wrapException(new R._MissingJsMemberError("_getProperty", "Be sure to include React JS files included in this package (which has this and other JS interop helper functions included) or, alternatively, define the function yourself:\n    function _getProperty(obj, key) { return obj[key]; }"));
        }
        return R.js_interop_helpers___getProperty$closure();
      }
    },
    closure3: {
      "^": "Closure:0;",
      call$0: function() {
        var t1, exception;
        try {
          t1 = {};
          self._setProperty(t1, null, null);
        } catch (exception) {
          H.unwrapException(exception);
          throw H.wrapException(new R._MissingJsMemberError("_setProperty", "Be sure to include React JS files included in this package (which has this and other JS interop helper functions included) or, alternatively, define the function yourself:\n    function _setProperty(obj, key, value) { return obj[key] = value; }"));
        }
        return R.js_interop_helpers___setProperty$closure();
      }
    },
    EmptyObject: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    jsify_closure: {
      "^": "Closure:3;_captured_jsMap_0",
      call$2: [function(key, value) {
        var t1 = J.getInterceptor(value);
        if (!!t1.$isMap)
          value = R.jsify0(value);
        else if (!!t1.$isFunction)
          value = P.allowInterop(value);
        $.$get$setProperty().call$3(this._captured_jsMap_0, key, value);
      }, null, null, 4, 0, null, 7, 5, "call"]
    }
  }], ["react_client.react_interop", "package:react/react_client/react_interop.dart",, K, {
    "^": "",
    ReactDom_render: [function(component, element) {
      return self.ReactDOM.render(component, element);
    }, "call$2", "react_interop_ReactDom_render$closure", 4, 0, 73],
    ReactDom_unmountComponentAtNode: [function(element) {
      return self.ReactDOM.unmountComponentAtNode(element);
    }, "call$1", "react_interop_ReactDom_unmountComponentAtNode$closure", 2, 0, 54],
    ReactDomServer_renderToString: [function(component) {
      return self.ReactDOMServer.renderToString(component);
    }, "call$1", "react_interop_ReactDomServer_renderToString$closure", 2, 0, 26],
    ReactDomServer_renderToStaticMarkup: [function(component) {
      return self.ReactDOMServer.renderToStaticMarkup(component);
    }, "call$1", "react_interop_ReactDomServer_renderToStaticMarkup$closure", 2, 0, 26],
    markChildrenValidated: function(children) {
      J.forEach$1$ax(children, new K.markChildrenValidated_closure());
    },
    React: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactDom: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactDomServer: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactClass: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactClassConfig: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactElementStore: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactElement: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactComponent: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    InteropProps: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    ReactDartComponentInternal: {
      "^": "Object;component@,isMounted*,props*"
    },
    markChildrenValidated_closure: {
      "^": "Closure:1;",
      call$1: [function(child) {
        var t1;
        if (self.React.isValidElement(child) === true) {
          H.interceptedTypeCast(child, "$isReactElement");
          t1 = (child && C.ReactElement_methods).get$_store(child);
          if (t1 == null)
            ;
          else
            J.set$validated$x(t1, true);
        }
      }, null, null, 2, 0, null, 57, "call"]
    }
  }], ["react_client.synthetic_event_wrappers", "package:react/src/react_client/synthetic_event_wrappers.dart",, Q, {
    "^": "",
    SyntheticEvent0: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    SyntheticClipboardEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticKeyboardEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticFocusEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticFormEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticDataTransfer0: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    SyntheticMouseEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticTouchEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticUIEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    },
    SyntheticWheelEvent0: {
      "^": "SyntheticEvent0;",
      "%": ""
    }
  }], ["react_dom", "package:react/react_dom.dart",, R, {
    "^": "",
    closure2: {
      "^": "Closure:3;",
      call$2: function(component, container) {
        throw H.wrapException(P.Exception_Exception("setClientConfiguration must be called before render."));
      }
    }
  }], ["src.components.alerts", "package:wChaser/src/components/alert.dart",, L, {
    "^": "",
    closure13: {
      "^": "Closure:0;",
      call$0: [function() {
        return new L._Alert(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Alert: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      get$statusService: function() {
        return J.$index$asx(this.props, "statusService");
      },
      getInitialState$0: function() {
        return P.LinkedHashMap__makeLiteral(["alertText", ""]);
      },
      componentDidMount$0: function() {
        J.$index$asx(this.props, "statusService").get$alerts().listen$1(new L._Alert_componentDidMount_closure());
      },
      render$0: function(_) {
        var t1 = $.div;
        return t1.call$2(P.LinkedHashMap__makeLiteral(["className", J.get$isEmpty$asx(this.state.$index(0, "alertText")) === true ? "" : "chaser-alert"]), [this.state.$index(0, "alertText")]);
      }
    },
    _Alert_componentDidMount_closure: {
      "^": "Closure:1;",
      call$1: [function(_) {
      }, null, null, 2, 0, null, 2, "call"]
    }
  }], ["src.components.chaser_app", "package:wChaser/src/components/chaser_app.dart",, K, {
    "^": "",
    closure: {
      "^": "Closure:0;",
      call$0: [function() {
        return new K._ChaserApp([], null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _ChaserApp: {
      "^": "FluxComponent;_subscriptions,props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      get$statusService: function() {
        return J.$index$asx(this.props, "statusService");
      },
      get$atMentionStore: function() {
        return J.$index$asx(this.props, "store").get$atMentionStore();
      },
      redrawOn$0: function() {
        return [J.$index$asx(this.props, "store").get$userStore(), J.$index$asx(this.props, "store").get$atMentionStore(), J.$index$asx(this.props, "store").get$locationStore(), J.$index$asx(this.props, "store").get$pullRequestsStore()];
      },
      getInitialState$0: function() {
        return P.LinkedHashMap__makeLiteral(["pullRequests", J.$index$asx(this.props, "store").get$atMentionStore().get$atMentionPullRequests()]);
      },
      componentDidMount$0: function() {
        var t1 = H.setRuntimeTypeInfo(new W._EventStream(window, "keydown", false), [null]);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(new K._ChaserApp_componentDidMount_closure(this)), false), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      },
      render$0: function(_) {
        var t1, t2, t3, t4, chaserStore;
        if (J.$index$asx(this.props, "store").get$userStore().get$isReady() !== true)
          return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "chaser-container"]), [$.$get$Header().call$1(P.LinkedHashMap__makeLiteral(["loading", true])), $.$get$Loading().call$1(P.LinkedHashMap__makeEmpty())]);
        t1 = $.div;
        t2 = P.LinkedHashMap__makeLiteral(["className", "chaser-container"]);
        if (J.$index$asx(this.props, "store").get$statusService().get$authed() === true) {
          t3 = J.$eq$(J.get$currentView$x(J.$index$asx(this.props, "store").get$locationStore()), C.ChaserViews_1);
          t4 = this.props;
          chaserStore = t3 ? J.$index$asx(t4, "store").get$pullRequestsStore() : J.$index$asx(t4, "store").get$atMentionStore();
          t3 = [$.$get$Header().call$1(P.LinkedHashMap__makeLiteral(["actions", J.$index$asx(this.props, "actions"), "loading", chaserStore.get$loading()])), $.$get$Alert().call$1(P.LinkedHashMap__makeLiteral(["statusService", J.$index$asx(this.props, "store").get$statusService()])), $.$get$ChaserGrid().call$1(P.LinkedHashMap__makeLiteral(["chaserStore", chaserStore, "actions", J.$index$asx(this.props, "actions")])), $.$get$Footer().call$1(P.LinkedHashMap__makeLiteral(["chaserStore", chaserStore, "actions", J.$index$asx(this.props, "actions")]))];
        } else
          t3 = [$.$get$Header().call$1(P.LinkedHashMap__makeLiteral(["loading", true])), $.$get$Login().call$1(P.LinkedHashMap__makeLiteral(["actions", J.$index$asx(this.props, "actions")]))];
        return t1.call$2(t2, t3);
      },
      $asFluxComponent: Isolate.functionThatReturnsNull,
      $asFluxComponentCommon_BatchedRedraws: Isolate.functionThatReturnsNull,
      $asFluxComponentCommon: Isolate.functionThatReturnsNull
    },
    _ChaserApp_componentDidMount_closure: {
      "^": "Closure:41;_chaser_app$_captured_this_0",
      call$1: [function(keyboardEvent) {
        var t1 = J.getInterceptor$x(keyboardEvent);
        if (J.$eq$(t1.get$keyCode(keyboardEvent), 37))
          J.$index$asx(this._chaser_app$_captured_this_0.props, "actions").get$locationActions().changeViewPrevious$0();
        else if (J.$eq$(t1.get$keyCode(keyboardEvent), 39))
          J.$index$asx(this._chaser_app$_captured_this_0.props, "actions").get$locationActions().changeViewNext$0();
      }, null, null, 2, 0, null, 58, "call"]
    }
  }], ["src.components.chaser_grid", "package:wChaser/src/components/chaser_grid.dart",, O, {
    "^": "",
    closure7: {
      "^": "Closure:0;",
      call$0: [function() {
        return new O._ChaserGrid(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _ChaserGrid: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      render$0: function(_) {
        var $content = $.$get$Loading().call$1(P.LinkedHashMap__makeEmpty());
        if (J.$index$asx(this.props, "chaserStore").get$loading() !== true && J.$gt$n(J.get$length$asx(J.$index$asx(this.props, "chaserStore").get$displayPullRequests()), 0) === true)
          $content = J.toList$0$ax(J.map$1$ax(J.$index$asx(this.props, "chaserStore").get$displayPullRequests(), new O._ChaserGrid_render_closure(this)));
        else if (J.$index$asx(this.props, "chaserStore").get$loading() !== true)
          $content = $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "chaser-grid-empty"]), ["I got nothing for ya", $.br.call$1(P.LinkedHashMap__makeEmpty()), $.a.call$2(P.LinkedHashMap__makeLiteral(["href", "#", "className", "refresh", "onClick", new O._ChaserGrid_render_closure0(this)]), "refresh")]);
        return $.div.call$2(P.LinkedHashMap__makeLiteral(["style", $.$get$divStyle(), "className", "chaser-grid"]), [$.$get$PopOver().call$1(P.LinkedHashMap__makeLiteral(["actions", J.$index$asx(this.props, "actions")])), $content]);
      }
    },
    _ChaserGrid_render_closure: {
      "^": "Closure:5;_chaser_grid$_captured_this_0",
      call$1: [function(gitHubSearchResult) {
        var t1 = this._chaser_grid$_captured_this_0;
        return $.$get$ChaserRow().call$1(P.LinkedHashMap__makeLiteral(["pullRequest", gitHubSearchResult, "hideable", J.$index$asx(t1.props, "chaserStore").get$rowsHideable(), "actions", J.$index$asx(t1.props, "actions")]));
      }, null, null, 2, 0, null, 59, "call"]
    },
    _ChaserGrid_render_closure0: {
      "^": "Closure:1;_chaser_grid$_captured_this_1",
      call$1: [function(_) {
        return J.$index$asx(this._chaser_grid$_captured_this_1.props, "actions").get$locationActions().refreshView$0();
      }, null, null, 2, 0, null, 2, "call"]
    }
  }], ["src.components.chaser_row", "package:wChaser/src/components/chaser_row.dart",, E, {
    "^": "",
    closure9: {
      "^": "Closure:0;",
      call$0: [function() {
        return new E._ChaserRow(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _ChaserRow: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      openNewTab$1: [function(_) {
        C.Window_methods.open$2(window, J.$index$asx(this.props, "pullRequest").get$htmlUrl(), J.toString$0$(J.get$id$x(J.$index$asx(this.props, "pullRequest"))));
      }, "call$1", "get$openNewTab", 2, 0, 1, 2],
      removeThisGuy$1: [function(_) {
      }, "call$1", "get$removeThisGuy", 2, 0, 1, 2],
      render$0: function(_) {
        var t1, t2, t3, t4, t5, t6, labels, t7;
        if (J.$index$asx(this.props, "hideable") === true)
          $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "pull-right chaser-close-button", "onClick", this.get$removeThisGuy()]), $.i.call$1(P.LinkedHashMap__makeLiteral(["className", "close-x icon icon-sm icon-close close-x"])));
        if (J.$gt$n(J.$index$asx(this.props, "pullRequest").get$comments(), 0) === true)
          $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "pull-right comment-icon"]), [H.S(J.toString$0$(J.$index$asx(this.props, "pullRequest").get$comments())) + " ", $.i.call$1(P.LinkedHashMap__makeLiteral(["className", "glyphicon glyphicon-comment icon icon-sm"]))]);
        t1 = $.div;
        t2 = P.LinkedHashMap__makeLiteral(["className", "chaser-row"]);
        t3 = $.span.call$2(P.LinkedHashMap__makeLiteral(["className", "pull-left", "onClick", this.get$openNewTab()]), $.img.call$1(P.LinkedHashMap__makeLiteral(["className", "media-object avatar-image", "src", J.get$avatarUrl$x(J.$index$asx(this.props, "pullRequest").get$githubUser()), "alt", "avatar_url"])));
        t4 = $.$get$PullRequestStatus().call$1(P.LinkedHashMap__makeLiteral(["gitHubPullRequest", J.$index$asx(this.props, "pullRequest").get$githubPullRequest(), "actions", J.$index$asx(this.props, "actions")]));
        t5 = $.div;
        t6 = P.LinkedHashMap__makeLiteral(["className", "media"]);
        labels = [];
        if (J.$index$asx(this.props, "pullRequest").get$actionNeeded() === true)
          labels.push($.$get$Label().call$1(P.LinkedHashMap__makeLiteral(["text", "Action Needed"])));
        t7 = J.$index$asx(this.props, "pullRequest").get$githubPullRequest();
        if (J.$eq$(t7 == null ? t7 : t7.get$mergeable(), false))
          labels.push($.$get$Label().call$1(P.LinkedHashMap__makeLiteral(["text", "Merge Conflicts"])));
        if (labels.length === 0)
          labels.push($.small.call$2(P.LinkedHashMap__makeLiteral(["className", "small-text"]), J.$index$asx(this.props, "pullRequest").get$updatedAtPretty()));
        return t1.call$2(t2, [t3, t4, t5.call$2(t6, $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "media-body pull-left", "style", $.$get$mediaWidth(), "onClick", this.get$openNewTab()]), [$.small.call$2(P.LinkedHashMap__makeLiteral(["className", "small-text create-date"]), $.em.call$2(P.LinkedHashMap__makeEmpty(), J.replaceAll$2$s(J.$index$asx(this.props, "pullRequest").get$htmlUrl(), "https://github.com/", ""))), $.h6.call$2(P.LinkedHashMap__makeLiteral(["className", "media-heading"]), J.get$title$x(J.$index$asx(this.props, "pullRequest"))), labels]))]);
      }
    }
  }], ["src.components.footer", "package:wChaser/src/components/footer.dart",, G, {
    "^": "",
    closure6: {
      "^": "Closure:0;",
      call$0: [function() {
        return new G._Footer(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Footer: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      showActionNeeded$1: [function(_) {
        J.$index$asx(this.props, "actions").get$atMentionActions().displayAll$1(J.$index$asx(this.props, "chaserStore").get$showAll() !== true);
      }, function() {
        return this.showActionNeeded$1(null);
      }, "showActionNeeded$0", "call$1", "call$0", "get$showActionNeeded", 0, 2, 8, 0, 2],
      renderLeftColumn$0: function() {
        if (J.$index$asx(this.props, "chaserStore").get$showAll() == null)
          return $.span.call$1(P.LinkedHashMap__makeEmpty());
        var buttonText = J.$index$asx(this.props, "chaserStore").get$showAll() === true ? "Show Few" : "Show All";
        return $.a.call$2(P.LinkedHashMap__makeLiteral(["href", "#", "onClick", this.get$showActionNeeded()]), buttonText);
      },
      render$0: function(_) {
        var rightColumn = $.em.call$2(P.LinkedHashMap__makeEmpty(), O.getPrettyDates(J.$index$asx(this.props, "chaserStore").get$updated()));
        return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "footer"]), [$.div.call$2(P.LinkedHashMap__makeLiteral(["className", "small-text text-left col-xs-4"]), this.renderLeftColumn$0()), $.div.call$1(P.LinkedHashMap__makeLiteral(["className", "small-text text-right col-xs-3"])), $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "small-text text-right col-xs-5"]), rightColumn), $.div.call$1(P.LinkedHashMap__makeLiteral(["className", "clear"]))]);
      }
    }
  }], ["src.components.header", "package:wChaser/src/components/header.dart",, R, {
    "^": "",
    closure5: {
      "^": "Closure:0;",
      call$0: [function() {
        return new R._Header(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Header: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      get$loading: function() {
        return J.$index$asx(this.props, "loading");
      },
      getInitialState$0: function() {
        return P.LinkedHashMap__makeLiteral(["userLogin", "Big Fella"]);
      },
      getDefaultProps$0: function() {
        return P.LinkedHashMap__makeLiteral(["loading", false]);
      },
      refreshView$1: [function(e) {
        J.$index$asx(this.props, "actions").get$locationActions().refreshView$0();
      }, function() {
        return this.refreshView$1(null);
      }, "refreshView$0", "call$1", "call$0", "get$refreshView", 0, 2, 8, 0, 1],
      render$0: function(_) {
        var refresh = J.$index$asx(this.props, "loading") === true ? null : $.button.call$2(P.LinkedHashMap__makeLiteral(["onClick", this.get$refreshView(), "className", "btn btn-default btn-xs refresh-btn pull-right", "type", "submit"]), $.img.call$1(P.LinkedHashMap__makeLiteral(["className", "text-center pointer", "src", "/packages/wChaser/images/refresh.png"])));
        return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "header"]), [$.div.call$1(P.LinkedHashMap__makeLiteral(["className", "col-xs-4"])), $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "col-xs-4 text-center"]), $.img.call$1(P.LinkedHashMap__makeLiteral(["className", "text-center github-title pointer", "src", "/packages/wChaser/images/chaser.png"]))), $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "col-xs-4 text-center"]), refresh)]);
      }
    }
  }], ["src.components.loading", "package:wChaser/src/components/loading.dart",, L, {
    "^": "",
    closure12: {
      "^": "Closure:0;",
      call$0: [function() {
        return new L._Loading(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Loading: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      render$0: function(_) {
        return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "text-center", "style", P.LinkedHashMap__makeLiteral(["margin", "154px"])]), [$.img.call$1(P.LinkedHashMap__makeLiteral(["className", "text-center github-title pointer", "src", "/packages/wChaser/images/octocat-spinner-32.gif"]))]);
      }
    }
  }], ["src.components.login", "package:wChaser/src/components/login.dart",, N, {
    "^": "",
    closure4: {
      "^": "Closure:0;",
      call$0: [function() {
        return new N._Login(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _Login: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      getInitialState$0: function() {
        return P.LinkedHashMap__makeLiteral(["attempts", 0]);
      },
      submitToken$1: [function(e) {
        var inputRef, input;
        inputRef = this.ref$1(0, "ghInput");
        input = $.findDOMNode.call$1(inputRef);
        J.$index$asx(this.props, "actions").get$authActions().auth$1(J.get$value$x(input));
        this.setState$1(0, P.LinkedHashMap__makeLiteral(["attempts", J.$add$ns(this.state.$index(0, "attempts"), 1)]));
      }, "call$1", "get$submitToken", 2, 0, 43, 1],
      render$0: function(_) {
        var t1, t2, t3, t4;
        t1 = $.div;
        t2 = P.LinkedHashMap__makeLiteral(["style", P.LinkedHashMap__makeLiteral(["padding", "15px"])]);
        t3 = $.h6.call$2(P.LinkedHashMap__makeEmpty(), "GitHub Access Token: ");
        t4 = $.input;
        return t1.call$2(t2, [t3, t4.call$1(P.LinkedHashMap__makeLiteral(["className", "form-control", "ref", "ghInput", "style", J.$gt$n(this.state.$index(0, "attempts"), 0) === true ? P.LinkedHashMap__makeLiteral(["border", "1px solid red"]) : P.LinkedHashMap__makeEmpty()])), $.br.call$1(P.LinkedHashMap__makeEmpty()), $.button.call$2(P.LinkedHashMap__makeLiteral(["onClick", this.get$submitToken(), "className", "btn btn-default pull-right", "type", "submit"]), "Submit")]);
      }
    }
  }], ["src.components.popover", "package:wChaser/src/components/pop_over.dart",, Z, {
    "^": "",
    closure8: {
      "^": "Closure:0;",
      call$0: [function() {
        return new Z._PopOver(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _PopOver: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      getInitialState$0: function() {
        return P.LinkedHashMap__makeLiteral(["active", false, "popOverProps", null, "pageX", null, "pageY", null, "id", null, "content", null]);
      },
      componentDidMount$0: function() {
        J.$index$asx(this.props, "actions").get$popoverActions().get$closePopover().listen$1(this.get$close(this));
        J.$index$asx(this.props, "actions").get$popoverActions().get$showPopover().listen$1(new Z._PopOver_componentDidMount_closure(this));
      },
      close$1: [function(_, _0) {
        this.setState$1(0, P.LinkedHashMap__makeLiteral(["active", false]));
      }, "call$1", "get$close", 2, 0, 1, 2],
      render$0: function(_) {
        var $location = P.LinkedHashMap__makeLiteral(["top", this.state.$index(0, "pageY"), "left", this.state.$index(0, "pageX")]);
        if (this.state.$index(0, "active") !== true)
          return $.span.call$1(P.LinkedHashMap__makeEmpty());
        return $.div.call$2(P.LinkedHashMap__makeLiteral(["style", $location, "className", "chaser-popover"]), this.state.$index(0, "content"));
      }
    },
    _PopOver_componentDidMount_closure: {
      "^": "Closure:44;_popover$_captured_this_0",
      call$1: [function(popOverProps) {
        var t1, t2;
        t1 = this._popover$_captured_this_0;
        t2 = J.getInterceptor$x(popOverProps);
        if (J.$eq$(t1.state.$index(0, "id"), t2.get$id(popOverProps)) && t1.state.$index(0, "active") === true)
          return;
        t1.setState$1(0, P.LinkedHashMap__makeLiteral(["active", true, "pageX", J.$add$ns(t2.get$pageX(popOverProps), 10), "pageY", J.$sub$n(t2.get$pageY(popOverProps), 5), "id", t2.get$id(popOverProps), "content", t2.get$content(popOverProps)]));
      }, null, null, 2, 0, null, 60, "call"]
    }
  }], ["src.components.pull_request_status", "package:wChaser/src/components/pull_request_status.dart",, T, {
    "^": "",
    closure11: {
      "^": "Closure:0;",
      call$0: [function() {
        return new T._PullRequestStatus(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), null, null, null);
      }, null, null, 0, 0, null, "call"]
    },
    _PullRequestStatus: {
      "^": "Component;props,ref,getDOMNode,_jsRedraw,_jsThis,state,_prevState,_nextState,nextProps",
      onMouseOver$3: function(_, mouseEvent, context, description) {
        var $content, t1;
        $content = $.div.call$2(P.LinkedHashMap__makeEmpty(), [$.small.call$2(P.LinkedHashMap__makeLiteral(["className", "text-small"]), context), $.br.call$1(P.LinkedHashMap__makeEmpty()), $.em.call$2(P.LinkedHashMap__makeEmpty(), $.small.call$2(P.LinkedHashMap__makeLiteral(["className", "text-small"]), description))]);
        t1 = J.getInterceptor$x(mouseEvent);
        J.$index$asx(this.props, "actions").get$popoverActions().showPopover$1(new A.PopoverProps(t1.get$pageX(mouseEvent), t1.get$pageY(mouseEvent), context, $content));
      },
      render$0: function(_) {
        var t1, statuses;
        if (J.$index$asx(this.props, "gitHubPullRequest") == null) {
          t1 = J.$index$asx(this.props, "gitHubPullRequest");
          t1 = (t1 == null ? t1 : t1.get$githubStatus()) != null;
        } else
          t1 = true;
        if (t1) {
          statuses = [];
          t1 = J.$index$asx(this.props, "gitHubPullRequest");
          t1 = t1 == null ? t1 : t1.get$githubStatus();
          J.forEach$1$ax(t1, new T._PullRequestStatus_render_closure(this, statuses));
          return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "status-container show-slide pull-left"]), statuses);
        } else
          return $.div.call$2(P.LinkedHashMap__makeLiteral(["className", "status-container hide-slide pull-left"]), [$.div.call$1(P.LinkedHashMap__makeLiteral(["className", "circle passed blink-fast"])), $.div.call$1(P.LinkedHashMap__makeLiteral(["className", "circle loading blink"])), $.div.call$1(P.LinkedHashMap__makeLiteral(["className", "circle failed blink-slow"]))]);
      }
    },
    _PullRequestStatus_render_closure: {
      "^": "Closure:45;_pull_request_status$_captured_this_0,_captured_statuses_1",
      call$2: [function(key, ghs) {
        var t1, t2, t3, t4;
        t1 = J.getInterceptor$x(ghs);
        if (J.$eq$(t1.get$state(ghs), "success")) {
          t1 = this._pull_request_status$_captured_this_0;
          this._captured_statuses_1.push($.div.call$1(P.LinkedHashMap__makeLiteral(["onMouseOver", new T._PullRequestStatus_render__closure(t1, ghs), "onMouseOut", J.$index$asx(t1.props, "actions").get$popoverActions().get$closePopover(), "className", "circle passed", "onClick", new T._PullRequestStatus_render__closure0(t1, ghs)])));
        } else {
          t1 = J.$eq$(t1.get$state(ghs), "failure");
          t2 = $.div;
          t3 = this._captured_statuses_1;
          t4 = this._pull_request_status$_captured_this_0;
          if (t1)
            t3.push(t2.call$1(P.LinkedHashMap__makeLiteral(["onMouseOver", new T._PullRequestStatus_render__closure1(t4, ghs), "onMouseOut", J.$index$asx(t4.props, "actions").get$popoverActions().get$closePopover(), "className", "circle failed", "onClick", new T._PullRequestStatus_render__closure2(t4, ghs)])));
          else
            t3.push(t2.call$1(P.LinkedHashMap__makeLiteral(["onMouseOver", new T._PullRequestStatus_render__closure3(t4, ghs), "onMouseOut", J.$index$asx(t4.props, "actions").get$popoverActions().get$closePopover(), "className", "circle loading", "onClick", new T._PullRequestStatus_render__closure4(t4, ghs)])));
        }
      }, null, null, 4, 0, null, 7, 61, "call"]
    },
    _PullRequestStatus_render__closure: {
      "^": "Closure:12;_pull_request_status$_captured_this_2,_captured_ghs_3",
      call$1: [function(me) {
        var t1, t2;
        t1 = this._captured_ghs_3;
        t2 = J.getInterceptor$x(t1);
        this._pull_request_status$_captured_this_2.onMouseOver$3(0, me, t2.get$context(t1), t2.get$description(t1));
      }, null, null, 2, 0, null, 16, "call"]
    },
    _PullRequestStatus_render__closure0: {
      "^": "Closure:1;_captured_this_4,_captured_ghs_5",
      call$1: [function(e) {
        C.Window_methods.open$2(window, this._captured_ghs_5.get$targetUrl(), J.toString$0$(J.get$id$x(J.$index$asx(this._captured_this_4.props, "gitHubPullRequest"))));
      }, null, null, 2, 0, null, 1, "call"]
    },
    _PullRequestStatus_render__closure1: {
      "^": "Closure:12;_captured_this_6,_captured_ghs_7",
      call$1: [function(me) {
        var t1, t2;
        t1 = this._captured_ghs_7;
        t2 = J.getInterceptor$x(t1);
        this._captured_this_6.onMouseOver$3(0, me, t2.get$context(t1), t2.get$description(t1));
      }, null, null, 2, 0, null, 16, "call"]
    },
    _PullRequestStatus_render__closure2: {
      "^": "Closure:1;_captured_this_8,_captured_ghs_9",
      call$1: [function(e) {
        C.Window_methods.open$2(window, this._captured_ghs_9.get$targetUrl(), J.toString$0$(J.get$id$x(J.$index$asx(this._captured_this_8.props, "gitHubPullRequest"))));
      }, null, null, 2, 0, null, 1, "call"]
    },
    _PullRequestStatus_render__closure3: {
      "^": "Closure:12;_captured_this_10,_captured_ghs_11",
      call$1: [function(me) {
        var t1, t2;
        t1 = this._captured_ghs_11;
        t2 = J.getInterceptor$x(t1);
        this._captured_this_10.onMouseOver$3(0, me, t2.get$context(t1), t2.get$description(t1));
      }, null, null, 2, 0, null, 16, "call"]
    },
    _PullRequestStatus_render__closure4: {
      "^": "Closure:1;_captured_this_12,_captured_ghs_13",
      call$1: [function(e) {
        C.Window_methods.open$2(window, this._captured_ghs_13.get$targetUrl(), J.toString$0$(J.get$id$x(J.$index$asx(this._captured_this_12.props, "gitHubPullRequest"))));
      }, null, null, 2, 0, null, 1, "call"]
    }
  }], ["wChaser.src.actions", "package:wChaser/src/actions/actions.dart",, A, {
    "^": "",
    AtMentionActions: {
      "^": "Object;displayAll",
      displayAll$1: function(arg0) {
        return this.displayAll.call$1(arg0);
      }
    },
    AuthActions: {
      "^": "Object;auth,authSuccessful",
      auth$1: function(arg0) {
        return this.auth.call$1(arg0);
      }
    },
    LocationActions: {
      "^": "Object;refreshView,changeViewPrevious,changeViewNext",
      refreshView$0: function() {
        return this.refreshView.call$0();
      },
      changeViewPrevious$0: function() {
        return this.changeViewPrevious.call$0();
      },
      changeViewNext$0: function() {
        return this.changeViewNext.call$0();
      }
    },
    PopoverProps: {
      "^": "Object;pageX>,pageY>,id>,content>"
    },
    PopoverActions: {
      "^": "Object;showPopover<,closePopover<",
      showPopover$1: function(arg0) {
        return this.showPopover.call$1(arg0);
      }
    },
    ChaserActions: {
      "^": "Object;atMentionActions<,authActions<,locationActions<,popoverActions<"
    }
  }], ["wChaser.src.constants", "package:wChaser/src/constants.dart",, R, {
    "^": "",
    ChaserViews: {
      "^": "Object;index",
      toString$0: function(_) {
        return C.Map_O9gmF.$index(0, this.index);
      }
    }
  }], ["wChaser.src.models.models", "package:wChaser/src/models/models.dart",, N, {
    "^": "",
    GitHubCommit: {
      "^": "Object;body>,user<,updatedAt",
      toMap$0: function() {
        var t1, t2, t3;
        t1 = this.body;
        t2 = this.updatedAt;
        t3 = this.user;
        return P.LinkedHashMap__makeLiteral(["body", t1, "updated_at", t2, "user", P.LinkedHashMap__makeLiteral(["login", t3.login, "avatar_url", t3.avatarUrl])]);
      }
    },
    GitHubComment: {
      "^": "Object;body>,user<,updatedAt",
      toMap$0: function() {
        var t1, t2, t3;
        t1 = this.body;
        t2 = this.updatedAt;
        t3 = this.user;
        return P.LinkedHashMap__makeLiteral(["body", t1, "updated_at", t2, "user", P.LinkedHashMap__makeLiteral(["login", t3.login, "avatar_url", t3.avatarUrl])]);
      }
    },
    GitHubLabel: {
      "^": "Object;name,color",
      toMap$0: function() {
        return P.LinkedHashMap__makeLiteral(["name", this.name, "color", this.color]);
      }
    },
    GitHubPullRequest: {
      "^": "Object;actionNeeded@,commentsUrl<,commitsUrl<,comments<,fullName,githubUser<,githubStatus<,htmlUrl<,id>,url,merged,mergeable<,state>,statusesUrl<,title>,updatedAt,updatedAtPretty<,repoFullName",
      toMap$0: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = this.state;
        t2 = this.commitsUrl;
        t3 = this.commentsUrl;
        t4 = this.comments;
        t5 = this.htmlUrl;
        t6 = this.id;
        t7 = this.merged;
        t8 = this.githubUser;
        return P.LinkedHashMap__makeLiteral(["state", t1, "commits_url", t2, "comments_url", t3, "comments", t4, "html_url", t5, "id", t6, "merged", t7, "user", P.LinkedHashMap__makeLiteral(["login", t8.login, "avatar_url", t8.avatarUrl]), "head", P.LinkedHashMap__makeLiteral(["repo", P.LinkedHashMap__makeLiteral(["full_name", this.fullName])]), "title", this.title, "url", this.url, "updated_at", this.updatedAt, "action_needed", this.actionNeeded, "statuses_url", this.statusesUrl]);
      },
      GitHubPullRequest$1: function(json) {
        var t1, t2;
        if (json == null)
          return;
        t1 = J.getInterceptor$asx(json);
        this.comments = t1.$index(json, "comments");
        this.state = t1.$index(json, "state");
        this.commentsUrl = t1.$index(json, "comments_url");
        this.commitsUrl = t1.$index(json, "commits_url");
        this.htmlUrl = t1.$index(json, "html_url");
        this.statusesUrl = t1.$index(json, "statuses_url");
        this.fullName = "tester";
        this.url = t1.$index(json, "url");
        if (t1.$index(json, "head") != null)
          this.fullName = J.$index$asx(J.$index$asx(t1.$index(json, "head"), "repo"), "full_name");
        this.id = t1.$index(json, "id");
        this.merged = t1.$index(json, "merged");
        this.mergeable = t1.$index(json, "mergeable") != null ? t1.$index(json, "mergeable") : null;
        this.title = t1.$index(json, "title");
        t2 = t1.$index(json, "updated_at");
        this.updatedAt = t2;
        this.updatedAtPretty = O.getPrettyDates(P.DateTime_parse(t2));
        this.githubUser = N.GitHubUser$(t1.$index(json, "user"));
        this.githubStatus = P.LinkedHashMap__makeEmpty();
        if (t1.containsKey$1(json, "action_needed") === true)
          this.actionNeeded = t1.$index(json, "action_needed");
      },
      static: {GitHubPullRequest$: function(json) {
          var t1 = new N.GitHubPullRequest(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
          t1.GitHubPullRequest$1(json);
          return t1;
        }}
    },
    GitHubSearchResult: {
      "^": "Object;commentsUrl<,comments<,fullName,githubUser<,pullRequestUrl<,githubLabels,htmlUrl<,id>,merged,state>,statusesUrl<,title>,updatedAt,repoFullName,githubPullRequest@,updatedAtPretty<,actionNeeded@",
      toMap$0: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9;
        t1 = this.comments;
        t2 = this.state;
        t3 = this.commentsUrl;
        t4 = this.htmlUrl;
        t5 = this.id;
        t6 = this.merged;
        t7 = this.githubUser;
        t7 = P.LinkedHashMap__makeLiteral(["login", t7.login, "avatar_url", t7.avatarUrl]);
        t8 = P.LinkedHashMap__makeLiteral(["repo", P.LinkedHashMap__makeLiteral(["full_name", this.fullName])]);
        t9 = this.githubPullRequest;
        t9 = t9 == null ? t9 : t9.toMap$0();
        if (t9 == null)
          t9 = P.LinkedHashMap__makeLiteral(["url", this.pullRequestUrl]);
        return P.LinkedHashMap__makeLiteral(["comments", t1, "state", t2, "comments_url", t3, "html_url", t4, "id", t5, "merged", t6, "user", t7, "head", t8, "pull_request", t9, "title", this.title, "updated_at", this.updatedAt, "action_needed", this.actionNeeded, "statuses_url", this.statusesUrl]);
      },
      GitHubSearchResult$1: function(json) {
        var t1, t2;
        if (json == null)
          return;
        t1 = J.getInterceptor$asx(json);
        this.comments = t1.$index(json, "labels") != null ? t1.$index(json, "comments") : 0;
        this.state = t1.$index(json, "state");
        this.commentsUrl = t1.$index(json, "comments_url");
        this.htmlUrl = t1.$index(json, "html_url");
        this.statusesUrl = t1.$index(json, "statuses_url");
        this.githubLabels = t1.$index(json, "labels") != null ? J.toList$0$ax(J.map$1$ax(t1.$index(json, "labels"), new N.GitHubSearchResult_closure())) : [];
        if (t1.$index(json, "head") != null)
          this.fullName = J.$index$asx(J.$index$asx(t1.$index(json, "head"), "repo"), "full_name");
        if (t1.$index(json, "pull_request") != null)
          this.pullRequestUrl = J.$index$asx(t1.$index(json, "pull_request"), "url");
        this.id = t1.$index(json, "id");
        this.merged = t1.$index(json, "merged");
        this.title = t1.$index(json, "title");
        t2 = t1.$index(json, "updated_at");
        this.updatedAt = t2;
        this.updatedAtPretty = O.getPrettyDates(P.DateTime_parse(t2));
        this.githubUser = N.GitHubUser$(t1.$index(json, "user"));
        t2 = t1.$index(json, "githubPullRequest");
        this.githubPullRequest = t2 == null ? null : t2;
        if (t1.containsKey$1(json, "action_needed") === true)
          this.actionNeeded = t1.$index(json, "action_needed");
      },
      static: {GitHubSearchResult$: function(json) {
          var t1 = new N.GitHubSearchResult(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
          t1.GitHubSearchResult$1(json);
          return t1;
        }}
    },
    GitHubSearchResult_closure: {
      "^": "Closure:1;",
      call$1: [function(labelJson) {
        var t1, t2;
        t1 = new N.GitHubLabel(null, null);
        t2 = J.getInterceptor$asx(labelJson);
        t1.name = t2.$index(labelJson, "name");
        t1.color = t2.$index(labelJson, "color");
        return t1;
      }, null, null, 2, 0, null, 63, "call"]
    },
    GitHubStatus: {
      "^": "Object;updatedAt,createdAt,targetUrl<,state>,description>,context>",
      toMap$0: function() {
        return P.LinkedHashMap__makeLiteral(["updated_at", this.updatedAt, "created_at", this.createdAt, "state", this.state, "target_url", this.targetUrl, "description", this.description, "context", this.context]);
      },
      GitHubStatus$1: function(json) {
        var t1;
        if (json == null)
          return;
        t1 = J.getInterceptor$asx(json);
        this.updatedAt = t1.$index(json, "updated_at");
        this.createdAt = t1.$index(json, "created_at");
        this.state = t1.$index(json, "state");
        this.targetUrl = t1.$index(json, "target_url");
        this.description = t1.$index(json, "description");
        this.context = t1.$index(json, "context");
      },
      static: {GitHubStatus$: function(json) {
          var t1 = new N.GitHubStatus(null, null, null, null, null, null);
          t1.GitHubStatus$1(json);
          return t1;
        }}
    },
    GitHubUser: {
      "^": "Object;login<,avatarUrl>,userJson",
      toMap$0: function() {
        return P.LinkedHashMap__makeLiteral(["login", this.login, "avatar_url", this.avatarUrl]);
      },
      GitHubUser$1: function(json) {
        var t1;
        if (json == null)
          return;
        this.userJson = this.userJson;
        t1 = J.getInterceptor$asx(json);
        this.login = t1.$index(json, "login");
        this.avatarUrl = t1.$index(json, "avatar_url");
      },
      static: {GitHubUser$: function(json) {
          var t1 = new N.GitHubUser(null, null, null);
          t1.GitHubUser$1(json);
          return t1;
        }}
    }
  }], ["wChaser.src.services.alerts_service", "package:wChaser/src/services/status_service.dart",, A, {
    "^": "",
    StatusService: {
      "^": "Object;_authStream,_alertStream,updateStreams,auth,alerts<,currentAlert,_authed",
      get$authed: function() {
        return this._authed;
      },
      set$authed: function(authed) {
        var t1;
        if (this._authed !== authed) {
          this._authed = authed;
          t1 = this._authStream;
          if (t1._state >= 4)
            H.throwExpression(t1._badEventState$0());
          t1._async$_add$1(0, authed);
          if (this._authed)
            this.throwAlert$1("");
          else
            this.throwAlert$1("User is not authed");
        }
      },
      throwAlert$1: function(alertContent) {
        var t1;
        if (this.currentAlert !== alertContent) {
          this.currentAlert = alertContent;
          t1 = this._alertStream;
          if (t1._state >= 4)
            H.throwExpression(t1._badEventState$0());
          t1._async$_add$1(0, alertContent);
        }
      },
      StatusService$0: function() {
        this._alertStream = P.StreamController_StreamController(null, null, null, null, false, P.String);
        var t1 = P.StreamController_StreamController(null, null, null, null, false, P.bool);
        this._authStream = t1;
        t1 = H.setRuntimeTypeInfo(new P._ControllerStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
        this.auth = P._AsBroadcastStream$(t1, null, null, H.getRuntimeTypeArgument(t1, "Stream", 0));
        t1 = this._alertStream;
        t1 = H.setRuntimeTypeInfo(new P._ControllerStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
        this.alerts = P._AsBroadcastStream$(t1, null, null, H.getRuntimeTypeArgument(t1, "Stream", 0));
      },
      auth$1: function(arg0) {
        return this.auth.call$1(arg0);
      },
      static: {StatusService$: function() {
          var t1 = new A.StatusService(null, null, null, null, null, null, false);
          t1.StatusService$0();
          return t1;
        }}
    }
  }], ["wChaser.src.services.github", "package:wChaser/src/services/github.dart",, D, {
    "^": "",
    GitHubService: {
      "^": "Object;_accessToken,_statusService",
      _requestAuthed$3$sendData: function(httpRequestType, url, sendData) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, headers, req, e, t1, exception, $async$exception, $async$temp1, $async$temp2, $async$temp3;
        var $async$_requestAuthed$3$sendData = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = P;
                $async$temp1 = $async$temp1;
                $async$temp2 = H;
                $async$temp2 = $async$temp2;
                $async$temp3 = $async$self;
                headers = $async$temp1.LinkedHashMap__makeLiteral(["Authorization", "token " + $async$temp2.S($async$temp3._accessToken)]);
                $async$handler = 4;
                $async$temp1 = W;
                $async$goto = 7;
                return P._asyncHelper($async$temp1.HttpRequest_request(url, httpRequestType, null, null, headers, null, null, null), $async$_requestAuthed$3$sendData, $async$completer);
              case 7:
                // returning from await.
                req = $async$result;
                $async$temp1 = $async$self;
                t1 = $async$temp1._statusService;
                $async$temp1 = t1;
                $async$temp1.set$authed(true);
                $async$temp1 = C;
                $async$temp1 = $async$temp1.JsonCodec_null_null;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = J;
                t1 = $async$temp1.decode$1($async$temp2.toString$0$($async$temp3.get$response$x(req)));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                $async$temp1 = H;
                t1 = $async$temp1.unwrapException($async$exception);
                e = t1;
                $async$temp1 = $async$self;
                t1 = $async$temp1._statusService;
                $async$temp1 = t1;
                $async$temp1.set$authed(false);
                $async$temp1 = P;
                $async$temp1.print(e);
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_requestAuthed$3$sendData, $async$completer, null);
      },
      _requestAuthed$2: function(httpRequestType, url) {
        return this._requestAuthed$3$sendData(httpRequestType, url, null);
      },
      getPullRequest$1: function(url) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1, $async$temp2;
        var $async$getPullRequest$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = N;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$goto = 3;
                return P._asyncHelper($async$temp2._requestAuthed$2("GET", url), $async$getPullRequest$1, $async$completer);
              case 3:
                // returning from await.
                $async$returnValue = $async$temp1.GitHubPullRequest$($async$result);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getPullRequest$1, $async$completer, null);
      },
      getPullRequestComments$1: function(pullRequest) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1, $async$temp2, $async$temp3, $async$temp4;
        var $async$getPullRequestComments$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = $async$self;
                $async$temp3 = $async$temp3;
                $async$temp4 = pullRequest;
                $async$goto = 3;
                return P._asyncHelper($async$temp3._requestAuthed$2("GET", $async$temp4.get$commentsUrl()), $async$getPullRequestComments$1, $async$completer);
              case 3:
                // returning from await.
                $async$temp3 = $async$result;
                $async$temp4 = D;
                $async$returnValue = $async$temp1.toList$0$ax($async$temp2.map$1$ax($async$temp3, new $async$temp4.GitHubService_getPullRequestComments_closure()));
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getPullRequestComments$1, $async$completer, null);
      },
      getPullRequestCommits$1: function(pullRequest) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1, $async$temp2, $async$temp3, $async$temp4;
        var $async$getPullRequestCommits$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = $async$self;
                $async$temp3 = $async$temp3;
                $async$temp4 = pullRequest;
                $async$goto = 3;
                return P._asyncHelper($async$temp3._requestAuthed$2("GET", $async$temp4.get$commitsUrl()), $async$getPullRequestCommits$1, $async$completer);
              case 3:
                // returning from await.
                $async$temp3 = $async$result;
                $async$temp4 = D;
                $async$returnValue = $async$temp1.toList$0$ax($async$temp2.map$1$ax($async$temp3, new $async$temp4.GitHubService_getPullRequestCommits_closure()));
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getPullRequestCommits$1, $async$completer, null);
      },
      searchForOpenPullRequests$1: function(login) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, uri, t1, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5, $async$temp6;
        var $async$searchForOpenPullRequests$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = K;
                uri = $async$temp1.Fluri$(null);
                $async$temp1 = uri;
                $async$temp1 = $async$temp1._uri;
                t1 = $async$temp1.replace$1$scheme(0, "https");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$host(0, "api.github.com");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$path(0, "search/issues");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = J;
                $async$temp3 = $async$temp3;
                $async$temp4 = $async$self;
                $async$temp4 = $async$temp4;
                $async$temp5 = t1;
                $async$temp5 = $async$temp5.toString$0(0) + "?q=is:open+is:pr+author:";
                $async$temp6 = H;
                $async$goto = 3;
                return P._asyncHelper($async$temp4._requestAuthed$2("GET", $async$temp5 + $async$temp6.S(login)), $async$searchForOpenPullRequests$1, $async$completer);
              case 3:
                // returning from await.
                $async$temp3 = $async$temp3.$index$asx($async$result, "items");
                $async$temp4 = D;
                $async$returnValue = $async$temp1.toList$0$ax($async$temp2.map$1$ax($async$temp3, new $async$temp4.GitHubService_searchForOpenPullRequests_closure()));
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$searchForOpenPullRequests$1, $async$completer, null);
      },
      searchForAtMentions$2$since: function(login, since) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, oneMonthAgo, t1, formatted, uri, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5, $async$temp6;
        var $async$searchForAtMentions$2$since = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = P;
                $async$temp1 = $async$temp1;
                $async$temp2 = Date.now();
                $async$temp3 = C;
                $async$temp3 = $async$temp3.JSNumber_methods;
                $async$temp3 = $async$temp3;
                $async$temp4 = P;
                $async$temp4 = $async$temp4.Duration$(60, 0, 0, 0, 0, 0);
                oneMonthAgo = $async$temp1.DateTime$fromMillisecondsSinceEpoch($async$temp2 - $async$temp3._tdivFast$1($async$temp4._duration, 1000), false);
                $async$temp1 = T;
                t1 = new $async$temp1.DateFormat(null, null, null);
                $async$temp1 = t1;
                $async$temp2 = T;
                $async$temp2 = $async$temp2;
                $async$temp3 = T;
                $async$temp3 = $async$temp3.intl_DateFormat_localeExists$closure();
                $async$temp4 = T;
                $async$temp1._locale = $async$temp2.Intl_verifiedLocale(null, $async$temp3, $async$temp4.intl_Intl__throwLocaleError$closure());
                $async$temp1 = t1;
                $async$temp1.addPattern$1("yyyy-MM-dd");
                $async$temp1 = t1;
                formatted = $async$temp1.format$1(0, oneMonthAgo);
                $async$temp1 = K;
                uri = $async$temp1.Fluri$(null);
                $async$temp1 = uri;
                $async$temp1 = $async$temp1._uri;
                t1 = $async$temp1.replace$1$scheme(0, "https");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$host(0, "api.github.com");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$path(0, "search/issues");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = J;
                $async$temp3 = $async$temp3;
                $async$temp4 = $async$self;
                $async$temp4 = $async$temp4;
                $async$temp5 = t1;
                $async$temp5 = $async$temp5.toString$0(0) + "?q=is:open+is:pr+created:>" + formatted + "+mentions:";
                $async$temp6 = H;
                $async$goto = 3;
                return P._asyncHelper($async$temp4._requestAuthed$2("GET", $async$temp5 + $async$temp6.S(login)), $async$searchForAtMentions$2$since, $async$completer);
              case 3:
                // returning from await.
                $async$temp3 = $async$temp3.$index$asx($async$result, "items");
                $async$temp4 = D;
                $async$returnValue = $async$temp1.toList$0$ax($async$temp2.map$1$ax($async$temp3, new $async$temp4.GitHubService_searchForAtMentions_closure()));
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$searchForAtMentions$2$since, $async$completer, null);
      },
      searchForAtMentions$1: function(login) {
        return this.searchForAtMentions$2$since(login, null);
      },
      setAndCheckToken$1: function(accessToken) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, uri, t1, $async$temp1, $async$temp2, $async$temp3;
        var $async$setAndCheckToken$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1._accessToken = accessToken;
                $async$temp1 = K;
                uri = $async$temp1.Fluri$(null);
                $async$temp1 = uri;
                $async$temp1 = $async$temp1._uri;
                t1 = $async$temp1.replace$1$scheme(0, "https");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$host(0, "api.github.com");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = t1;
                t1 = $async$temp1.replace$1$path(0, "user");
                $async$temp1 = uri;
                $async$temp1._uri = t1;
                $async$temp1 = N;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2;
                $async$temp3 = t1;
                $async$goto = 3;
                return P._asyncHelper($async$temp2._requestAuthed$2("GET", $async$temp3.toString$0(0)), $async$setAndCheckToken$1, $async$completer);
              case 3:
                // returning from await.
                $async$returnValue = $async$temp1.GitHubUser$($async$result);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$setAndCheckToken$1, $async$completer, null);
      },
      getPullRequestStatus$1: function(githubPullReqeust) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, $async$temp1, $async$temp2, $async$temp3, $async$temp4;
        var $async$getPullRequestStatus$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = $async$self;
                $async$temp3 = $async$temp3;
                $async$temp4 = githubPullReqeust;
                $async$goto = 3;
                return P._asyncHelper($async$temp3._requestAuthed$2("GET", $async$temp4.get$statusesUrl()), $async$getPullRequestStatus$1, $async$completer);
              case 3:
                // returning from await.
                $async$temp3 = $async$result;
                $async$temp4 = D;
                $async$returnValue = $async$temp1.toList$0$ax($async$temp2.map$1$ax($async$temp3, new $async$temp4.GitHubService_getPullRequestStatus_closure()));
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getPullRequestStatus$1, $async$completer, null);
      }
    },
    GitHubService_getPullRequestComments_closure: {
      "^": "Closure:1;",
      call$1: [function(commentJson) {
        var t1, t2;
        t1 = new N.GitHubComment(null, null, null);
        t2 = J.getInterceptor$asx(commentJson);
        t1.body = t2.$index(commentJson, "body");
        t1.user = N.GitHubUser$(t2.$index(commentJson, "user"));
        t1.updatedAt = t2.$index(commentJson, "updated_at");
        return t1;
      }, null, null, 2, 0, null, 64, "call"]
    },
    GitHubService_getPullRequestCommits_closure: {
      "^": "Closure:1;",
      call$1: [function(commitJson) {
        var t1, t2;
        t1 = new N.GitHubCommit(null, null, null);
        t2 = J.getInterceptor$asx(commitJson);
        t1.body = t2.$index(commitJson, "body");
        t1.user = N.GitHubUser$(t2.$index(commitJson, "user"));
        t1.updatedAt = t2.$index(commitJson, "updated_at");
        return t1;
      }, null, null, 2, 0, null, 65, "call"]
    },
    GitHubService_searchForOpenPullRequests_closure: {
      "^": "Closure:6;",
      call$1: [function(openPrJson) {
        return N.GitHubSearchResult$(openPrJson);
      }, null, null, 2, 0, null, 11, "call"]
    },
    GitHubService_searchForAtMentions_closure: {
      "^": "Closure:6;",
      call$1: [function(openPrJson) {
        return N.GitHubSearchResult$(openPrJson);
      }, null, null, 2, 0, null, 11, "call"]
    },
    GitHubService_getPullRequestStatus_closure: {
      "^": "Closure:6;",
      call$1: [function(openPrJson) {
        return N.GitHubStatus$(openPrJson);
      }, null, null, 2, 0, null, 11, "call"]
    }
  }], ["wChaser.src.services.local_storage", "package:wChaser/src/services/local_storage.dart",, L, {
    "^": "",
    LocationStorageService: {
      "^": "Object;localStorageStore,_atMentionPullRequests,atMentionsUpdated,_totalPrsChased",
      load$0: function(_) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, $async$temp1, $async$temp2;
        var $async$load$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp2 = X;
                $async$goto = 2;
                return P._asyncHelper($async$temp2.LocalStorageStore_open(), $async$load$0, $async$completer);
              case 2:
                // returning from await.
                $async$temp1.localStorageStore = $async$result;
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$load$0, $async$completer, null);
      },
      get$totalPrsChased: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, t1, cachedTotalPrsChased, $async$temp1;
        var $async$get$totalPrsChased = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                t1 = $async$temp1._totalPrsChased;
                if (t1 != null) {
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  ;
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.localStorageStore;
                $async$goto = 3;
                return P._asyncHelper($async$temp1.getByKey$1("totalPrsChased"), $async$get$totalPrsChased, $async$completer);
              case 3:
                // returning from await.
                cachedTotalPrsChased = $async$result;
                $async$goto = cachedTotalPrsChased != null ? 4 : 6;
                break;
              case 4:
                // then
                $async$temp1 = H;
                $async$result = $async$temp1.Primitives_parseInt(cachedTotalPrsChased, null, null);
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$result = 0;
              case 5:
                // join
                t1 = $async$result;
                $async$temp1 = $async$self;
                $async$temp1._totalPrsChased = t1;
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$get$totalPrsChased, $async$completer, null);
      },
      addPrsChased$1: function(prsToAdd) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, prsCount, $async$temp1, $async$temp2, $async$temp3;
        var $async$addPrsChased$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$goto = 2;
                return P._asyncHelper($async$temp2.get$totalPrsChased(), $async$addPrsChased$1, $async$completer);
              case 2:
                // returning from await.
                prsCount = $async$temp1.$add$ns($async$result, prsToAdd);
                $async$temp1 = $async$self;
                $async$temp1._totalPrsChased = prsCount;
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2.localStorageStore;
                $async$temp3 = J;
                $async$temp1.save$2$x($async$temp2, $async$temp3.toString$0$(prsCount), "totalPrsChased");
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$addPrsChased$1, $async$completer, null);
      },
      set$atMentionPullRequests: function(atMenionPullRequests) {
        var atMentionJson;
        this.atMentionsUpdated = new P.DateTime(Date.now(), false);
        atMentionJson = J.toList$0$ax(atMenionPullRequests == null ? atMenionPullRequests : J.map$1$ax(atMenionPullRequests, new L.LocationStorageService_atMentionPullRequests_closure()));
        J.save$2$x(this.localStorageStore, C.JsonCodec_null_null.encode$1(atMentionJson), "chaserAtMentionStorage");
        J.save$2$x(this.localStorageStore, this.atMentionsUpdated.toIso8601String$0(), "atMentionUpdated");
      },
      get$atMentionPullRequests: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, atMentionJson, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5;
        var $async$get$atMentionPullRequests = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$goto = $async$temp1.get$isNotEmpty$asx($async$temp2._atMentionPullRequests) === true ? 3 : 4;
                break;
              case 3:
                // then
                $async$temp1 = $async$self;
                $async$returnValue = $async$temp1._atMentionPullRequests;
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.localStorageStore;
                $async$goto = 5;
                return P._asyncHelper($async$temp1.getByKey$1("chaserAtMentionStorage"), $async$get$atMentionPullRequests, $async$completer);
              case 5:
                // returning from await.
                atMentionJson = $async$result;
                $async$temp1 = atMentionJson != null;
                if ($async$temp1) {
                  // goto then
                  $async$goto = 8;
                  break;
                } else
                  $async$result = $async$temp1;
                // goto join
                $async$goto = 9;
                break;
              case 8:
                // then
                $async$temp1 = J;
                $async$result = $async$temp1.get$isNotEmpty$asx(atMentionJson) === true;
              case 9:
                // join
                $async$goto = $async$result ? 6 : 7;
                break;
              case 6:
                // then
                $async$temp1 = $async$self;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = J;
                $async$temp3 = $async$temp3;
                $async$temp4 = C;
                $async$temp4 = $async$temp4.JsonCodec_null_null;
                $async$temp4 = $async$temp4.decode$1(atMentionJson);
                $async$temp5 = L;
                $async$temp1._atMentionPullRequests = $async$temp2.toList$0$ax($async$temp3.map$1$ax($async$temp4, new $async$temp5.LocationStorageService_atMentionPullRequests_closure0()));
              case 7:
                // join
                $async$temp1 = $async$self;
                $async$returnValue = $async$temp1._atMentionPullRequests;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$get$atMentionPullRequests, $async$completer, null);
      }
    },
    LocationStorageService_atMentionPullRequests_closure: {
      "^": "Closure:5;",
      call$1: [function(ghpr) {
        return ghpr.toMap$0();
      }, null, null, 2, 0, null, 67, "call"]
    },
    LocationStorageService_atMentionPullRequests_closure0: {
      "^": "Closure:6;",
      call$1: [function(aMPR) {
        return N.GitHubSearchResult$(aMPR);
      }, null, null, 2, 0, null, 68, "call"]
    }
  }], ["wChaser.src.stores.chaser_store", "package:wChaser/src/stores/chaser_store.dart",, Q, {
    "^": "",
    ChaserStore: {
      "^": "Store;displayPullRequests<,updated<,showAll<,rowsHideable<,loading<",
      getPullRequestsStatus$1: function(searchResults) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, t2, gsr, $async$temp1, $async$temp2, $async$temp3;
        var $async$getPullRequestsStatus$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = t1 = $async$temp1.get$iterator$ax(searchResults);
                $async$temp2 = $async$self;
                $async$temp1, t2 = $async$temp2.gitHubService;
              case 2:
                // for condition
                $async$temp1 = t1;
                if (!($async$temp1.moveNext$0() === true)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$temp1 = t1;
                gsr = $async$temp1.get$current();
                $async$temp1 = gsr;
                $async$temp1 = $async$temp1;
                $async$temp2 = t2;
                $async$temp2 = $async$temp2;
                $async$temp3 = gsr;
                $async$goto = 4;
                return P._asyncHelper($async$temp2.getPullRequest$1($async$temp3.get$pullRequestUrl()), $async$getPullRequestsStatus$1, $async$completer);
              case 4:
                // returning from await.
                $async$temp1.set$githubPullRequest($async$result);
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = t2;
                $async$temp2 = $async$temp2;
                $async$temp3 = gsr;
                $async$goto = 5;
                return P._asyncHelper($async$temp2.getPullRequestStatus$1($async$temp3.get$githubPullRequest()), $async$getPullRequestsStatus$1, $async$completer);
              case 5:
                // returning from await.
                $async$temp2 = $async$result;
                $async$temp3 = Q;
                $async$temp1.forEach$1$ax($async$temp2, new $async$temp3.ChaserStore_getPullRequestsStatus_closure(gsr));
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 6 : 7;
                break;
              case 6:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 7:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$getPullRequestsStatus$1, $async$completer, null);
      },
      load$1$force: function(_, force) {
      },
      load$0: function($receiver) {
        return this.load$1$force($receiver, false);
      },
      ChaserStore$3: function(statusService, localStorageService, gitHubService) {
        this._chaser_store$_statusService = statusService;
        statusService.auth.listen$1(new Q.ChaserStore_closure(this));
      }
    },
    ChaserStore_closure: {
      "^": "Closure:1;_chaser_store$_captured_this_0",
      call$1: [function(_) {
        this._chaser_store$_captured_this_0.load$0(0);
      }, null, null, 2, 0, null, 2, "call"]
    },
    ChaserStore_getPullRequestsStatus_closure: {
      "^": "Closure:48;_captured_gsr_0",
      call$1: [function(ghStatus) {
        J.putIfAbsent$2$x(this._captured_gsr_0.get$githubPullRequest().get$githubStatus(), J.get$context$x(ghStatus), new Q.ChaserStore_getPullRequestsStatus__closure(ghStatus));
      }, null, null, 2, 0, null, 69, "call"]
    },
    ChaserStore_getPullRequestsStatus__closure: {
      "^": "Closure:0;_captured_ghStatus_1",
      call$0: [function() {
        return this._captured_ghStatus_1;
      }, null, null, 0, 0, null, "call"]
    }
  }], ["wChaser.src.stores.chaser_stores", "package:wChaser/src/stores/chaser_stores.dart",, L, {
    "^": "",
    AtMentionStore: {
      "^": "ChaserStore;alertsController,_userStore,_chaserActions,_locationStore,atMentionPullRequests<,displayPullRequests:AtMentionStore_displayPullRequests<,updated:AtMentionStore_updated<,showAll:AtMentionStore_showAll<,rowsHideable:AtMentionStore_rowsHideable<,loading:AtMentionStore_loading<,displayPullRequests,localStorageService,updated,gitHubService,showAll,rowsHideable,loading,_chaser_store$_statusService,_streamController,_stream",
      _displayAll$1: [function(displayAll) {
        var t1;
        this.AtMentionStore_showAll = displayAll;
        if (J.$eq$(displayAll, false)) {
          t1 = this.AtMentionStore_displayPullRequests;
          this.AtMentionStore_displayPullRequests = J.toList$0$ax(t1 == null ? t1 : J.where$1$ax(t1, new L.AtMentionStore__displayAll_closure()));
        } else
          this.AtMentionStore_displayPullRequests = this.atMentionPullRequests;
        t1 = this._streamController;
        if (t1._state >= 4)
          H.throwExpression(t1._badEventState$0());
        t1._async$_add$1(0, this);
      }, "call$1", "get$_displayAll", 2, 0, 16],
      _getPullRequestComments$0: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, t2, t3, pullRequest, $async$temp1, $async$temp2, $async$temp3, $async$temp4;
        var $async$_getPullRequestComments$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp1 = t1 = $async$temp1.get$iterator$ax($async$temp2.atMentionPullRequests);
                $async$temp2 = $async$self;
                $async$temp2 = t2 = $async$temp2.gitHubService;
                $async$temp3 = $async$self;
                $async$temp1, $async$temp2, t3 = $async$temp3._userStore;
              case 2:
                // for condition
                $async$temp1 = t1;
                if (!($async$temp1.moveNext$0() === true)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$temp1 = t1;
                pullRequest = $async$temp1.get$current();
                $async$temp1 = pullRequest;
                $async$temp1 = $async$temp1;
                $async$temp2 = D;
                $async$temp2 = $async$temp2;
                $async$temp3 = t2;
                $async$goto = 4;
                return P._asyncHelper($async$temp3.getPullRequestComments$1(pullRequest), $async$_getPullRequestComments$0, $async$completer);
              case 4:
                // returning from await.
                $async$temp3 = $async$result;
                $async$temp4 = t3;
                $async$temp4 = $async$temp4.githubUser;
                $async$temp1.set$actionNeeded($async$temp2.isPlusOneNeeded($async$temp3, $async$temp4.get$login()));
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_getPullRequestComments$0, $async$completer, null);
      },
      _getChaserAssetsFromGithub$0: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, $async$temp1, $async$temp2, $async$temp3;
        var $async$_getChaserAssetsFromGithub$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1.atMentionPullRequests = [];
                $async$temp1 = $async$self;
                $async$temp1.AtMentionStore_displayPullRequests = [];
                $async$temp1 = $async$self;
                $async$temp2 = P;
                $async$temp1.AtMentionStore_updated = new $async$temp2.DateTime(Date.now(), false);
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.gitHubService;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2._userStore;
                $async$temp2 = $async$temp2.githubUser;
                $async$goto = 2;
                return P._asyncHelper($async$temp1.searchForAtMentions$1($async$temp2.get$login()), $async$_getChaserAssetsFromGithub$0, $async$completer);
              case 2:
                // returning from await.
                t1 = $async$result;
                $async$temp1 = $async$self;
                $async$temp1.atMentionPullRequests = t1;
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.localStorageService;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp1.addPrsChased$1($async$temp2.get$length$asx(t1));
                $async$temp1 = $async$self;
                $async$goto = 3;
                return P._asyncHelper($async$temp1._getPullRequestComments$0(), $async$_getChaserAssetsFromGithub$0, $async$completer);
              case 3:
                // returning from await.
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2.atMentionPullRequests;
                $async$temp3 = L;
                $async$temp1.sort$1$ax($async$temp2, new $async$temp3.AtMentionStore__getChaserAssetsFromGithub_closure());
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_getChaserAssetsFromGithub$0, $async$completer, null);
      },
      load$1$force: function(_, force) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, t1, t2, t3, t4, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5;
        var $async$load$1$force = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1._locationStore;
                $async$temp1 = $async$temp1.currentView;
                $async$temp2 = C;
                if ($async$temp1 !== $async$temp2.ChaserViews_0) {
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  ;
                $async$temp1 = $async$self;
                $async$temp1.AtMentionStore_loading = true;
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 3 : 4;
                break;
              case 3:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 4:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                $async$temp1 = $async$self;
                t1 = $async$temp1.localStorageService;
                $async$temp1 = t1;
                $async$goto = 5;
                return P._asyncHelper($async$temp1.get$atMentionPullRequests(), $async$load$1$force, $async$completer);
              case 5:
                // returning from await.
                t2 = $async$result;
                $async$temp1 = $async$self;
                $async$temp1.atMentionPullRequests = t2;
                $async$goto = !force ? 6 : 8;
                break;
              case 6:
                // then
                $async$goto = t2 == null ? 9 : 11;
                break;
              case 9:
                // then
                $async$result = t2;
                // goto join
                $async$goto = 10;
                break;
              case 11:
                // else
                $async$temp1 = J;
                $async$result = $async$temp1.get$isNotEmpty$asx(t2);
              case 10:
                // join
                t2 = $async$result === true;
                // goto join
                $async$goto = 7;
                break;
              case 8:
                // else
                t2 = false;
              case 7:
                // join
                $async$goto = t2 ? 12 : 14;
                break;
              case 12:
                // then
                $async$temp1 = $async$self;
                $async$temp2 = t1;
                $async$temp1.AtMentionStore_updated = $async$temp2.atMentionsUpdated;
                // goto join
                $async$goto = 13;
                break;
              case 14:
                // else
                $async$temp1 = $async$self;
                $async$goto = 15;
                return P._asyncHelper($async$temp1._getChaserAssetsFromGithub$0(), $async$load$1$force, $async$completer);
              case 15:
                // returning from await.
                $async$temp1 = t1;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp1.set$atMentionPullRequests($async$temp2.atMentionPullRequests);
              case 13:
                // join
                $async$temp1 = $async$self;
                $async$temp1.AtMentionStore_loading = false;
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 16 : 17;
                break;
              case 16:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 17:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                $async$temp1 = $async$self;
                $async$temp2 = $async$self;
                $async$temp1.AtMentionStore_displayPullRequests = $async$temp2.atMentionPullRequests;
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp1._displayAll$1($async$temp2.AtMentionStore_showAll);
                $async$temp1 = $;
                t1 = $async$temp1.$get$browserAction();
                t1.toString;
                $async$temp1 = $;
                t2 = $async$temp1.$get$chrome();
                $async$temp1 = J;
                $async$goto = $async$temp1.$index$asx(t2, "browserAction") != null ? 18 : 19;
                break;
              case 18:
                // then
                $async$temp1 = $async$self;
                t3 = $async$temp1.atMentionPullRequests;
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$goto = t3 == null ? 20 : 22;
                break;
              case 20:
                // then
                $async$result = t3;
                // goto join
                $async$goto = 21;
                break;
              case 22:
                // else
                $async$temp3 = J;
                $async$temp3 = $async$temp3;
                $async$temp4 = t3;
                $async$temp5 = L;
                $async$result = $async$temp3.where$1$ax($async$temp4, new $async$temp5.AtMentionStore_load_closure());
              case 21:
                // join
                t3 = $async$temp1.toString$0$($async$temp2.get$length$asx($async$result));
                $async$temp1 = P;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp2 = $async$temp2;
                $async$temp3 = $;
                t4 = $async$temp1.JsObject_JsObject($async$temp2.$index$asx($async$temp3.$get$context(), "Object"), null);
                $async$goto = t3 != null ? 23 : 24;
                break;
              case 23:
                // then
                $async$temp1 = J;
                $async$temp1.$indexSet$ax(t4, "text", t3);
              case 24:
                // join
                t1.toString;
                $async$temp1 = J;
                $async$goto = $async$temp1.$index$asx(t2, "browserAction") == null ? 25 : 26;
                break;
              case 25:
                // then
                $async$temp1 = t1;
                $async$temp1._throwNotAvailable$0();
              case 26:
                // join
                $async$temp1 = J;
                $async$temp1 = $async$temp1.$index$asx(t2, "browserAction");
                $async$temp1 = $async$temp1;
                $async$temp2 = F;
                $async$temp2 = $async$temp2;
                $async$temp3 = L;
                $async$temp1.callMethod$2("setBadgeText", [$async$temp2.jsify(new $async$temp3.BrowserActionSetBadgeTextParams(t4))]);
              case 19:
                // join
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$goto = 27;
                return P._asyncHelper($async$temp1.getPullRequestsStatus$1($async$temp2.atMentionPullRequests), $async$load$1$force, $async$completer);
              case 27:
                // returning from await.
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp1 = t1 = $async$temp1.get$iterator$ax($async$temp2.atMentionPullRequests);
                $async$temp2 = $async$self;
                $async$temp1, t2 = $async$temp2.gitHubService;
              case 28:
                // for condition
                $async$temp1 = t1;
                if (!($async$temp1.moveNext$0() === true)) {
                  // goto after for
                  $async$goto = 29;
                  break;
                }
                $async$temp1 = t2;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp2 = $async$temp2.get$current();
                $async$temp1.getPullRequestCommits$1($async$temp2.get$githubPullRequest());
                // goto for condition
                $async$goto = 28;
                break;
              case 29:
                // after for
              case 1:
                // return
                return P._asyncHelper($async$returnValue, 0, $async$completer, null);
              case 2:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$load$1$force, $async$completer, null);
      },
      load$0: function($receiver) {
        return this.load$1$force($receiver, false);
      },
      AtMentionStore$6: function(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService) {
        var t1 = this._chaserActions;
        t1.locationActions.refreshView.listen$1(new L.AtMentionStore_closure(this));
        this.triggerOnAction$2(t1.atMentionActions.displayAll, this.get$_displayAll());
      },
      static: {AtMentionStore$: function(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService) {
          var t1 = new L.AtMentionStore(null, _userStore, _chaserActions, _locationStore, [], null, new P.DateTime(Date.now(), false), false, true, true, null, localStorageService, null, gitHubService, null, null, null, null, null, null);
          t1.Store$0();
          t1.ChaserStore$3(statusService, localStorageService, gitHubService);
          t1.AtMentionStore$6(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService);
          return t1;
        }}
    },
    AtMentionStore_closure: {
      "^": "Closure:1;_chaser_stores$_captured_this_0",
      call$1: [function(e) {
        this._chaser_stores$_captured_this_0.load$1$force(0, true);
      }, null, null, 2, 0, null, 1, "call"]
    },
    AtMentionStore__displayAll_closure: {
      "^": "Closure:5;",
      call$1: [function(pr) {
        return pr.get$actionNeeded();
      }, null, null, 2, 0, null, 18, "call"]
    },
    AtMentionStore__getChaserAssetsFromGithub_closure: {
      "^": "Closure:75;",
      call$2: [function(a, b) {
        return J.compareTo$1$ns(J.toString$0$(b.get$actionNeeded()), J.toString$0$(a.get$actionNeeded()));
      }, null, null, 4, 0, null, 71, 72, "call"]
    },
    AtMentionStore_load_closure: {
      "^": "Closure:5;",
      call$1: [function(pr) {
        return pr.get$actionNeeded();
      }, null, null, 2, 0, null, 18, "call"]
    },
    ChaserStores: {
      "^": "Object;userStore<,atMentionStore<,locationStore<,localStorageService,pullRequestsStore<,updated<,statusService<"
    },
    LocationStore: {
      "^": "Store;currentView>,_chaserActions,_streamController,_stream",
      LocationStore$1: function(_chaserActions) {
        var t1;
        this.currentView = C.ChaserViews_0;
        t1 = this._chaserActions.locationActions;
        t1.changeViewNext.listen$1(new L.LocationStore_closure(this));
        t1.changeViewPrevious.listen$1(new L.LocationStore_closure0(this));
      },
      static: {LocationStore$: function(_chaserActions) {
          var t1 = new L.LocationStore(null, _chaserActions, null, null);
          t1.Store$0();
          t1.LocationStore$1(_chaserActions);
          return t1;
        }}
    },
    LocationStore_closure: {
      "^": "Closure:1;_chaser_stores$_captured_this_0",
      call$1: [function(e) {
        var t1, newIndex, t2;
        t1 = this._chaser_stores$_captured_this_0;
        newIndex = C.JSArray_methods.indexOf$1(C.List_ChaserViews_0_ChaserViews_1, t1.currentView) + 1;
        if (newIndex > 1)
          t2 = C.ChaserViews_0;
        else {
          if (newIndex < 0)
            return H.ioore(C.List_ChaserViews_0_ChaserViews_1, newIndex);
          t2 = C.List_ChaserViews_0_ChaserViews_1[newIndex];
        }
        t1.currentView = t2;
        t2 = t1._streamController;
        if (t2._state >= 4)
          H.throwExpression(t2._badEventState$0());
        t2._async$_add$1(0, t1);
      }, null, null, 2, 0, null, 1, "call"]
    },
    LocationStore_closure0: {
      "^": "Closure:1;_chaser_stores$_captured_this_1",
      call$1: [function(e) {
        var t1, newIndex, t2;
        t1 = this._chaser_stores$_captured_this_1;
        newIndex = C.JSArray_methods.indexOf$1(C.List_ChaserViews_0_ChaserViews_1, t1.currentView) - 1;
        if (newIndex < 0)
          t2 = C.ChaserViews_1;
        else {
          if (newIndex >= 2)
            return H.ioore(C.List_ChaserViews_0_ChaserViews_1, newIndex);
          t2 = C.List_ChaserViews_0_ChaserViews_1[newIndex];
        }
        t1.currentView = t2;
        t2 = t1._streamController;
        if (t2._state >= 4)
          H.throwExpression(t2._badEventState$0());
        t2._async$_add$1(0, t1);
      }, null, null, 2, 0, null, 1, "call"]
    },
    PullRequestsStore: {
      "^": "ChaserStore;_userStore,_locationStore,_chaserActions,updated:PullRequestsStore_updated<,displayPullRequests:PullRequestsStore_displayPullRequests<,showAll:PullRequestsStore_showAll<,rowsHideable:PullRequestsStore_rowsHideable<,loading:PullRequestsStore_loading<,displayPullRequests,localStorageService,updated,gitHubService,showAll,rowsHideable,loading,_chaser_store$_statusService,_streamController,_stream",
      _getChaserAssetsFromGithub$0: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, $async$temp1, $async$temp2;
        var $async$_getChaserAssetsFromGithub$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1.PullRequestsStore_displayPullRequests = [];
                $async$temp1 = $async$self;
                $async$temp2 = P;
                $async$temp1.PullRequestsStore_updated = new $async$temp2.DateTime(Date.now(), false);
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.gitHubService;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2._userStore;
                $async$temp2 = $async$temp2.githubUser;
                $async$goto = 2;
                return P._asyncHelper($async$temp1.searchForOpenPullRequests$1($async$temp2.get$login()), $async$_getChaserAssetsFromGithub$0, $async$completer);
              case 2:
                // returning from await.
                t1 = $async$result;
                $async$temp1 = $async$self;
                $async$temp1.PullRequestsStore_displayPullRequests = t1;
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1.localStorageService;
                $async$temp1 = $async$temp1;
                $async$temp2 = J;
                $async$temp1.addPrsChased$1($async$temp2.get$length$asx(t1));
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 3 : 4;
                break;
              case 3:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 4:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$temp1.getPullRequestsStatus$1($async$temp2.PullRequestsStore_displayPullRequests);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_getChaserAssetsFromGithub$0, $async$completer, null);
      },
      load$1$force: function(_, force) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, $async$temp1, $async$temp2;
        var $async$load$1$force = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1._locationStore;
                $async$temp1 = $async$temp1.currentView;
                $async$temp2 = C;
                $async$goto = $async$temp1 === $async$temp2.ChaserViews_1 ? 2 : 3;
                break;
              case 2:
                // then
                $async$temp1 = $async$self;
                $async$temp1.PullRequestsStore_loading = true;
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 4 : 5;
                break;
              case 4:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 5:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                $async$temp1 = $async$self;
                $async$goto = 6;
                return P._asyncHelper($async$temp1._getChaserAssetsFromGithub$0(), $async$load$1$force, $async$completer);
              case 6:
                // returning from await.
                $async$temp1 = $async$self;
                $async$temp1.PullRequestsStore_loading = false;
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 7 : 8;
                break;
              case 7:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 8:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
              case 3:
                // join
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$load$1$force, $async$completer, null);
      },
      load$0: function($receiver) {
        return this.load$1$force($receiver, false);
      },
      PullRequestsStore$6: function(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService) {
        this.PullRequestsStore_updated = new P.DateTime(Date.now(), false);
        this._chaserActions.locationActions.refreshView.listen$1(new L.PullRequestsStore_closure(this));
        this._locationStore._stream.listen$4$cancelOnError$onDone$onError(new L.PullRequestsStore_closure0(this), null, null, null);
      },
      static: {PullRequestsStore$: function(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService) {
          var t1 = new L.PullRequestsStore(_userStore, _locationStore, _chaserActions, null, null, null, false, true, null, localStorageService, null, gitHubService, null, null, null, null, null, null);
          t1.Store$0();
          t1.ChaserStore$3(statusService, localStorageService, gitHubService);
          t1.PullRequestsStore$6(_chaserActions, gitHubService, _userStore, _locationStore, statusService, localStorageService);
          return t1;
        }}
    },
    PullRequestsStore_closure: {
      "^": "Closure:1;_chaser_stores$_captured_this_0",
      call$1: [function(e) {
        this._chaser_stores$_captured_this_0.load$1$force(0, true);
      }, null, null, 2, 0, null, 1, "call"]
    },
    PullRequestsStore_closure0: {
      "^": "Closure:1;_chaser_stores$_captured_this_1",
      call$1: [function(_) {
        this._chaser_stores$_captured_this_1.load$1$force(0, false);
      }, null, null, 2, 0, null, 2, "call"]
    },
    UserStore: {
      "^": "Store;authed<,githubUser<,_ready,_gitHubService,_actions,_localStorageStore,_streamController,_stream",
      get$isReady: function() {
        return this._ready;
      },
      load$0: function(_) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, accessToken, $async$temp1, $async$temp2;
        var $async$load$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = X;
                $async$goto = 2;
                return P._asyncHelper($async$temp1.LocalStorageStore_open(), $async$load$0, $async$completer);
              case 2:
                // returning from await.
                t1 = $async$result;
                $async$temp1 = $async$self;
                $async$temp1._localStorageStore = t1;
                $async$temp1 = t1;
                $async$goto = 3;
                return P._asyncHelper($async$temp1.getByKey$1("github"), $async$load$0, $async$completer);
              case 3:
                // returning from await.
                accessToken = $async$result;
                $async$goto = accessToken != null ? 4 : 5;
                break;
              case 4:
                // then
                $async$temp1 = $async$self;
                $async$goto = 6;
                return P._asyncHelper($async$temp1._authUser$1(accessToken), $async$load$0, $async$completer);
              case 6:
                // returning from await.
              case 5:
                // join
                $async$temp1 = $async$self;
                $async$temp1._ready = true;
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 7 : 8;
                break;
              case 7:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 8:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$load$0, $async$completer, null);
      },
      _authUser$1: [function(ghToken) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, exception, t1, $async$exception, $async$temp1, $async$temp2;
        var $async$_authUser$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$handler = 3;
                $async$temp1 = $async$self;
                $async$temp2 = $async$self;
                $async$temp2 = $async$temp2._gitHubService;
                $async$goto = 6;
                return P._asyncHelper($async$temp2.setAndCheckToken$1(ghToken), $async$_authUser$1, $async$completer);
              case 6:
                // returning from await.
                $async$temp1.githubUser = $async$result;
                $async$temp1 = $async$self;
                $async$temp1.authed = true;
                $async$temp1 = J;
                $async$temp1 = $async$temp1;
                $async$temp2 = $async$self;
                $async$goto = 7;
                return P._asyncHelper($async$temp1.save$2$x($async$temp2._localStorageStore, ghToken, "github"), $async$_authUser$1, $async$completer);
              case 7:
                // returning from await.
                $async$handler = 1;
                // goto after finally
                $async$goto = 5;
                break;
              case 3:
                // catch
                $async$handler = 2;
                $async$exception = $async$currentError;
                $async$temp1 = H;
                $async$temp1.unwrapException($async$exception);
                $async$temp1 = $async$self;
                $async$temp1.authed = false;
                // goto after finally
                $async$goto = 5;
                break;
              case 2:
                // uncaught
                // goto rethrow
                $async$goto = 1;
                break;
              case 5:
                // after finally
                $async$temp1 = $async$self;
                t1 = $async$temp1._streamController;
                $async$temp1 = t1;
                $async$goto = $async$temp1._state >= 4 ? 8 : 9;
                break;
              case 8:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t1;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 9:
                // join
                $async$temp1 = t1;
                $async$temp1._async$_add$1(0, $async$self);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_authUser$1, $async$completer, null);
      }, "call$1", "get$_authUser", 2, 0, 50, 73]
    }
  }], ["wChaser.src.utils.dates", "package:wChaser/src/utils/dates.dart",, O, {
    "^": "",
    getPrettyDates: function(dateToCompare) {
      var t1, otherMs, t2, t3;
      t1 = Date.now();
      otherMs = dateToCompare.get$millisecondsSinceEpoch();
      if (typeof otherMs !== "number")
        return H.iae(otherMs);
      t2 = new O.getPrettyDates_dateLabel();
      t1 = P.Duration$(0, 0, 0, t1 - otherMs, 0, 0)._duration;
      t3 = C.JSNumber_methods._tdivFast$1(t1, 864e8);
      if (t3 > 0)
        return t2.call$2(t3, t3 === 1 ? "day" : "days");
      else {
        t3 = C.JSNumber_methods._tdivFast$1(t1, 3600000000);
        if (t3 >= 1)
          return t2.call$2(t3, t3 === 1 ? "hour" : "hours");
        else {
          t3 = C.JSNumber_methods._tdivFast$1(t1, 60000000);
          if (t3 >= 1)
            return t2.call$2(t3, t3 === 1 ? "minute" : "minutes");
          else {
            t1 = C.JSNumber_methods._tdivFast$1(t1, 1000000);
            if (t1 > 0)
              return t2.call$2(t1, t1 === 1 ? "second" : "seconds");
          }
        }
      }
      return "";
    },
    getPrettyDates_dateLabel: {
      "^": "Closure:3;",
      call$2: function($length, label) {
        return "Updated " + $length + " " + label + " ago";
      }
    }
  }], ["wChaser.src.utils.utils", "package:wChaser/src/utils/utils.dart",, D, {
    "^": "",
    isPlusOneNeeded: function(gitHubComments, userId) {
      var t1 = {};
      t1._captured_plusOneNeeded_0 = true;
      t1._captured_atMentionedComment_1 = null;
      J.forEach$1$ax(gitHubComments, new D.isPlusOneNeeded_closure(t1, userId));
      return t1._captured_plusOneNeeded_0;
    },
    isPlusOneNeeded_closure: {
      "^": "Closure:51;_utils$_box_0,_captured_userId_1",
      call$1: [function(gitHubComment) {
        var t1, t2, t3;
        t1 = J.getInterceptor$x(gitHubComment);
        t2 = this._captured_userId_1;
        if (J.contains$1$asx(t1.get$body(gitHubComment), "@" + H.S(t2)) === true) {
          t1 = this._utils$_box_0;
          t1._captured_atMentionedComment_1 = gitHubComment;
          t1._captured_plusOneNeeded_0 = true;
        } else {
          t3 = this._utils$_box_0;
          if (t3._captured_plusOneNeeded_0 && J.$eq$(gitHubComment.get$user().get$login(), t2))
            t3._captured_plusOneNeeded_0 = J.contains$1$asx(t1.get$body(gitHubComment), "+1") !== true && J.contains$1$asx(J.get$runes$s(t1.get$body(gitHubComment)), 128077) !== true;
        }
      }, null, null, 2, 0, null, 74, "call"]
    }
  }], ["w_flux.action", "package:w_flux/src/action.dart",, G, {
    "^": "",
    Action: {
      "^": "Object;_listeners",
      call$1: [function(payload) {
        return P.Future_wait(H.setRuntimeTypeInfo(new H.MappedListIterable(this._listeners, new G.Action_call_closure(payload)), [null, null]), null, false);
      }, function() {
        return this.call$1(null);
      }, "call$0", null, null, "get$$call", 0, 2, null, 0, 30],
      listen$1: function(onData) {
        this._listeners.push(onData);
        return new G.ActionSubscription(new G.Action_listen_closure(this, onData));
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return this === other;
      },
      $isFunction: 1,
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, ret: P.Future, opt: [T]};
        }, this, "Action");
      }
    },
    Action_call_closure: {
      "^": "Closure:1;_captured_payload_0",
      call$1: [function(l) {
        return P.Future_Future$microtask(new G.Action_call__closure(this._captured_payload_0, l), null);
      }, null, null, 2, 0, null, 50, "call"]
    },
    Action_call__closure: {
      "^": "Closure:0;_captured_payload_1,_captured_l_2",
      call$0: function() {
        return this._captured_l_2.call$1(this._captured_payload_1);
      }
    },
    Action_listen_closure: {
      "^": "Closure:0;_action$_captured_this_0,_captured_onData_1",
      call$0: function() {
        return C.JSArray_methods.remove$1(this._action$_captured_this_0._listeners, this._captured_onData_1);
      }
    },
    ActionSubscription: {
      "^": "Object;_action$_onCancel",
      cancel$0: function(_) {
        this._action$_onCancel$0();
      },
      _action$_onCancel$0: function() {
        return this._action$_onCancel.call$0();
      }
    }
  }], ["w_flux.mixins.batched_redraws", "package:w_flux/src/mixins/batched_redraws.dart",, Y, {
    "^": "",
    _RedrawScheduler: {
      "^": "Object:52;_components",
      call$1: function(component) {
        var t1 = this._components;
        if (t1._collection$_length === 0)
          this._tick$0();
        t1.add$1(0, component);
      },
      _tick$0: function() {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, $async$temp1, $async$temp2;
        var $async$_tick$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = C;
                $async$temp1 = $async$temp1.Window_methods;
                $async$goto = 2;
                return P._asyncHelper($async$temp1.get$animationFrame(window), $async$_tick$0, $async$completer);
              case 2:
                // returning from await.
                $async$temp1 = $async$self;
                t1 = $async$temp1._components;
                $async$temp1 = t1;
                $async$temp1 = $async$temp1;
                $async$temp2 = Y;
                $async$temp1.forEach$1(0, new $async$temp2._RedrawScheduler__tick_closure());
                $async$temp1 = t1;
                $async$temp1.clear$0(0);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$_tick$0, $async$completer, null);
      },
      $isFunction: 1
    },
    _RedrawScheduler__tick_closure: {
      "^": "Closure:1;",
      call$1: function(c) {
        J.setState$1$x(c, P.LinkedHashMap__makeEmpty());
      }
    },
    BatchedRedraws: {
      "^": "Object;",
      redraw$0: function() {
        return $.$get$_scheduleRedraw().call$1(H.interceptedTypeCast(this, "$isComponent"));
      }
    }
  }], ["w_flux.src.component_client", "package:w_flux/src/component_client.dart",, R, {
    "^": "",
    FluxComponent: {
      "^": "FluxComponentCommon_BatchedRedraws;"
    },
    FluxComponentCommon_BatchedRedraws: {
      "^": "FluxComponentCommon+BatchedRedraws;"
    }
  }], ["w_flux.src.component_common", "package:w_flux/src/component_common.dart",, X, {
    "^": "",
    FluxComponentCommon: {
      "^": "Component;",
      componentWillMount$0: function() {
        var handlers = H.subtypeCast(P.LinkedHashMap_LinkedHashMap$fromIterable(this.redrawOn$0(), null, new X.FluxComponentCommon_componentWillMount_closure(this), null, null), "$isMap", [A.Store, P.Function], "$asMap");
        handlers.addAll$1(0, P.LinkedHashMap__makeEmpty());
        handlers.forEach$1(0, new X.FluxComponentCommon_componentWillMount_closure0(this));
      },
      componentWillUnmount$0: function() {
        C.JSArray_methods.forEach$1(this._subscriptions, new X.FluxComponentCommon_componentWillUnmount_closure());
      },
      redrawOn$0: function() {
        if (H.subtypeOfRuntimeTypeCast(J.$index$asx(this.props, "store"), H.getRuntimeTypeArgument(this, "FluxComponentCommon", 1)) instanceof A.Store)
          return [H.interceptedTypeCast(H.subtypeOfRuntimeTypeCast(J.$index$asx(this.props, "store"), H.getRuntimeTypeArgument(this, "FluxComponentCommon", 1)), "$isStore")];
        else
          return [];
      }
    },
    FluxComponentCommon_componentWillMount_closure: {
      "^": "Closure:1;_component_common$_captured_this_0",
      call$1: function(_) {
        return new X.FluxComponentCommon_componentWillMount__closure(this._component_common$_captured_this_0);
      }
    },
    FluxComponentCommon_componentWillMount__closure: {
      "^": "Closure:1;_component_common$_captured_this_1",
      call$1: [function(_) {
        return this._component_common$_captured_this_1.redraw$0();
      }, null, null, 2, 0, null, 2, "call"]
    },
    FluxComponentCommon_componentWillMount_closure0: {
      "^": "Closure:3;_component_common$_captured_this_2",
      call$2: function(store, handler) {
        this._component_common$_captured_this_2._subscriptions.push(store.listen$1(handler));
      }
    },
    FluxComponentCommon_componentWillUnmount_closure: {
      "^": "Closure:53;",
      call$1: function(subscription) {
        if (subscription != null)
          J.cancel$0$x(subscription);
      }
    }
  }], ["w_flux.store", "package:w_flux/src/store.dart",, A, {
    "^": "",
    Store: {
      "^": "Object;_streamController,_stream",
      triggerOnAction$2: function(action, onAction) {
        action.listen$1(new A.Store_triggerOnAction_closure(this, onAction));
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._stream.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      Store$0: function() {
        var t1 = P.StreamController_StreamController(null, null, null, null, false, A.Store);
        this._streamController = t1;
        t1 = H.setRuntimeTypeInfo(new P._ControllerStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
        this._stream = P._AsBroadcastStream$(t1, null, null, H.getRuntimeTypeArgument(t1, "Stream", 0));
      }
    },
    Store_triggerOnAction_closure: {
      "^": "Closure:74;_store$_captured_this_0,_captured_onAction_1",
      call$1: [function(payload) {
        var $async$goto = 0, $async$completer = new P.Completer_Completer$sync(), $async$handler = 1, $async$currentError, $async$self = this, t1, t2, $async$temp1, $async$temp2;
        var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$temp1 = $async$self;
                $async$temp1 = $async$temp1._captured_onAction_1;
                $async$goto = 2;
                return P._asyncHelper($async$temp1.call$1(payload), $async$call$1, $async$completer);
              case 2:
                // returning from await.
                $async$temp1 = $async$self;
                t1 = $async$temp1._store$_captured_this_0;
                $async$temp1 = t1;
                t2 = $async$temp1._streamController;
                $async$temp1 = t2;
                $async$goto = $async$temp1._state >= 4 ? 3 : 4;
                break;
              case 3:
                // then
                $async$temp1 = H;
                $async$temp1 = $async$temp1;
                $async$temp2 = t2;
                $async$temp1.throwExpression($async$temp2._badEventState$0());
              case 4:
                // join
                $async$temp1 = t2;
                $async$temp1._async$_add$1(0, t1);
                // implicit return
                return P._asyncHelper(null, 0, $async$completer, null);
              case 1:
                // rethrow
                return P._asyncHelper($async$currentError, 1, $async$completer);
            }
        });
        return P._asyncHelper(null, $async$call$1, $async$completer, null);
      }, null, null, 2, 0, null, 30, "call"]
    }
  }], ["react_dom_server", "package:react/react_dom_server.dart",, A, {
    "^": ""
  }]];
  setupProgram(dart, 0);
  // getInterceptor methods
  J.getInterceptor = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSDouble.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return J.JSNull.prototype;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$asx = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ax = function(receiver) {
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$i = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumber.prototype;
    }
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$n = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$ns = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$s = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$x = function(receiver) {
    if (receiver == null)
      return receiver;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.set$isMounted$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$isMounted(receiver, value);
  };
  J.set$key$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$key(receiver, value);
  };
  J.set$next$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$next(receiver, value);
  };
  J.set$props$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$props(receiver, value);
  };
  J.set$validated$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$validated(receiver, value);
  };
  J.get$avatarUrl$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$avatarUrl(receiver);
  };
  J.get$context$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$context(receiver);
  };
  J.get$currentView$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$currentView(receiver);
  };
  J.get$displayName$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$displayName(receiver);
  };
  J.get$dropEffect$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$dropEffect(receiver);
  };
  J.get$effectAllowed$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$effectAllowed(receiver);
  };
  J.get$error$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$error(receiver);
  };
  J.get$files$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$files(receiver);
  };
  J.get$id$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$id(receiver);
  };
  J.get$internal$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$internal(receiver);
  };
  J.get$isEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
  };
  J.get$isMounted$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$isMounted(receiver);
  };
  J.get$isNotEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
  };
  J.get$iterator$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$iterator(receiver);
  };
  J.get$last$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$last(receiver);
  };
  J.get$length$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$length(receiver);
  };
  J.get$name$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$name(receiver);
  };
  J.get$next$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$next(receiver);
  };
  J.get$props$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$props(receiver);
  };
  J.get$refs$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$refs(receiver);
  };
  J.get$response$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$response(receiver);
  };
  J.get$result$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$result(receiver);
  };
  J.get$runes$s = function(receiver) {
    return J.getInterceptor$s(receiver).get$runes(receiver);
  };
  J.get$stream$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$stream(receiver);
  };
  J.get$target$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$target(receiver);
  };
  J.get$title$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$title(receiver);
  };
  J.get$types$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$types(receiver);
  };
  J.get$value$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$value(receiver);
  };
  J.$add$ns = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver + a0;
    return J.getInterceptor$ns(receiver).$add(receiver, a0);
  };
  J.$and$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver & a0) >>> 0;
    return J.getInterceptor$n(receiver).$and(receiver, a0);
  };
  J.$ge$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver >= a0;
    return J.getInterceptor$n(receiver).$ge(receiver, a0);
  };
  J.$gt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver > a0;
    return J.getInterceptor$n(receiver).$gt(receiver, a0);
  };
  J.$index$asx = function(receiver, a0) {
    if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
      if (a0 >>> 0 === a0 && a0 < receiver.length)
        return receiver[a0];
    return J.getInterceptor$asx(receiver).$index(receiver, a0);
  };
  J.$indexSet$ax = function(receiver, a0, a1) {
    if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0] = a1;
    return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
  };
  J.$le$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver <= a0;
    return J.getInterceptor$n(receiver).$le(receiver, a0);
  };
  J.$lt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver < a0;
    return J.getInterceptor$n(receiver).$lt(receiver, a0);
  };
  J.$mul$ns = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver * a0;
    return J.getInterceptor$ns(receiver).$mul(receiver, a0);
  };
  J.$or$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver | a0) >>> 0;
    return J.getInterceptor$n(receiver).$or(receiver, a0);
  };
  J.$shl$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).$shl(receiver, a0);
  };
  J.$sub$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver - a0;
    return J.getInterceptor$n(receiver).$sub(receiver, a0);
  };
  J.$xor$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver ^ a0) >>> 0;
    return J.getInterceptor$n(receiver).$xor(receiver, a0);
  };
  J.__isolate_helper$_add$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).__isolate_helper$_add$1(receiver, a0);
  };
  J._addEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver)._addEventListener$3(receiver, a0, a1, a2);
  };
  J._async$_add$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._async$_add$1(receiver, a0);
  };
  J._removeEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
  };
  J.add$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).add$1(receiver, a0);
  };
  J.addStream$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).addStream$1(receiver, a0);
  };
  J.addStream$2$cancelOnError$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).addStream$2$cancelOnError(receiver, a0, a1);
  };
  J.allMatches$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
  };
  J.cancel$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).cancel$0(receiver);
  };
  J.close$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).close$0(receiver);
  };
  J.codeUnitAt$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
  };
  J.compareTo$1$ns = function(receiver, a0) {
    return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
  };
  J.complete$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).complete$0(receiver);
  };
  J.complete$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).complete$1(receiver, a0);
  };
  J.contains$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
  };
  J.contains$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
  };
  J.elementAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
  };
  J.forEach$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
  };
  J.format$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).format$1(receiver, a0);
  };
  J.map$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).map$1(receiver, a0);
  };
  J.matchAsPrefix$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
  };
  J.pause$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).pause$0(receiver);
  };
  J.preventDefault$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).preventDefault$0(receiver);
  };
  J.putIfAbsent$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).putIfAbsent$2(receiver, a0, a1);
  };
  J.render$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).render$0(receiver);
  };
  J.replaceAll$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
  };
  J.resume$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).resume$0(receiver);
  };
  J.save$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).save$2(receiver, a0, a1);
  };
  J.send$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).send$1(receiver, a0);
  };
  J.setState$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).setState$1(receiver, a0);
  };
  J.sort$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
  };
  J.startsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
  };
  J.stopPropagation$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).stopPropagation$0(receiver);
  };
  J.sublist$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).sublist$1(receiver, a0);
  };
  J.substring$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).substring$1(receiver, a0);
  };
  J.substring$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
  };
  J.toList$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).toList$0(receiver);
  };
  J.toLowerCase$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
  };
  J.where$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).where$1(receiver, a0);
  };
  J.get$hashCode$ = function(receiver) {
    return J.getInterceptor(receiver).get$hashCode(receiver);
  };
  J.$eq$ = function(receiver, a0) {
    if (receiver == null)
      return a0 == null;
    if (typeof receiver != "object")
      return a0 != null && receiver === a0;
    return J.getInterceptor(receiver).$eq(receiver, a0);
  };
  J.noSuchMethod$1$ = function(receiver, a0) {
    return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
  };
  J.toString$0$ = function(receiver) {
    return J.getInterceptor(receiver).toString$0(receiver);
  };
  Isolate.makeConstantList = function(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  };
  var $ = Isolate.$isolateProperties;
  C.HttpRequest_methods = W.HttpRequest.prototype;
  C.Interceptor_methods = J.Interceptor.prototype;
  C.JSArray_methods = J.JSArray.prototype;
  C.JSDouble_methods = J.JSDouble.prototype;
  C.JSInt_methods = J.JSInt.prototype;
  C.JSNull_methods = J.JSNull.prototype;
  C.JSNumber_methods = J.JSNumber.prototype;
  C.JSString_methods = J.JSString.prototype;
  C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
  C.NativeUint8List_methods = H.NativeUint8List.prototype;
  C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
  C.ReactComponent_methods = K.ReactComponent.prototype;
  C.ReactElement_methods = K.ReactElement.prototype;
  C.Storage_methods = W.Storage.prototype;
  C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
  C.Window_methods = W.Window.prototype;
  C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
  C.C_OutOfMemoryError = new P.OutOfMemoryError();
  C.C_Utf8Encoder = new P.Utf8Encoder();
  C.C__DelayedDone = new P._DelayedDone();
  C.C__RootZone = new P._RootZone();
  C.ChaserViews_0 = new R.ChaserViews(0);
  C.ChaserViews_1 = new R.ChaserViews(1);
  C.Duration_0 = new P.Duration(0);
  C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
  C.JS_CONST_4hp = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
  C.JS_CONST_8ZY = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string" &&
        name.length > 2 &&
        name !== "Object" &&
        name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
  C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
  C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
  C.JS_CONST_gkc = function() {
  function typeNameInChrome(o) {
    var constructor = o.constructor;
    if (constructor) {
      var name = constructor.name;
      if (name) return name;
    }
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
  C.JS_CONST_gkc0 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
  C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
  C.JS_CONST_s8I = function(_, letter) { return letter.toUpperCase(); };
  C.JsonCodec_null_null = new P.JsonCodec(null, null);
  C.JsonDecoder_null = new P.JsonDecoder(null);
  C.JsonEncoder_null_null = new P.JsonEncoder(null, null);
  C.List_2Vk = Isolate.makeConstantList([0, 0, 32776, 33792, 1, 10240, 0, 0]);
  C.List_3US = Isolate.makeConstantList(["S", "M", "T", "W", "T", "F", "S"]);
  C.List_5_6 = Isolate.makeConstantList([5, 6]);
  C.List_6xs = Isolate.makeConstantList(["Before Christ", "Anno Domini"]);
  C.List_AM_PM = Isolate.makeConstantList(["AM", "PM"]);
  C.List_BC_AD = Isolate.makeConstantList(["BC", "AD"]);
  C.List_CVk = Isolate.makeConstantList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]);
  C.List_ChaserViews_0_ChaserViews_1 = Isolate.makeConstantList([C.ChaserViews_0, C.ChaserViews_1]);
  C.List_JYB = Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]);
  C.List_Q1_Q2_Q3_Q4 = Isolate.makeConstantList(["Q1", "Q2", "Q3", "Q4"]);
  C.List_bJM = Isolate.makeConstantList(["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]);
  C.List_cIc = Isolate.makeConstantList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]);
  C.List_cno = Isolate.makeConstantList(["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"]);
  C.List_empty = Isolate.makeConstantList([]);
  C.List_gRj = Isolate.makeConstantList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]);
  C.List_gc6 = Isolate.makeConstantList(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]);
  C.List_h8w = Isolate.makeConstantList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]);
  C.List_iDZ = Isolate.makeConstantList(["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"]);
  C.List_kWG = Isolate.makeConstantList(["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"]);
  C.List_nxB = Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]);
  C.List_qNA = Isolate.makeConstantList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]);
  C.List_qg40 = Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]);
  C.List_qg4 = Isolate.makeConstantList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]);
  C.List_qpm = Isolate.makeConstantList(["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"]);
  C.List_wMy = Isolate.makeConstantList(["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]);
  C.List_AgZ = H.setRuntimeTypeInfo(Isolate.makeConstantList(["onCopy", "onCut", "onPaste", "onKeyDown", "onKeyPress", "onKeyUp", "onFocus", "onBlur", "onChange", "onInput", "onSubmit", "onReset", "onClick", "onContextMenu", "onDoubleClick", "onDrag", "onDragEnd", "onDragEnter", "onDragExit", "onDragLeave", "onDragOver", "onDragStart", "onDrop", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp", "onTouchCancel", "onTouchEnd", "onTouchMove", "onTouchStart", "onScroll", "onWheel"]), [P.String]);
  C.Map_Ag2No = H.setRuntimeTypeInfo(new H.ConstantStringMap(36, {onCopy: A.react_client__syntheticClipboardEventFactory$closure(), onCut: A.react_client__syntheticClipboardEventFactory$closure(), onPaste: A.react_client__syntheticClipboardEventFactory$closure(), onKeyDown: A.react_client__syntheticKeyboardEventFactory$closure(), onKeyPress: A.react_client__syntheticKeyboardEventFactory$closure(), onKeyUp: A.react_client__syntheticKeyboardEventFactory$closure(), onFocus: A.react_client__syntheticFocusEventFactory$closure(), onBlur: A.react_client__syntheticFocusEventFactory$closure(), onChange: A.react_client__syntheticFormEventFactory$closure(), onInput: A.react_client__syntheticFormEventFactory$closure(), onSubmit: A.react_client__syntheticFormEventFactory$closure(), onReset: A.react_client__syntheticFormEventFactory$closure(), onClick: A.react_client__syntheticMouseEventFactory$closure(), onContextMenu: A.react_client__syntheticMouseEventFactory$closure(), onDoubleClick: A.react_client__syntheticMouseEventFactory$closure(), onDrag: A.react_client__syntheticMouseEventFactory$closure(), onDragEnd: A.react_client__syntheticMouseEventFactory$closure(), onDragEnter: A.react_client__syntheticMouseEventFactory$closure(), onDragExit: A.react_client__syntheticMouseEventFactory$closure(), onDragLeave: A.react_client__syntheticMouseEventFactory$closure(), onDragOver: A.react_client__syntheticMouseEventFactory$closure(), onDragStart: A.react_client__syntheticMouseEventFactory$closure(), onDrop: A.react_client__syntheticMouseEventFactory$closure(), onMouseDown: A.react_client__syntheticMouseEventFactory$closure(), onMouseEnter: A.react_client__syntheticMouseEventFactory$closure(), onMouseLeave: A.react_client__syntheticMouseEventFactory$closure(), onMouseMove: A.react_client__syntheticMouseEventFactory$closure(), onMouseOut: A.react_client__syntheticMouseEventFactory$closure(), onMouseOver: A.react_client__syntheticMouseEventFactory$closure(), onMouseUp: A.react_client__syntheticMouseEventFactory$closure(), onTouchCancel: A.react_client__syntheticTouchEventFactory$closure(), onTouchEnd: A.react_client__syntheticTouchEventFactory$closure(), onTouchMove: A.react_client__syntheticTouchEventFactory$closure(), onTouchStart: A.react_client__syntheticTouchEventFactory$closure(), onScroll: A.react_client__syntheticUIEventFactory$closure(), onWheel: A.react_client__syntheticWheelEventFactory$closure()}, C.List_AgZ), [P.String, P.Function]);
  C.List_EQM = Isolate.makeConstantList(["d", "E", "EEEE", "LLL", "LLLL", "M", "Md", "MEd", "MMM", "MMMd", "MMMEd", "MMMM", "MMMMd", "MMMMEEEEd", "QQQ", "QQQQ", "y", "yM", "yMd", "yMEd", "yMMM", "yMMMd", "yMMMEd", "yMMMM", "yMMMMd", "yMMMMEEEEd", "yQQQ", "yQQQQ", "H", "Hm", "Hms", "j", "jm", "jms", "jmv", "jmz", "jz", "m", "ms", "s", "v", "z", "zzzz", "ZZZZ"]);
  C.Map_EQGBe = new H.ConstantStringMap(44, {d: "d", E: "EEE", EEEE: "EEEE", LLL: "LLL", LLLL: "LLLL", M: "L", Md: "M/d", MEd: "EEE, M/d", MMM: "LLL", MMMd: "MMM d", MMMEd: "EEE, MMM d", MMMM: "LLLL", MMMMd: "MMMM d", MMMMEEEEd: "EEEE, MMMM d", QQQ: "QQQ", QQQQ: "QQQQ", y: "y", yM: "M/y", yMd: "M/d/y", yMEd: "EEE, M/d/y", yMMM: "MMM y", yMMMd: "MMM d, y", yMMMEd: "EEE, MMM d, y", yMMMM: "MMMM y", yMMMMd: "MMMM d, y", yMMMMEEEEd: "EEEE, MMMM d, y", yQQQ: "QQQ y", yQQQQ: "QQQQ y", H: "HH", Hm: "HH:mm", Hms: "HH:mm:ss", j: "h a", jm: "h:mm a", jms: "h:mm:ss a", jmv: "h:mm a v", jmz: "h:mm a z", jz: "h a z", m: "m", ms: "mm:ss", s: "s", v: "v", z: "z", zzzz: "zzzz", ZZZZ: "ZZZZ"}, C.List_EQM);
  C.Map_O9gmF = new H.GeneralConstantMap([0, "ChaserViews.atMentions", 1, "ChaserViews.pullRequests"]);
  C.List_empty0 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.Symbol0]);
  C.Map_empty = H.setRuntimeTypeInfo(new H.ConstantStringMap(0, {}, C.List_empty0), [P.Symbol0, null]);
  C.Symbol_89P = new H.Symbol("Intl.locale");
  C.Symbol_call = new H.Symbol("call");
  C.Utf8Codec_false = new P.Utf8Codec(false);
  C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P.async___rootScheduleMicrotask$closure());
  $.Primitives_mirrorFunctionCacheName = "$cachedFunction";
  $.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
  $.BoundClosure_selfFieldNameCache = null;
  $.BoundClosure_receiverFieldNameCache = null;
  $.getTagFunction = null;
  $.alternateTagFunction = null;
  $.prototypeForTagFunction = null;
  $.dispatchRecordsForInstanceTags = null;
  $.interceptorsForUncacheableTags = null;
  $.initNativeDispatchFlag = null;
  $._nextCallback = null;
  $._lastCallback = null;
  $._lastPriorityCallback = null;
  $._isInCallbackLoop = false;
  $.Zone__current = C.C__RootZone;
  $.Expando__keyCount = 0;
  $.en_USPatterns = C.Map_EQGBe;
  $.Device__isOpera = null;
  $.Device__isIE = null;
  $.Device__isFirefox = null;
  $.Device__cachedCssPrefix = null;
  $.Intl__defaultLocale = null;
  $.Intl_systemLocale = "en_US";
  $.renderToString = null;
  $.renderToStaticMarkup = null;
  $.unmountComponentAtNode = null;
  $.findDOMNode = null;
  $.a = null;
  $.abbr = null;
  $.address = null;
  $.area = null;
  $.article = null;
  $.aside = null;
  $.audio = null;
  $.b = null;
  $.base = null;
  $.bdi = null;
  $.bdo = null;
  $.big = null;
  $.blockquote = null;
  $.body = null;
  $.br = null;
  $.button = null;
  $.canvas = null;
  $.caption = null;
  $.cite = null;
  $.code = null;
  $.col = null;
  $.colgroup = null;
  $.data = null;
  $.datalist = null;
  $.dd = null;
  $.del = null;
  $.details = null;
  $.dfn = null;
  $.dialog = null;
  $.div = null;
  $.dl = null;
  $.dt = null;
  $.em = null;
  $.embed = null;
  $.fieldset = null;
  $.figcaption = null;
  $.figure = null;
  $.footer = null;
  $.form = null;
  $.h1 = null;
  $.h2 = null;
  $.h3 = null;
  $.h4 = null;
  $.h5 = null;
  $.h6 = null;
  $.head = null;
  $.header = null;
  $.hr = null;
  $.html = null;
  $.i = null;
  $.iframe = null;
  $.img = null;
  $.input = null;
  $.ins = null;
  $.kbd = null;
  $.keygen = null;
  $.label = null;
  $.legend = null;
  $.li = null;
  $.link = null;
  $.main0 = null;
  $.map = null;
  $.mark = null;
  $.menu = null;
  $.menuitem = null;
  $.meta = null;
  $.meter = null;
  $.nav = null;
  $.noscript = null;
  $.object = null;
  $.ol = null;
  $.optgroup = null;
  $.option = null;
  $.output = null;
  $.p = null;
  $.param = null;
  $.picture = null;
  $.pre = null;
  $.progress = null;
  $.q = null;
  $.rp = null;
  $.rt = null;
  $.ruby = null;
  $.s = null;
  $.samp = null;
  $.script = null;
  $.section = null;
  $.select = null;
  $.small = null;
  $.source = null;
  $.span = null;
  $.strong = null;
  $.style = null;
  $.sub = null;
  $.summary = null;
  $.sup = null;
  $.table = null;
  $.tbody = null;
  $.td = null;
  $.textarea = null;
  $.tfoot = null;
  $.th = null;
  $.thead = null;
  $.time = null;
  $.title = null;
  $.tr = null;
  $.track = null;
  $.u = null;
  $.ul = null;
  $.variable = null;
  $.video = null;
  $.wbr = null;
  $.circle = null;
  $.clipPath = null;
  $.defs = null;
  $.ellipse = null;
  $.g = null;
  $.image = null;
  $.line = null;
  $.linearGradient = null;
  $.mask = null;
  $.path = null;
  $.pattern = null;
  $.polygon = null;
  $.polyline = null;
  $.radialGradient = null;
  $.rect = null;
  $.stop = null;
  $.svg = null;
  $.text = null;
  $.tspan = null;
  $.unmountComponentAtNode0 = null;
  $.findDOMNode0 = null;
  $.renderToString0 = null;
  $.renderToStaticMarkup0 = null;
  $ = null;
  init.isHunkLoaded = function(hunkHash) {
    return !!$dart_deferred_initializers$[hunkHash];
  };
  init.deferredInitialized = new Object(null);
  init.isHunkInitialized = function(hunkHash) {
    return init.deferredInitialized[hunkHash];
  };
  init.initializeLoadedHunk = function(hunkHash) {
    $dart_deferred_initializers$[hunkHash]($globals$, $);
    init.deferredInitialized[hunkHash] = true;
  };
  init.deferredLibraryUris = {};
  init.deferredLibraryHashes = {};
  // Empty type-to-interceptor map.
  (function(lazies) {
    for (var i = 0; i < lazies.length;) {
      var fieldName = lazies[i++];
      var getterName = lazies[i++];
      var staticName = lazies[i++];
      var lazyValue = lazies[i++];
      Isolate.$lazy(fieldName, getterName, lazyValue, staticName);
    }
  })(["DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", "DART_CLOSURE_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartClosure");
  }, "IsolateNatives_thisScript", "$get$IsolateNatives_thisScript", "thisScript", function() {
    return H.IsolateNatives_computeThisScript();
  }, "IsolateNatives_workerIds", "$get$IsolateNatives_workerIds", "workerIds", function() {
    return H.setRuntimeTypeInfo(new P.Expando(null), [P.$int]);
  }, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", "noSuchMethodPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({toString: function() {
        return "$receiver$";
      }}));
  }, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", "notClosurePattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null, toString: function() {
        return "$receiver$";
      }}));
  }, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", "nullCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
  }, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", "nullLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", "undefinedCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", "undefinedLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", "nullPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
  }, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", "nullLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", "undefinedPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", "undefinedLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "browserAction", "$get$browserAction", "browserAction", function() {
    return L.ChromeBrowserAction$_();
  }, "chrome", "$get$chrome", "chrome", function() {
    return J.$index$asx($.$get$context(), "chrome");
  }, "mangledNames", "$get$mangledNames", "mangledNames", function() {
    return new H._LazyMangledInstanceNamesMap(init.mangledNames);
  }, "_AsyncRun_scheduleImmediateClosure", "$get$_AsyncRun_scheduleImmediateClosure", "scheduleImmediateClosure", function() {
    return P._AsyncRun__initializeScheduleImmediate();
  }, "Future__nullFuture", "$get$Future__nullFuture", "_nullFuture", function() {
    return P.Future_Future$value(null, null);
  }, "_toStringVisiting", "$get$_toStringVisiting", "_toStringVisiting", function() {
    return [];
  }, "context", "$get$context", "context", function() {
    return P._wrapToDart(self);
  }, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", "_DART_OBJECT_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartObject");
  }, "_dartProxyCtor", "$get$_dartProxyCtor", "_dartProxyCtor", function() {
    return function DartObject(o) {
      this.o = o;
    };
  }, "dateTimeSymbols", "$get$dateTimeSymbols", "dateTimeSymbols", function() {
    return H.setRuntimeTypeInfo(new X.UninitializedLocaleData("initializeDateFormatting(<locale>)", $.$get$en_USSymbols()), [null]);
  }, "dateTimePatterns", "$get$dateTimePatterns", "dateTimePatterns", function() {
    return H.setRuntimeTypeInfo(new X.UninitializedLocaleData("initializeDateFormatting(<locale>)", $.en_USPatterns), [null]);
  }, "en_USSymbols", "$get$en_USSymbols", "en_USSymbols", function() {
    return new B.DateSymbols("en_US", C.List_BC_AD, C.List_6xs, C.List_qpm, C.List_qpm, C.List_cIc, C.List_cIc, C.List_h8w, C.List_h8w, C.List_wMy, C.List_wMy, C.List_gc6, C.List_gc6, C.List_3US, C.List_3US, C.List_Q1_Q2_Q3_Q4, C.List_bJM, C.List_AM_PM, C.List_cno, C.List_kWG, C.List_iDZ, null, 6, C.List_5_6, 5);
  }, "DateFormat__matchers", "$get$DateFormat__matchers", "_matchers", function() {
    return [P.RegExp_RegExp("^'(?:[^']|'')*'", true, false), P.RegExp_RegExp("^(?:G+|y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|D+|m+|s+|v+|z+|Z+)", true, false), P.RegExp_RegExp("^[^'GyMkSEahKHcLQdDmsvzZ]+", true, false)];
  }, "Label", "$get$Label", "Label", function() {
    return $.$get$registerComponent().call$1(new U.closure10());
  }, "render", "$get$render", "render", function() {
    return new V.closure1();
  }, "registerComponent", "$get$registerComponent", "registerComponent", function() {
    return new V.closure0();
  }, "emptyJsMap", "$get$emptyJsMap", "emptyJsMap", function() {
    return {};
  }, "getProperty", "$get$getProperty", "getProperty", function() {
    return new R.closure14().call$0();
  }, "setProperty", "$get$setProperty", "setProperty", function() {
    return new R.closure3().call$0();
  }, "render0", "$get$render0", "render", function() {
    return new R.closure2();
  }, "Alert", "$get$Alert", "Alert", function() {
    return $.$get$registerComponent().call$1(new L.closure13());
  }, "ChaserApp", "$get$ChaserApp", "ChaserApp", function() {
    return $.$get$registerComponent().call$1(new K.closure());
  }, "divStyle", "$get$divStyle", "divStyle", function() {
    return P.LinkedHashMap__makeLiteral(["height", "400px", "overflowY", "auto", "width", "100%", "backgroundolor", "#FBFBFB"]);
  }, "ChaserGrid", "$get$ChaserGrid", "ChaserGrid", function() {
    return $.$get$registerComponent().call$1(new O.closure7());
  }, "mediaWidth", "$get$mediaWidth", "mediaWidth", function() {
    return P.LinkedHashMap__makeLiteral(["width", "100%"]);
  }, "ChaserRow", "$get$ChaserRow", "ChaserRow", function() {
    return $.$get$registerComponent().call$1(new E.closure9());
  }, "Footer", "$get$Footer", "Footer", function() {
    return $.$get$registerComponent().call$1(new G.closure6());
  }, "Header", "$get$Header", "Header", function() {
    return $.$get$registerComponent().call$1(new R.closure5());
  }, "Loading", "$get$Loading", "Loading", function() {
    return $.$get$registerComponent().call$1(new L.closure12());
  }, "Login", "$get$Login", "Login", function() {
    return $.$get$registerComponent().call$1(new N.closure4());
  }, "PopOver", "$get$PopOver", "PopOver", function() {
    return $.$get$registerComponent().call$1(new Z.closure8());
  }, "PullRequestStatus", "$get$PullRequestStatus", "PullRequestStatus", function() {
    return $.$get$registerComponent().call$1(new T.closure11());
  }, "_scheduleRedraw", "$get$_scheduleRedraw", "_scheduleRedraw", function() {
    return new Y._RedrawScheduler(P.LinkedHashSet_LinkedHashSet(null, null, null, null));
  }]);
  Isolate = Isolate.$finishIsolateConstructor(Isolate);
  $ = new Isolate();
  init.metadata = [null, "e", "_", "error", "stackTrace", "value", "jsThis", "key", "data", "result", "invocation", "openPrJson", "callback", "arguments", "o", "newArgs", "me", "componentFactory", "pr", "arg1", "self", "element", "skipMethods", "props", "children", "object", "reactInternal", "nextState", "nextContext", "event", "payload", "jsObj", "x", "sender", "captureThis", "numberOfArguments", "errorCode", "isolate", "each", "arg2", C.List_empty, "theError", "theStackTrace", "instance", "ignored", "name", "obj", "arg3", "s", "arg", "l", "prevState", "prevContext", "k", "propKey", "v", "byteString", "child", "keyboardEvent", "gitHubSearchResult", "popOverProps", "ghs", "time", "labelJson", "commentJson", "commitJson", "closure", "ghpr", "aMPR", "ghStatus", "arg4", "a", "b", "ghToken", "gitHubComment", "domId", "prevProps"];
  init.types = [{func: 1}, {func: 1, args: [,]}, {func: 1, v: true}, {func: 1, args: [,,]}, {func: 1, args: [K.ReactComponent]}, {func: 1, args: [N.GitHubSearchResult]}, {func: 1, args: [P.Map]}, {func: 1, v: true, args: [{func: 1, v: true}]}, {func: 1, opt: [,]}, {func: 1, args: [, P.StackTrace]}, {func: 1, v: true, args: [P.Object], opt: [P.StackTrace]}, {func: 1, args: [,], opt: [,]}, {func: 1, args: [V.SyntheticMouseEvent]}, {func: 1, args: [K.ReactComponent, K.InteropProps,,,]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, v: true, args: [,], opt: [P.StackTrace]}, {func: 1, args: [P.bool]}, {func: 1, ret: P.$int, args: [P.String]}, {func: 1, ret: P.String, args: [P.$int]}, {func: 1, args: [, P.String]}, {func: 1, ret: W.DomIterator}, {func: 1, ret: K.ReactElement, args: [P.Map], opt: [,]}, {func: 1, args: [V.Component, K.InteropProps]}, {func: 1, v: true, args: [P.Object, P.StackTrace]}, {func: 1, args: [P.String]}, {func: 1, ret: P.Future}, {func: 1, ret: P.String, args: [K.ReactElement]}, {func: 1, args: [P.$int,,]}, {func: 1, ret: P.Object, opt: [P.Object]}, {func: 1, args: [{func: 1, v: true}]}, {func: 1, ret: [P.List, W.RtcStatsReport]}, {func: 1, v: true, opt: [P.Object]}, {func: 1, ret: [P.Stream, P.String]}, {func: 1, args: [P.Symbol0,,]}, {func: 1, args: [P.Object]}, {func: 1, ret: P.bool}, {func: 1, args: [K.ReactComponent, K.InteropProps], opt: [,]}, {func: 1, v: true, args: [P.String]}, {func: 1, args: [K.ReactComponent,,,], opt: [,]}, {func: 1, args: [K.ReactComponent], opt: [,]}, {func: 1, args: [Q.SyntheticEvent0], opt: [P.String, W.Event]}, {func: 1, args: [W.KeyboardEvent]}, {func: 1, args: [P.String,,]}, {func: 1, args: [V.SyntheticEvent]}, {func: 1, args: [A.PopoverProps]}, {func: 1, args: [P.String, N.GitHubStatus]}, {func: 1, ret: P.$int, args: [,,]}, {func: 1, v: true, args: [, P.StackTrace]}, {func: 1, args: [N.GitHubStatus]}, {func: 1, v: true, args: [P.String], opt: [,]}, {func: 1, ret: P.Future, args: [P.String]}, {func: 1, args: [N.GitHubComment]}, {func: 1, v: true, args: [V.Component]}, {func: 1, args: [P.StreamSubscription]}, {func: 1, ret: P.bool, args: [W.Element]}, {func: 1, ret: G.Tab, args: [P.JsObject]}, {func: 1, v: true, args: [,,]}, {func: 1, v: true, args: [,]}, {func: 1, v: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1}]}, {func: 1, ret: P.$int, args: [P.$int, P.$int]}, {func: 1, ret: P.$int, args: [P.Comparable, P.Comparable]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, ret: P.bool, args: [,]}, {func: 1, ret: {func: 1, ret: K.ReactElement, args: [P.Map], opt: [,]}, args: [{func: 1, ret: V.Component}], opt: [[P.Iterable, P.String]]}, {func: 1, ret: V.SyntheticClipboardEvent, args: [Q.SyntheticClipboardEvent0]}, {func: 1, ret: V.SyntheticKeyboardEvent, args: [Q.SyntheticKeyboardEvent0]}, {func: 1, ret: V.SyntheticFocusEvent, args: [Q.SyntheticFocusEvent0]}, {func: 1, ret: V.SyntheticFormEvent, args: [Q.SyntheticFormEvent0]}, {func: 1, ret: V.SyntheticMouseEvent, args: [Q.SyntheticMouseEvent0]}, {func: 1, ret: V.SyntheticTouchEvent, args: [Q.SyntheticTouchEvent0]}, {func: 1, ret: V.SyntheticUIEvent, args: [Q.SyntheticUIEvent0]}, {func: 1, ret: V.SyntheticWheelEvent, args: [Q.SyntheticWheelEvent0]}, {func: 1, args: [, P.String,,]}, {func: 1, ret: K.ReactComponent, args: [K.ReactElement, W.Element]}, {func: 1, ret: P.Future, args: [,]}, {func: 1, args: [N.GitHubSearchResult, N.GitHubSearchResult]}];
  function convertToFastObject(properties) {
    function MyClass() {
    }
    MyClass.prototype = properties;
    new MyClass();
    return properties;
  }
  function convertToSlowObject(properties) {
    properties.__MAGIC_SLOW_PROPERTY = 1;
    delete properties.__MAGIC_SLOW_PROPERTY;
    return properties;
  }
  A = convertToFastObject(A);
  B = convertToFastObject(B);
  C = convertToFastObject(C);
  D = convertToFastObject(D);
  E = convertToFastObject(E);
  F = convertToFastObject(F);
  G = convertToFastObject(G);
  H = convertToFastObject(H);
  J = convertToFastObject(J);
  K = convertToFastObject(K);
  L = convertToFastObject(L);
  M = convertToFastObject(M);
  N = convertToFastObject(N);
  O = convertToFastObject(O);
  P = convertToFastObject(P);
  Q = convertToFastObject(Q);
  R = convertToFastObject(R);
  S = convertToFastObject(S);
  T = convertToFastObject(T);
  U = convertToFastObject(U);
  V = convertToFastObject(V);
  W = convertToFastObject(W);
  X = convertToFastObject(X);
  Y = convertToFastObject(Y);
  Z = convertToFastObject(Z);
  function init() {
    Isolate.$isolateProperties = Object.create(null);
    init.allClasses = map();
    init.getTypeFromName = function(name) {
      return init.allClasses[name];
    };
    init.interceptorsByTag = map();
    init.leafTags = map();
    init.finishedClasses = map();
    Isolate.$lazy = function(fieldName, getterName, lazyValue, staticName, prototype) {
      if (!init.lazies)
        init.lazies = Object.create(null);
      init.lazies[fieldName] = getterName;
      prototype = prototype || Isolate.$isolateProperties;
      var sentinelUndefined = {};
      var sentinelInProgress = {};
      prototype[fieldName] = sentinelUndefined;
      prototype[getterName] = function() {
        var result = this[fieldName];
        try {
          if (result === sentinelUndefined) {
            this[fieldName] = sentinelInProgress;
            try {
              result = this[fieldName] = lazyValue();
            } finally {
              if (result === sentinelUndefined)
                this[fieldName] = null;
            }
          } else
            if (result === sentinelInProgress)
              H.throwCyclicInit(staticName || fieldName);
          return result;
        } finally {
          this[getterName] = function() {
            return this[fieldName];
          };
        }
      };
    };
    Isolate.$finishIsolateConstructor = function(oldIsolate) {
      var isolateProperties = oldIsolate.$isolateProperties;
      function Isolate() {
        var staticNames = Object.keys(isolateProperties);
        for (var i = 0; i < staticNames.length; i++) {
          var staticName = staticNames[i];
          this[staticName] = isolateProperties[staticName];
        }
        var lazies = init.lazies;
        var lazyInitializers = lazies ? Object.keys(lazies) : [];
        for (var i = 0; i < lazyInitializers.length; i++)
          this[lazies[lazyInitializers[i]]] = null;
        function ForceEfficientMap() {
        }
        ForceEfficientMap.prototype = this;
        new ForceEfficientMap();
        for (var i = 0; i < lazyInitializers.length; i++) {
          var lazyInitName = lazies[lazyInitializers[i]];
          this[lazyInitName] = isolateProperties[lazyInitName];
        }
      }
      Isolate.prototype = oldIsolate.prototype;
      Isolate.prototype.constructor = Isolate;
      Isolate.$isolateProperties = isolateProperties;
      Isolate.makeConstantList = oldIsolate.makeConstantList;
      Isolate.functionThatReturnsNull = oldIsolate.functionThatReturnsNull;
      return Isolate;
    };
  }
  !function() {
    var intern = function(s) {
      var o = {};
      o[s] = 1;
      return Object.keys(convertToFastObject(o))[0];
    };
    init.getIsolateTag = function(name) {
      return intern("___dart_" + name + init.isolateTag);
    };
    var tableProperty = "___dart_isolate_tags_";
    var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
    var rootProperty = "_ZxYxX";
    for (var i = 0;; i++) {
      var property = intern(rootProperty + "_" + i + "_");
      if (!(property in usedProperties)) {
        usedProperties[property] = 1;
        init.isolateTag = property;
        break;
      }
    }
    init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
  }();
  // BEGIN invoke [main].
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(function(a) {
        H.startRootIsolate(F.main__main$closure(), a);
      }, []);
    else
      (function(a) {
        H.startRootIsolate(F.main__main$closure(), a);
      })([]);
  });
  // END invoke [main].
})();
